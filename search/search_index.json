{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Automate and integrate with Incydr","text":"<p>Welcome to the Code42 Developer Portal! Here you will find resources to assist you in leveraging the Code42 platform for automation and scripting. Code42 offers a powerful set of tools you can use for everything from performing automated actions to integrating with your company's security applications.</p> <p>We offer several different approaches to integrate into Code42 so you can choose the right level of control mixed with your desired simplicity to integrate into our product.</p> Tool Interface Primary use Flexibility Development Time Code42 REST API language/http client of your choice Fully customized solution Most Moderate Incydr SDK - Python Python library Custom scripting Moderate Moderate Incydr SDK - CLI Command Line Prebuilt, out-of-the-box scripts Least Least"},{"location":"#rest-api","title":"REST API","text":"<p>The Code42 REST API is available for a wide variety of use cases, from performing automated actions to integrating with existing systems. The Code42 API is accessible through many tools, such as web browsers, scripting tools, and programming languages.</p>"},{"location":"#example-use-cases","title":"Example Use Cases","text":"<ul> <li>Directly having another tool provision or de-provision users</li> <li>Complex workflow applications where Python isn't available</li> <li>Applications where direct control over options is a necessity</li> </ul> <p>Code42 API access is included with any licensed subscription of a Code42 product. See our reference documentation for the complete schema and methods available.</p>"},{"location":"#incydr-sdk","title":"Incydr SDK","text":"<p>The Incydr SDK is a Python wrapper around the public Code42 APIs with some additional utility.</p> <p>The SDK contains a Python client and a CLI tool extension to accelerate development of internal applications using the Incydr platform, while avoiding the overhead of session or authentication management, paging, and JSON parsing.</p> <p>We welcome submissions of code as well as ideas to our open source GitHub repository to be considered for a future update.</p>"},{"location":"#python-sdk","title":"Python SDK","text":"<p>The Incydr SDK provides a Python client for interacting with the Code42 Incydr API.</p>"},{"location":"#example-use-cases_1","title":"Example Use Cases","text":"<ul> <li>Search file events</li> <li>Manage watchlist membership</li> <li>Manage users and risk profiles</li> </ul> <p>For more information, see the full Incydr Python SDK Documentation.</p>"},{"location":"#cli-tool","title":"CLI Tool","text":"<p>The Incydr SDK CLI tool is an extension of the Python SDK and offers a way to interact with your Code42 environment without using the Code42 console or making API calls directly. If you have familiarity with command line tools, Code42, and have Python and PyPI (pip) installed, you can get started quickly and easily with the Incydr SDK CLI.</p>"},{"location":"#example-use-cases_2","title":"Example Use Cases","text":"<ul> <li>Automate watchlist membership</li> <li>Automate user management</li> <li>Extract events from Code42, and optionally send them to a syslog server or SIEM</li> </ul> <p>Setting the CLI to run as a scheduled task in Windows or added to the crontab in Linux can quickly get automations up and running.</p> <p>For more information, see the full Incydr CLI tool documentation.</p>"},{"location":"#preservation-tools","title":"Preservation Tools","text":"<p>Note</p> <p>The following resources provide preservation capabilities unavailable in the Incydr SDK. They will no longer be updated with the latest security functionality. Use the Incydr SDK for all security-related use cases.</p>"},{"location":"#py42","title":"Py42","text":"<p>Py42 is an open source Python SDK wrapper around the Code42 API that also provides several utility methods.</p> <p>For more information, see the full py42 documentation.</p>"},{"location":"#code42-command-line-interface","title":"Code42 Command-line Interface","text":"<p>The Code42 command-line interface (CLI) offers a way to interact with your Code42 environment without using the Code42 console or making API calls directly.</p> <p>For more information, see the full Code42 CLI documentation.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"cli/","title":"Introduction","text":"<p>The Incydr CLI is a command line tool for interacting with the Code42 Incydr API created with Click. It's built on top of the Incydr SDK Python client and the Requests HTTP library.</p>"},{"location":"cli/#installation","title":"Installation","text":"<p>Install the CLI extension to the Incydr SDK with pip.  Use the following command:</p> <pre><code>$ pip install 'incydr[cli]'\n</code></pre> <p>See Getting Started for more further details on setting up your Incydr CLI.</p>"},{"location":"cli/#commands","title":"Commands","text":"<p>The <code>incydr</code> command contains subcommand groups that map to each API action described in the Code42 API Reference. It offers a command for each API endpoint with options and arguments that correspond to request parameters.</p> <p>The following subcommand groups are available under the <code>incydr</code> command:</p> <ul> <li>Actors</li> <li>Agents</li> <li>Alert Rules</li> <li>Alerts (Deprecated)</li> <li>Audit Log</li> <li>Cases</li> <li>Departments</li> <li>Devices</li> <li>Directory Groups</li> <li>File Events</li> <li>Risk Profiles</li> <li>Sessions</li> <li>Trusted Activities</li> <li>Users</li> <li>Watchlists</li> </ul>"},{"location":"cli/bulk/","title":"Bulk Commands","text":"<p>Bulk functionality is available for many CLI commands.  Bulk commands will all contain the <code>bulk-</code> prefix in the subcommand.</p> <p>All bulk methods take a single argument FILE as input in either CSV or JSON Lines format.</p> <p>File format defaults to CSV.  To specify a JSON Lines file, pass the <code>--format json-lines</code> option with a bulk command. Use <code>--help</code> with a bulk command to view the necessary columns/keys for the input file.</p> <p>CSV files accept common aliases for fields and will perform additional lookups for usernames to simplify passing data between commands.  For example, a command that requires a <code>user</code> column will also accept a column labeled as <code>userId</code>, <code>user_id</code>, or <code>username</code>.</p> <p>The following example command will update multiple cases:</p> <pre><code>incydr cases bulk-update bulk_update_cases.csv\n</code></pre> <p>Add the <code>--format</code> option to pass a JSON Lines formatted file</p> <pre><code>incydr cases bulk-update bulk_update_cases.jsonl --format json-lines\n</code></pre> <p>If there are parsing errors, error messages will be output to the console and more details will be available in the logs once the command has completed and the entire file has attempted to be parsed.</p> <p>For more information on logging, see Logging.</p>"},{"location":"cli/getting_started/","title":"Getting Started","text":"<p>This is a brief user guide for getting started with Incydr CLI tool.  For more details on installation see Incydr CLI.</p> <p>For details on how to migrate from the original Code42 CLI to the Incydr CLI, see Migration.</p>"},{"location":"cli/getting_started/#authentication","title":"Authentication","text":"<p>To authenticate your CLI tool, configure an API client through the Incydr console and store the client ID, the secret, and the URL as settings.</p> <p>Settings are loaded in the following priority:</p> <ul> <li>Shell environment variables</li> <li>An .env file in the current working directory</li> <li>An .env file in <code>~/.config/incydr</code> directory</li> </ul> <p>The following values should be present in one of the above locations:</p> <pre><code>INCYDR_API_CLIENT_ID='api-client-key'\nINCYDR_API_CLIENT_SECRET='api-client-secret'\nINCYDR_URL='api_domain'\n</code></pre> <p>You must update the <code>api_domain</code> value for your specific environment. To find the correct value, identify the URL you use to sign in to the Code42 web console, then note the corresponding API Domain value in the table below. Use https for all API requests.</p> Console Domain API Domain console.us.code42.com https://api.us.code42.com console.us2.code42.com https://api.us2.code42.com console.ie.code42.com https://api.ie.code42.com console.gov.code42.com https://api.gov.code42.com <p>See Incydr SDK Settings for more available settings.</p>"},{"location":"cli/getting_started/#output","title":"Output","text":""},{"location":"cli/getting_started/#rich","title":"Rich","text":"<p>The Incydr CLI uses Rich to format help messages and command outputs.</p> <p>To disable Rich formatting in your log output, set <code>INCYDR_USE_RICH=false</code> in your environment configuration.</p> <p>If Rich is disabled, outputs will default to JSON format.</p>"},{"location":"cli/getting_started/#lists","title":"Lists","text":"<p>For lists, data can be output in a rich-formatted <code>table</code>, <code>csv</code>, <code>json-pretty</code>, or <code>json-lines</code> format.  In most cases, format defaults to <code>table</code> but can be specified with the <code>--format</code>/<code>-f</code> option.</p> <p>Table output is intended to be a human-readable summary of the data and may default to a limited number of columns in some cases. CSV output defaults to include all columns. Use the <code>--columns</code> option with either <code>table</code> or <code>csv</code> format to specify which columns should be included.</p> <pre><code>incydr users list --columns username,first_name,last_name\n</code></pre> <p>JSON Lines and CSV formatted outputs can be used in tandem with Incydr bulk commands to manage multiple entities at once.</p>"},{"location":"cli/getting_started/#single-element","title":"Single Element","text":"<p>For single element returns, data generally defaults to a rich-formatted output specified as <code>rich</code>. Other available formats include <code>json-pretty</code>, or <code>json-lines</code> and can be specified with the <code>--format</code>/<code>-f</code> option.</p> <p>An example of the <code>rich</code> output format:</p> <pre><code>$ incydr users show foo.bar@gmail.com --format rich\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 User foo.bar@gmail.com  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 legacy_user_id: 1                              \u2502\n\u2502 user_id: 10                                    \u2502\n\u2502 username: foo.bar@gmail.com                    \u2502\n\u2502 first_name: Foo                                \u2502\n\u2502 last_name: Bar                                 \u2502\n\u2502 legacy_org_id: 10042                           \u2502\n\u2502 org_id: 100                                    \u2502\n\u2502 org_guid: 000-000-000                          \u2502\n\u2502 org_name: Test-Org                             \u2502\n\u2502 notes: None                                    \u2502\n\u2502 active: True                                   \u2502\n\u2502 blocked: False                                 \u2502\n\u2502 creation_date: 2022-11-17T21:05:52.781000Z     \u2502\n\u2502 modification_date: 2022-11-17T21:05:52.781000Z \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre> <p>An example of the <code>json-pretty</code> output format:</p> <p><pre><code>$ incydr users show foo.bar@gmail.com --format json-pretty\n\n{\n  \"legacyUserId\": \"1\",\n  \"userId\": \"10\",\n  \"username\": \"foo.bar@gmail.com\",\n  \"firstName\": \"Foo\",\n  \"lastName\": \"Bar\",\n  \"legacyOrgId\": \"14405\",\n  \"orgId\": \"100\",\n  \"orgGuid\": \"000-000-000\",\n  \"orgName\": \"Test-Org\",\n  \"notes\": null,\n  \"active\": true,\n  \"blocked\": false,\n  \"creationDate\": \"2022-11-17T21:05:52.781000Z\",\n  \"modificationDate\": \"2022-11-17T21:05:52.781000Z\"\n}\n</code></pre> Using <code>--format json-lines</code> would output the same data as <code>json-pretty</code> without any whitespace formatting.</p> <p>More details on JSON Lines format.</p>"},{"location":"cli/logging/","title":"Logging","text":"<p>By default, the <code>incydr.Client</code> uses the Rich library's logging handler and defaults to log level <code>warning</code>.</p> <p>Incydr CLI logging options can be provided at any level of a command.  Any options provided will override the corresponding environment variable settings.</p> <p>For example, the following command will output debug logging to stderr:</p> <pre><code>    incydr users list --log-stderr --log-level debug\n</code></pre> <p>Environment variables can be set and are loaded in the following priority:</p> <ul> <li>Shell environment variables</li> <li>An .env file in the current working directory</li> <li>An .env file in <code>~/.config/incydr</code> directory</li> </ul> <p>See Incydr SDK Settings for more details on available settings.</p>"},{"location":"cli/logging/#log-level","title":"Log Level","text":"<p>The level for logging messages, defaults to <code>warning</code>.</p> <p>Use the <code>--log-level</code> option at any level of a command to change the logging level. Corresponds with the <code>INCYDR_LOG_LEVEL</code> environment variable.</p> <p>See Log Levels for valid Python logging levels.</p>"},{"location":"cli/logging/#log-file","title":"Log File","text":"<p>The file path or file-like object to write log output to, defaults to <code>~/.incydr/log/incydr_cli.log</code></p> <p>Use the <code>--log-file</code> option at any level of a command to change the log file. Corresponds with the <code>INCYDR_LOG_FILE</code> environment variable.</p>"},{"location":"cli/logging/#log-stderr","title":"Log StdErr","text":"<p>Use the <code>--log-stderr</code> flag to log full errors to <code>stderr</code> output, in addition to the log file. Corresponds with the <code>INCYDR_LOG_STDERR</code> environment variable.</p>"},{"location":"cli/migration/","title":"Migration","text":"<p>Documentation on notable changes from the original Code42 CLI tool.</p>"},{"location":"cli/migration/#authentication","title":"Authentication","text":"<p>Authentication was previously done by specifying credentials upon profile creation.  Credentials could either be a username/password for an individual Code42 user, or the key/secret for an API client.</p> <p>Authentication is now done exclusively through environment variables and must be for an API Client.  More details on setting up Incydr CLI Authentication.</p>"},{"location":"cli/migration/#profiles","title":"Profiles","text":"<p>All settings are configured via environment variables.  Individual profiles are no longer available.</p> <p>Stored checkpoints are associated with the API Client ID used for authentication during the command execution.</p>"},{"location":"cli/migration/#unsupported-functionality","title":"Unsupported Functionality","text":"<p>Several commands and other functionality included in the original Code42 CLI are no longer supported in the Incydr CLI.</p> <p>The Incydr CLI is focused exclusively on security-related functionality and only supports actions that correspond with our publicly documented APIs on the Developer Portal. Commands that were previously supported in the original Code42 CLI but are no longer present in the Incydr CLI may have been preservation-related, or they may have leveraged internal and/or deprecated APIs.</p>"},{"location":"cli/migration/#commands","title":"Commands","text":"<p>The commands listed below are unavailable in the Incydr CLI and do not currently have a replacement.</p> <ul> <li><code>devices activate</code></li> <li><code>devices deactivate</code></li> <li><code>devices list-backup-sets</code></li> <li><code>devices rename</code></li> <li><code>orgs show</code></li> <li><code>orgs list</code></li> <li><code>alert-rules add-user</code></li> <li><code>alert-rules remove-user</code></li> <li>all <code>legal-hold</code> commands</li> </ul>"},{"location":"cli/migration/#other-changes","title":"Other Changes","text":"<ul> <li>Backup data is not included in <code>devices list</code> and <code>devices show</code>.</li> <li><code>send-to</code> commands are not available.  Server logging is now done with the <code>--output PROTOCOL:HOSTNAME:PORT</code> option on the <code>alerts search</code>, <code>audit-log search</code>, and <code>file-event search</code> commands.</li> <li><code>departing-employee</code>, <code>high-risk-employee</code>, and <code>detection-lists</code> commands have been deprecated in the original CLI and not available. Use Watchlist commands instead.</li> <li>The V1 file event data model is no longer supported. The Incydr CLI uses the latest V2 file event data model.  Previously, you had to opt into this by enabling the <code>use-v2-file-events</code> profile setting in the Code42 CLI.</li> <li>User token authentication via a username and password is no longer supported. Use API clients for authentication.</li> <li>File event checkpointing now stores the original query it was run with and subsequent runs with the same checkpoint will ignore any additional filters.  All queries require a <code>--start</code> value as fallback for the <code>checkpoint</code>.</li> </ul>"},{"location":"cli/syslogging/","title":"Syslogging","text":"<p>Use the <code>--output</code> option with <code>file-events</code>, <code>alerts</code>, or <code>audit-log</code> queries to log the resulting data to a server.</p> <p>The receiving server can be specified in one of the following formats:</p> <ul> <li><code>PROTOCOL:HOSTNAME:PORT</code></li> <li><code>HOSTNAME:PORT</code></li> <li><code>HOSTNAME</code></li> </ul> <p><code>PROTOCOL</code> defaults to TCP, <code>PORT</code> defaults to 601.</p> <p>Available <code>PROTOCOL</code> values are as follows:</p> <ul> <li><code>TCP</code></li> <li><code>UDP</code></li> <li><code>TLS-TCP</code></li> </ul> <p>Note</p> <p>TCP protocol is recommended because Incydr's logging messages will often be larger than the max size for UDP protocol. Using UDP protocol may result in data being truncated.</p>"},{"location":"cli/syslogging/#example-commands","title":"Example Commands","text":"<p>The following command will send the file-events from the past 5 days to the 601 port at the <code>syslog.example.com</code> server via TCP protocol.</p> <pre><code>incydr file-events search --start P5D --output syslog.example.com\n</code></pre> <p>Specifying all values for the <code>output</code> option would look as follows:</p> <pre><code>--output TCP:syslog.example.com:601\n</code></pre>"},{"location":"cli/cmds/actors/","title":"Actors Commands","text":""},{"location":"cli/cmds/actors/#actors","title":"actors","text":"<p>View and manage Incydr actors.</p> <p>Actors are identities that generate events collected by Incydr. User cloud accounts are consolidated into a single actor through adoption, which tie related actors to one parent actor.</p> <p>The actor commands can be used to retrieve information about actors and their relationships.</p> <p>Usage:</p> <pre><code>actors [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/actors/#actors-list","title":"actors list","text":"<p>List actors.</p> <p>Usage:</p> <pre><code>actors list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --active / --inactive     Filter by active or inactive actors. Defaults to\n                            returning both when when neither option is passed.\n  --name-starts-with TEXT   Find actors whose name (e.g. username/email)\n                            starts with this text, ignoring case.\n  --name-ends-with TEXT     Find actors whose name (e.g. username/email) ends\n                            with this text, ignoring case.\n  --prefer-parent           Returns an actor's parent when applicable. Returns\n                            an actor themselves if they have no parent.\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/actors/#actors-show","title":"actors show","text":"<p>Show actor details.</p> <p>Specify actor by ID or name, either --actor-id or --name is required.</p> <p>Usage:</p> <pre><code>actors show [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --actor-id TEXT            Get an actor by actor ID.\n  --name TEXT                Get an actor by actor name, typically a\n                             username/email address.\n  --prefer-parent            Returns an actor's parent when applicable.\n                             Returns an actor themselves if they have no\n                             parent.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/actors/#actors-show-family","title":"actors show-family","text":"<p>Show an actors family.</p> <p>Specify actor by ID or name, either --actor-id or --name is required.</p> <p>An actor family consists of the the parent actor and any associated children.</p> <p>Usage:</p> <pre><code>actors show-family [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --actor-id TEXT            Get an actor family by the actor ID of one of its\n                             members.\n  --name TEXT                Get an actor family by the actor name of one of\n                             its members, where name is typically a\n                             username/email address.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/agents/","title":"Agents Commands","text":""},{"location":"cli/cmds/agents/#agents","title":"agents","text":"<p>View and manage Incydr agents.</p> <p>Incydr agents run on the endpoints in your environment and monitor for insider risk activity.</p> <p>Usage:</p> <pre><code>agents [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/agents/#agents-bulk-activate","title":"agents bulk-activate","text":"<p>Activate a group of agents from a file (CSV or JSON-LINES formatted).</p> <p>Use <code>-</code> as filename to read from stdin.</p> <p>Input files require a header (for CSV input) or JSON key for each object (for JSON-LINES input) to identify which agent ID to activate.</p> <p>Header and JSON key values that are accepted are: agent_id, agentId, or guid</p> <p>Usage:</p> <pre><code>agents bulk-activate [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/agents/#agents-bulk-deactivate","title":"agents bulk-deactivate","text":"<p>Deactivate a group of agents from a file (CSV or JSON-LINES formatted).</p> <p>Use <code>-</code> as filename to read from stdin.</p> <p>Input files require a header (for CSV input) or JSON key for each object (for JSON-LINES input) to identify which agent ID to deactivate.</p> <p>Header and JSON key values that are accepted are: agent_id, agentId, or guid</p> <p>Usage:</p> <pre><code>agents bulk-deactivate [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/agents/#agents-list","title":"agents list","text":"<p>List agents.</p> <p>Usage:</p> <pre><code>agents list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --active / --inactive     Filter by active or inactive agents. Defaults to\n                            returning both when when neither option is passed.\n  --healthy                 Filter by healthy agents. Agents that have no\n                            health issue types are considered healthy.\n  --unhealthy TEXT          Filter by unhealthy agents. Defaults to returning\n                            all unhealthy agents. Pass a comma delimited list\n                            of health issue types to filter by unhealthy\n                            agents that have (at least) any of the given\n                            health issue type(s). Health issue types include\n                            the following: NOT_CONNECTING,\n                            NOT_SENDING_SECURITY_EVENTS.\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/agents/#agents-show","title":"agents show","text":"<p>Show details for a single agent.</p> <p>Usage:</p> <pre><code>agents show [OPTIONS] AGENT_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/","title":"Alert Rules Commands","text":""},{"location":"cli/cmds/alert_rules/#alert-rules","title":"alert-rules","text":"<p>View and manage alert rules.</p> <p>Usage:</p> <pre><code>alert-rules [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-disable","title":"alert-rules disable","text":"<p>Disable a single rule or a set of rules.</p> <p>Usage:</p> <pre><code>alert-rules disable [OPTIONS] RULE_IDS\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-enable","title":"alert-rules enable","text":"<p>Enable a single rule or a set of rules.</p> <p>Where RULE-IDS is a comma-delimited list of rule IDs to enable.</p> <p>Usage:</p> <pre><code>alert-rules enable [OPTIONS] RULE_IDS\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-list","title":"alert-rules list","text":"<p>List all rules.</p> <p>Usage:</p> <pre><code>alert-rules list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-list-users","title":"alert-rules list-users","text":"<p>Lists the usernames on the rule's username filter.</p> <p>Note that users could either be included on or excluded from the rule depending on the rule's configuration.</p> <p>Usage:</p> <pre><code>alert-rules list-users [OPTIONS] RULE_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-remove-all-users","title":"alert-rules remove-all-users","text":"<p>Remove ALL users from a rule's username filter.</p> <p>Note that the removed users could become either included or excluded from the rule, depending on the rule's configuration.</p> <p>Usage:</p> <pre><code>alert-rules remove-all-users [OPTIONS] RULE_ID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alert_rules/#alert-rules-show","title":"alert-rules show","text":"<p>Show details for a single rule.</p> <p>If using <code>rich</code>, also retrieve the username filter for the rule (if it exists).</p> <p>Usage:</p> <pre><code>alert-rules show [OPTIONS] RULE_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/","title":"Alerts Commands (Deprecated)","text":""},{"location":"cli/cmds/alerts/#alerts","title":"alerts","text":"<p>View and manage alerts.</p> <p>Usage:</p> <pre><code>alerts [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-add-note","title":"alerts add-note","text":"<p>Add an optional note to an alert.</p> <p>Usage:</p> <pre><code>alerts add-note [OPTIONS] ALERT_ID NOTE\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-bulk-update-state","title":"alerts bulk-update-state","text":"<p>Bulk update multiple alerts from a file.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>The --state and --note options to this command will override respective columns/keys in the CSV/JSON input.</p> <p>This allows you to bulk change a set of alerts without having manually modify the state/note value for each CSV or JSON Lines row in the file. For example, to close all currently \"PENDING\" alerts older than : <pre><code>incydr alerts search --end &lt;DATE&gt; --state PENDING --format json-lines | incydr alerts bulk-update-state - --state RESOLVED --note \"bulk resolved alerts older than &lt;DATE&gt;\"\n</code></pre> <p>If --state is not provided, the CSV/JSON input must have a <code>state</code> column/key for each row/object.</p> <p>Usage:</p> <pre><code>alerts bulk-update-state [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]   Specify format of input file: 'csv' or\n                                  'json-lines'.  Defaults to 'csv'.\n  --state [OPEN|RESOLVED|IN_PROGRESS|PENDING]\n                                  Override CSV/JSON input's `state` value with\n                                  this value.\n  --note TEXT                     Override CSV/JSON input's `note` value with\n                                  this value.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-clear-checkpoint","title":"alerts clear-checkpoint","text":"<p>Remove the saved alerts checkpoint from searches made with <code>--checkpoint</code> mode.</p> <p>Usage:</p> <pre><code>alerts clear-checkpoint [OPTIONS] CHECKPOINT_NAME\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-search","title":"alerts search","text":"<p>Search alerts.  Various options are provided to filter query results.</p> <p>Results will be output to the console by default, use the <code>--output</code> option to send data to a server.</p> <p>Checkpointing is available through the <code>--checkpoint &lt;checkpoint-name&gt;</code> option and will only return new results on subsequent queries with that same checkpoint.  Checkpointing filters by timestamp, additional filter options will need to be included in each run.</p> <p>Usage:</p> <pre><code>alerts search [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --checkpoint TEXT               Use a checkpoint with the given name to only\n                                  get search results that were not previously\n                                  retrieved. If a checkpoint for the search\n                                  with the given name doesn't exist, it will\n                                  be created on the first run. Subsequent CLI\n                                  runs with this option and the same name will\n                                  use the stored checkpoint to modify the\n                                  search query and then update the stored\n                                  checkpoint.Checkpointing is most accurate\n                                  with json outputs.  For table and csv\n                                  formats, checkpointing will track the last\n                                  returned event in the table.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  -f, --format TABLEFORMAT        Format to print result. One of 'table',\n                                  'json-pretty', 'json-lines', or 'csv. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'table'.\n  --ignore-cert-validation BOOLEAN\n                                  Set to skip CA certificate validation for\n                                  the TLS-TCP protocol. Incompatible with the\n                                  'certs' option.\n  --certs TEXT                    A CA certificates-chain file for the TLS-TCP\n                                  protocol.\n  --output TEXT                   Use to send the raw-json data in to a syslog\n                                  server.  Pass a string in the format\n                                  PROTOCOL:HOSTNAME:PORT to output to the\n                                  specified server endpoint, where format is\n                                  either TCP, TLS-TCP, or UDP (ex:\n                                  TCP:localhost:5000). Also accepts strings of\n                                  the format HOSTNAME and HOSTNAME:PORT.\n                                  Defaults to TCP protocol on port 601. The\n                                  --certs or --ignore-cert-validation option\n                                  can be used with TLS-TCP format.  Note that\n                                  most data will be too large to be sent via\n                                  UDP protocol.\n  --advanced-query FILENAME       A raw JSON alerts query. Useful for when the\n                                  provided query parameters do not satisfy\n                                  your requirements.  Argument can be passed\n                                  as a string, read from stdin by passing '-',\n                                  or from a filename if prefixed with '@',e.g.\n                                  '--advanced-query @query.json'. WARNING:\n                                  Using advanced queries is incompatible with\n                                  other query-building arguments.  Any\n                                  additional filter options will be ignored.\n  --alert-severity TEXT           Filter by alert severity.  One of [LOW,\n                                  MEDIUM, HIGH].\n  --rule-id TEXT                  Filter by the rule ID that corresponds to\n                                  the rulel which triggered the alert.\n  --state TEXT                    Filter by the state of the alert.  One of\n                                  [OPEN, RESOLVED, IN_PROGRESS, PENDING].\n  --risk-severity TEXT            Filter by risk severity.  One of\n                                  [NO_RISK_INDICATED, LOW, MODERATE, HIGH,\n                                  CRITICAL].\n  --actor-id TEXT                 Filter by the actor ID.\n  --actor TEXT                    Filter by the actor (the user who triggered\n                                  the alert.)\n  --name TEXT                     Filter by the name of the alert.\n  --type TEXT                     Filter by the type of alert. One of\n                                  [FED_ENDPOINT_EXFILTRATION,\n                                  FED_CLOUD_SHARE_PERMISSIONS,\n                                  FED_FILE_TYPE_MISMATCH, FED_FILE_NAME_MATCH,\n                                  FED_COMPOSITE].\n  --alert-id TEXT                 Filter by the unique alert ID.\n  --on TEXT                       Look for alerts created on the date given,\n                                  argument forms are the same as `--start`.\n  --end TEXT                      The end of the date range in which to look\n                                  for alerts, argument format options are the\n                                  same as `--start`.\n  --start TEXT                    The beginning of the date range in which to\n                                  look for alerts. Filters by alert creation\n                                  time. Accepts a date/time in yyyy-MM-dd\n                                  (UTC) or yyyy-MM-dd HH:MM:SS (UTC+24-hr\n                                  time) format.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-show","title":"alerts show","text":"<p>Show the details of a single alert.</p> <p>Usage:</p> <pre><code>alerts show [OPTIONS] ALERT_ID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/alerts/#alerts-update-state","title":"alerts update-state","text":"<p>Change the state of an alert, and optionally add a note.</p> <p>Usage:</p> <pre><code>alerts update-state [OPTIONS] ALERT_ID STATE\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --note TEXT       Optional note to indicate the reason for the state change.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/audit_log/","title":"Audit Log Commands","text":""},{"location":"cli/cmds/audit_log/#audit-log","title":"audit-log","text":"<p>View audit log events.</p> <p>Usage:</p> <pre><code>audit-log [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/audit_log/#audit-log-clear-checkpoint","title":"audit-log clear-checkpoint","text":"<p>Remove the saved audit log checkpoint from searches made with <code>--checkpoint</code> mode.</p> <p>Usage:</p> <pre><code>audit-log clear-checkpoint [OPTIONS] CHECKPOINT_NAME\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/audit_log/#audit-log-download","title":"audit-log download","text":"<p>Download audit log events in CSV format.  Returns up to the most recent 100,000 events that match the search criteria.</p> <p>Use the --path option to specify where to save the CSV.  Defaults to the current directory if not specified.</p> <p>Usage:</p> <pre><code>audit-log download [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --user-types TEXT          Filter events by user type. Comma delimited\n                             string of user types.\n  --resource-ids TEXT        Filter events by resource ID. Comma delimited\n                             string of resource IDs.\n  --event-types TEXT         Filter events by event type. Comma delimited\n                             string of event types.\n  --actor-names TEXT         Filter events by actor usernames. Comma-delimited\n                             string of actor usernames.\n  --actor-ip-addresses TEXT  Filter events by actor IP addresses. Comma-\n                             delimited string of actor IP addresses.\n  --actor-ids TEXT           Filter events by the actor IDs. Comma-delimited\n                             string of actor user IDs.\n  --end TEXT                 The end of the date range in which to look for\n                             audit log events, argument format options are the\n                             same as `--start`.\n  --start TEXT               The beginning of the date range in which to look\n                             for audit log events. Accepts a date/time in\n                             yyyy-MM-dd (UTC) oryyyy-MM-dd HH:MM:SS (UTC+24-hr\n                             time) format.\n  --path DIRECTORY           The file path where to save the CSV. Defaults to\n                             the current directory if not specified.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/audit_log/#audit-log-search","title":"audit-log search","text":"<p>Search audit log events.  Returns all events that match the search criteria with paging.</p> <p>Defaults to searching for most recent events.</p> <p>Results will be output to the console by default, use the <code>--output</code> option to send data to a server.</p> <p>Checkpointing is available through the <code>--checkpoint &lt;checkpoint-name&gt;</code> option and will only return new results on subsequent queries with that same checkpoint. Checkpointing filters by timestamp, additional filter options will need to be included in each run.</p> <p>Usage:</p> <pre><code>audit-log search [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --checkpoint TEXT               Use a checkpoint with the given name to only\n                                  get search results that were not previously\n                                  retrieved. If a checkpoint for the search\n                                  with the given name doesn't exist, it will\n                                  be created on the first run. Subsequent CLI\n                                  runs with this option and the same name will\n                                  use the stored checkpoint to modify the\n                                  search query and then update the stored\n                                  checkpoint.Checkpointing is most accurate\n                                  with json outputs.  For table and csv\n                                  formats, checkpointing will track the last\n                                  returned event in the table.\n  -f, --format [csv|json-lines|json-pretty]\n                                  Format to print result. One of 'json-\n                                  pretty', 'json-lines', or 'csv. 'table'\n                                  format is unavailable due to long processing\n                                  times for very large data sets.If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'json-pretty'.CSV output includes limited\n                                  fields, use audit-log download for a more\n                                  comprehensive CSV download.\n  --user-types TEXT               Filter events by user type. Comma delimited\n                                  string of user types.\n  --resource-ids TEXT             Filter events by resource ID. Comma\n                                  delimited string of resource IDs.\n  --event-types TEXT              Filter events by event type. Comma delimited\n                                  string of event types.\n  --actor-names TEXT              Filter events by actor usernames. Comma-\n                                  delimited string of actor usernames.\n  --actor-ip-addresses TEXT       Filter events by actor IP addresses. Comma-\n                                  delimited string of actor IP addresses.\n  --actor-ids TEXT                Filter events by the actor IDs. Comma-\n                                  delimited string of actor user IDs.\n  --end TEXT                      The end of the date range in which to look\n                                  for audit log events, argument format\n                                  options are the same as `--start`.\n  --start TEXT                    The beginning of the date range in which to\n                                  look for audit log events. Accepts a\n                                  date/time in yyyy-MM-dd (UTC) oryyyy-MM-dd\n                                  HH:MM:SS (UTC+24-hr time) format.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  --ignore-cert-validation BOOLEAN\n                                  Set to skip CA certificate validation for\n                                  the TLS-TCP protocol. Incompatible with the\n                                  'certs' option.\n  --certs TEXT                    A CA certificates-chain file for the TLS-TCP\n                                  protocol.\n  --output TEXT                   Use to send the raw-json data in to a syslog\n                                  server.  Pass a string in the format\n                                  PROTOCOL:HOSTNAME:PORT to output to the\n                                  specified server endpoint, where format is\n                                  either TCP, TLS-TCP, or UDP (ex:\n                                  TCP:localhost:5000). Also accepts strings of\n                                  the format HOSTNAME and HOSTNAME:PORT.\n                                  Defaults to TCP protocol on port 601. The\n                                  --certs or --ignore-cert-validation option\n                                  can be used with TLS-TCP format.  Note that\n                                  most data will be too large to be sent via\n                                  UDP protocol.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/","title":"Cases Commands","text":""},{"location":"cli/cmds/cases/#cases","title":"cases","text":"<p>View and manage cases.</p> <p>Usage:</p> <pre><code>cases [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-bulk-update","title":"cases bulk-update","text":"<p>Bulk update cases from a file.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>Valid CSV columns that correspond to update-able case fields include:</p> <ul> <li><code>number</code> (REQUIRED) - Case number.</li> <li><code>assignee</code> - actor ID or username of the administrator assigned to the case. Performs an additional lookup if a username is passed.</li> <li><code>description</code> - Brief optional description.</li> <li><code>findings</code> - Markdown formatted text summarizing the findings for a case.</li> <li><code>name</code> - Case name.</li> <li><code>status</code> - Case status. One of <code>ARCHIVED</code>, <code>CLOSED</code> or <code>OPEN</code>.</li> <li><code>subject</code> - User ID or username of the case subject. Performs an additional lookup if a username is passed.</li> </ul> <p>Usage:</p> <pre><code>cases bulk-update [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-create","title":"cases create","text":"<p>Create a case.</p> <p>Usage:</p> <pre><code>cases create [OPTIONS] NAME\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT  Case description.\n  --subject TEXT      User of the subject of the case.  Takes a user ID or a\n                      username.  Performs an additional lookup if a username\n                      is passed.\n  --assignee TEXT     User of the assignee of the case. Takes an actor ID or a\n                      username.  Performs an additional lookup if a username\n                      is passed.\n  --findings TEXT     Markdown formatted details of case notes.\n  --log-stderr        Enable logging to stderr.\n  --log-file TEXT     Specify file path to write log output to.\n  --log-level TEXT    Set level for Incydr client logging.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-delete","title":"cases delete","text":"<p>Delete a case.</p> <p>Usage:</p> <pre><code>cases delete [OPTIONS] CASE_NUMBER\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-download","title":"cases download","text":"<p>Download one or more files related to a case to the specified target folder.</p> <p>Defaults to downloading all files if no options are passed.</p> <p>If more than one file is specified the download will be in ZIP format.</p> <p>Usage:</p> <pre><code>cases download [OPTIONS] CASE_NUMBER\n</code></pre> <p>Options:</p> <pre><code>  --path TEXT         The file path where to save the file. Defaults to the\n                      current directory.\n  --summary           Download a case summary in PDF format.\n  --file-events       Download all file event data for a case in CSV format.\n  --source-files      Download the source files for file events associated\n                      with a case.\n  --source-file TEXT  Download a source file for a specific event. Takes the\n                      event ID. Incompatible with other download options.\n  --log-stderr        Enable logging to stderr.\n  --log-file TEXT     Specify file path to write log output to.\n  --log-level TEXT    Set level for Incydr client logging.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-file-events","title":"cases file-events","text":"<p>View and update file events associated with a case.</p> <p>Usage:</p> <pre><code>cases file-events [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-file-events-add","title":"cases file-events add","text":"<p>Attach file events to a case specified by CASE_NUMBER.</p> <p>EVENT_IDS can be either a comma-delimited string of event IDs:</p> <pre><code>add CASE_NUMBER \"id-1,id-2,id-3,...\"\n</code></pre> <p>Or a CSV or JSON Lines formatted file:</p> <pre><code>add CASE_NUMBER @path_to_csv --format csv\n\nadd CASE_NUMBER @path_to_json --format json-lines\n</code></pre> <p>CSV format requires a header row and a column with name matching either \"event_id\" or \"eventId\".</p> <p>Input can also be parsed from stdin using \"-\" as the command argument, so you can add events directly from an <code>incydr file-events search</code> command to a case:</p> <pre><code>incydr file-events search SEARCH_OPTIONS --format json-lines | incydr cases add CASE_NUMBER --format json-lines -\n</code></pre> <p>Usage:</p> <pre><code>cases file-events add [OPTIONS] CASE_NUMBER EVENT_IDS\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-file-events-list","title":"cases file-events list","text":"<p>List file events attached to a case.</p> <p>Usage:</p> <pre><code>cases file-events list [OPTIONS] CASE_NUMBER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-file-events-remove","title":"cases file-events remove","text":"<p>Remove file events from a case specified by CASE_NUMBER.</p> <p>EVENT_IDS can be either a comma-delimited string of event IDs:</p> <pre><code>remove CASE_NUMBER \"id-1,id-2,id-3,...\"\n</code></pre> <p>Or a CSV or JSON Lines formatted file:</p> <pre><code>remove CASE_NUMBER @path_to_csv --format csv\n\nremove CASE_NUMBER @path_to_json --format json-lines\n</code></pre> <p>CSV format requires a header row and a column with name matching either \"event_id\" or \"eventId\".</p> <p>Input can also be parsed from stdin using \"-\" as the command argument, so you can remove all events from a case by sending the output of <code>cases file-events list</code> command into <code>cases file-events remove</code>:</p> <pre><code>incydr cases file-events list CASE_NUMBER --format json-lines | incydr cases remove CASE_NUMBER --format json-lines -\n</code></pre> <p>Usage:</p> <pre><code>cases file-events remove [OPTIONS] CASE_NUMBER EVENT_IDS\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  -f, --format [csv|json-lines]\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-file-events-show","title":"cases file-events show","text":"<p>Show details for a file event attached to a case.</p> <p>Usage:</p> <pre><code>cases file-events show [OPTIONS] CASE_NUMBER EVENT_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-list","title":"cases list","text":"<p>List all cases.</p> <p>Usage:</p> <pre><code>cases list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-show","title":"cases show","text":"<p>Show details for a single case.</p> <p>Usage:</p> <pre><code>cases show [OPTIONS] CASE_NUMBER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/cases/#cases-update","title":"cases update","text":"<p>Update a single case. Pass the updated value for a field to the corresponding command option.</p> <p>Usage:</p> <pre><code>cases update [OPTIONS] CASE_NUMBER\n</code></pre> <p>Options:</p> <pre><code>  --assignee TEXT     The administrator assigned to the case. Takes a user ID\n                      or a username.  Performs an additional lookup if a\n                      username is passed.\n  --description TEXT  Brief optional description.\n  --findings TEXT     Markdown formatted text summarizing the findings for a\n                      case.\n  --name TEXT         Case name.\n  --status TEXT       Case status. One of `ARCHIVED`, `CLOSED` or `OPEN`.\n  --subject TEXT      The case subject. Takes a user ID or a username.\n                      Performs an additional lookup if a username is passed.\n  --log-stderr        Enable logging to stderr.\n  --log-file TEXT     Specify file path to write log output to.\n  --log-level TEXT    Set level for Incydr client logging.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/departments/","title":"Departments Commands","text":""},{"location":"cli/cmds/departments/#departments","title":"departments","text":"<p>View departments.</p> <p>Usage:</p> <pre><code>departments [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/departments/#departments-list","title":"departments list","text":"<p>Retrieve departments that have been pushed to Code42 from SCIM or User Directory Sync.</p> <p>The results can then be used with the watchlists commands to automatically assign users to watchlists by department.</p> <p>Usage:</p> <pre><code>departments list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --name TEXT                Filter by departments with a matching name.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/devices/","title":"Devices Commands","text":""},{"location":"cli/cmds/devices/#devices","title":"devices","text":"<p>View devices.</p> <p>Usage:</p> <pre><code>devices [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/devices/#devices-list","title":"devices list","text":"<p>List devices.</p> <p>Usage:</p> <pre><code>devices list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --active / --inactive     Filter by active or inactive devices. Defaults to\n                            returning both when when neither option is passed.\n  --blocked / --unblocked   Filter by blocked or unblocked devices. Defaults\n                            to returning both when when neither option is\n                            passed.\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/devices/#devices-show","title":"devices show","text":"<p>Show details for a single device.</p> <p>Usage:</p> <pre><code>devices show [OPTIONS] DEVICE_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/directory_groups/","title":"Directory Groups Commands","text":""},{"location":"cli/cmds/directory_groups/#directory-groups","title":"directory-groups","text":"<p>View directory groups.</p> <p>Usage:</p> <pre><code>directory-groups [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/directory_groups/#directory-groups-list","title":"directory-groups list","text":"<p>Retrieve directory group information that has been pushed to Code42 from SCIM or User Directory Sync.</p> <p>The results can then be used with the watchlists commands to automatically assign users to watchlists by directory group.</p> <p>Usage:</p> <pre><code>directory-groups list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --name TEXT               Filter by directory groups with a matching name.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/file_events/","title":"File Events Commands","text":""},{"location":"cli/cmds/file_events/#file-events","title":"file-events","text":"<p>View and manage file events.</p> <p>Usage:</p> <pre><code>file-events [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/file_events/#file-events-clear-checkpoint","title":"file-events clear-checkpoint","text":"<p>Remove the saved file events checkpoint from searches made with <code>--checkpoint</code> mode.</p> <p>Usage:</p> <pre><code>file-events clear-checkpoint [OPTIONS] CHECKPOINT_NAME\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/file_events/#file-events-list-saved-searches","title":"file-events list-saved-searches","text":"<p>List saved searches.</p> <p>Usage:</p> <pre><code>file-events list-saved-searches [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/file_events/#file-events-search","title":"file-events search","text":"<p>Search file events. Various options are provided to filter query results.</p> <p>Use the <code>--saved-search</code> or the <code>--advanced-query</code> option if the available filters don't satisfy your requirements.</p> <p>Defaults to returning events with a risk score &gt;= 1.  Add the <code>--risk-score 0</code> filter to return all events, including those with no risk associated with them.</p> <p>Results will be output to the console by default, use the <code>--output</code> option to send data to a server.</p> <p>Checkpointing is available through the <code>--checkpoint &lt;checkpoint-name&gt;</code> option and will only return new results on subsequent queries with that same checkpoint.  Checkpointing stores the original query it was run with, so additional filters on subsequent runs will be ignored.</p> <p>Usage:</p> <pre><code>file-events search [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --checkpoint TEXT               Use a checkpoint with the given name to only\n                                  get search results that were not previously\n                                  retrieved. If a checkpoint for the search\n                                  with the given name doesn't exist, it will\n                                  be created on the first run. Subsequent CLI\n                                  runs with this option and the same name will\n                                  use the stored checkpoint to modify the\n                                  search query and then update the stored\n                                  checkpoint.Checkpointing is most accurate\n                                  with json outputs.  For table and csv\n                                  formats, checkpointing will track the last\n                                  returned event in the table.\n  -f, --format TABLEFORMAT        Format to print result. One of 'table',\n                                  'json-pretty', 'json-lines', or 'csv. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'table'.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  --ignore-cert-validation BOOLEAN\n                                  Set to skip CA certificate validation for\n                                  the TLS-TCP protocol. Incompatible with the\n                                  'certs' option.\n  --certs TEXT                    A CA certificates-chain file for the TLS-TCP\n                                  protocol.\n  --output TEXT                   Use to send the raw-json data in to a syslog\n                                  server.  Pass a string in the format\n                                  PROTOCOL:HOSTNAME:PORT to output to the\n                                  specified server endpoint, where format is\n                                  either TCP, TLS-TCP, or UDP (ex:\n                                  TCP:localhost:5000). Also accepts strings of\n                                  the format HOSTNAME and HOSTNAME:PORT.\n                                  Defaults to TCP protocol on port 601. The\n                                  --certs or --ignore-cert-validation option\n                                  can be used with TLS-TCP format.  Note that\n                                  most data will be too large to be sent via\n                                  UDP protocol.\n  --advanced-query FILENAME       Get events from a raw JSON file events\n                                  query. Useful for when the provided query\n                                  parameters do not satisfy your requirements.\n                                  Argument can be passed as a string, read\n                                  from stdin by passing '-', or from a\n                                  filename if prefixed with '@',e.g. '--\n                                  advanced-query @query.json'. WARNING: Using\n                                  advanced queries is incompatible with other\n                                  query-building arguments.  Any additional\n                                  filter options will be ignored.\n  --saved-search TEXT             Get events from a saved search with the\n                                  given ID.  WARNING: Using a saved search is\n                                  incompatible with other query-building\n                                  arguments.  Any additional filter options\n                                  will be ignored.\n  --risk-score INTEGER            Filter by risk scores greater than the\n                                  provided value. The risk score is the sum of\n                                  the weights for each risk indicator. This\n                                  score is used to determine the overall risk\n                                  severity of the event.  Defaults to 1.  Set\n                                  to 0 to return all events, including those\n                                  that have no risk associated with them.\n  --risk-severity TEXT            Filter by the general risk assessment of the\n                                  event, based on the numeric score.\n  --risk-indicator TEXT           Filter by a list of risk indicators\n                                  identified for this event. If more than one\n                                  risk indicator applies to this event, the\n                                  sum of all indicators determines the total\n                                  risk score.\n  --file-category TEXT            Filter by the categorization of the file\n                                  that is inferred from MIME type.\n  --file-directory TEXT           Filter by the file location on the user's\n                                  device; a forward or backslash must be\n                                  included at the end of the filepath.\n                                  Possibly null if the file event occurred on\n                                  a cloud provider.\n  --file-name TEXT                Filter by the name of the file, including\n                                  the file extension.\n  --destination-category TEXT     Filter by the category of the file\n                                  destination. For example: Cloud Storage,\n                                  Email, Social Media.\n  --source-category TEXT          Filter by the category of where the file\n                                  originated. For example: Cloud Storage,\n                                  Email, Social Media.\n  --sha256 TEXT                   Filter by the SHA-256 hash of the file\n                                  contents.\n  --md5 TEXT                      Filter by the MD5 hash of the file contents.\n  --username TEXT                 Filter by the Code42 username used to sign\n                                  in to the Code42 app on the device. Null if\n                                  the file event occurred on a cloud provider.\n  --event-action TEXT             Filter by the type of file event observed.\n  --end TEXT                      The end of the date range in which to look\n                                  for file events, argument format options are\n                                  the same as `--start`.\n  --start TEXT                    The beginning of the date range in which to\n                                  look for file events. Accepts a date/time in\n                                  yyyy-MM-dd (UTC) oryyyy-MM-dd HH:MM:SS\n                                  (UTC+24-hr time) format or a duration in the\n                                  form of an ISO-duration string (ex. Pass\n                                  `P7D` to filter for events which occurred in\n                                  the last week).\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/file_events/#file-events-show-saved-search","title":"file-events show-saved-search","text":"<p>Show details for a single saved search.</p> <p>Usage:</p> <pre><code>file-events show-saved-search [OPTIONS] SEARCH_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/risk_profiles/","title":"Risk Profiles Commands","text":""},{"location":"cli/cmds/risk_profiles/#risk-profiles","title":"risk-profiles","text":"<p>View and manage risk profiles.</p> <p>Usage:</p> <pre><code>risk-profiles [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/risk_profiles/#risk-profiles-list","title":"risk-profiles list","text":"<p>List risk profiles.</p> <p>Usage:</p> <pre><code>risk-profiles list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT        Format to print result. One of 'table',\n                                  'json-pretty', 'json-lines', or 'csv. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'table'.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  --support-user / --non-support-user\n                                  Filter by support users or non-support\n                                  users. Defaults to returning both when when\n                                  neither option is passed.\n  --deleted / --non-deleted       Filter by deleted or non-deleted users.\n                                  Defaults to returning both when when neither\n                                  option is passed.\n  --active / --inactive           Filter by active or inactive users. Defaults\n                                  to returning both when when neither option\n                                  is passed.\n  --locality TEXT                 Filter by locality (city).\n  --region TEXT                   Filter by region (state).\n  --country TEXT                  Filter by country.\n  --employment-type TEXT          Filter by employment type.\n  --department TEXT               Filter by department.\n  --division TEXT                 Filter by division.\n  --title TEXT                    Filter by job title.\n  --manager TEXT                  Filter by manager.  Accepts a manager's user\n                                  ID or username, performs an additional\n                                  lookup if a username is passed.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/risk_profiles/#risk-profiles-show","title":"risk-profiles show","text":"<p>Show details for a risk profile.</p> <p>Accepts a user ID or a username.  Performs an additional lookup if a username is passed.</p> <p>Usage:</p> <pre><code>risk-profiles show [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/risk_profiles/#risk-profiles-update","title":"risk-profiles update","text":"<p>Update a risk profile.</p> <p>Accepts a user ID or a username.  Performs an additional lookup if a username is passed.</p> <p>Usage:</p> <pre><code>risk-profiles update [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  --start-date TEXT   Update a user's starting date. Accepts a date in yyyy-\n                      MM-dd (UTC) format.\n  --end-date TEXT     Update a user's departure date. Accepts a date in yyyy-\n                      MM-dd (UTC) format.\n  --notes TEXT        Update the optional notes on a user's profile.\n  --clear-start-date  Clear the start date on a user's profile. Incompatible\n                      with --start-date.\n  --clear-end-date    Clear the end date on a user's profile. Incompatible\n                      with --end-date.\n  --clear-notes       Clear the notes on a user's profile. Incompatible with\n                      --notes.\n  --log-stderr        Enable logging to stderr.\n  --log-file TEXT     Specify file path to write log output to.\n  --log-level TEXT    Set level for Incydr client logging.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/","title":"Sessions Commands","text":""},{"location":"cli/cmds/sessions/#sessions","title":"sessions","text":"<p>View and manage Incydr Sessions, including Alerts.</p> <p>Sessions group all Incydr activity for an individual actor within a specific time frame. Sessions may include file events, alerts, Instructor lessons, and more. A single session can contain one or more alerts.</p> <p>Alerts are triggered when user file activity matches criteria defined in your alert rules. Alerts are included within sessions to group related activity and provide additional context.</p> <p>Usage:</p> <pre><code>sessions [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/#sessions-bulk-update-state","title":"sessions bulk-update-state","text":"<p>Bulk update the state of multiple sessions. Optionally attach a note.</p> <p>NEW_STATE specifies the new state to which sessions will be updated. Must be one of the following: 'OPEN', 'IN_PROGRESS', 'CLOSED', 'CLOSED_TP', 'CLOSED_FP', 'OPEN_NEW_DATA'</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin). File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>The --state and --note options to this command will override respective columns/keys in the CSV/JSON input.</p> <p>Accepts the following columns:</p> <ul> <li><code>session_id</code> (required)</li> <li><code>state</code> (required if --state option is not provided)</li> <li><code>note</code> (optional)</li> </ul> <p>If --state is not provided, the CSV/JSON input must have a <code>state</code> column/key for each row/object.</p> <p>Usage:</p> <pre><code>sessions bulk-update-state [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  --state [OPEN|IN_PROGRESS|CLOSED|CLOSED_TP|CLOSED_FP|OPEN_NEW_DATA]\n                                  Override CSV/JSON input's `state` value with\n                                  this value.\n  --note TEXT                     Override CSV/JSON input's `note` value with\n                                  this value.\n  -f, --format [csv|json-lines]   Specify format of input file: 'csv' or\n                                  'json-lines'.  Defaults to 'csv'.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/#sessions-search","title":"sessions search","text":"<p>Search sessions.</p> <p>Defaults to only include sessions that have alerts associated with them. Use the --no-alerts option to view sessions without any alerts.</p> <p>Usage:</p> <pre><code>sessions search [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --checkpoint TEXT               Use a checkpoint with the given name to only\n                                  get search results that were not previously\n                                  retrieved. If a checkpoint for the search\n                                  with the given name doesn't exist, it will\n                                  be created on the first run. Subsequent CLI\n                                  runs with this option and the same name will\n                                  use the stored checkpoint to modify the\n                                  search query and then update the stored\n                                  checkpoint.Checkpointing is most accurate\n                                  with json outputs.  For table and csv\n                                  formats, checkpointing will track the last\n                                  returned event in the table.\n  --actor-id TEXT                 Limit search to sessions generated by this\n                                  actor.\n  --start TEXT                    Limit search to sessions beginning on or\n                                  after this date and time. Accepts a\n                                  date/time in yyyy-MM-dd (UTC) or yyyy-MM-dd\n                                  HH:MM:SS (UTC+24-hr time) format.\n  --end TEXT                      Limit search to sessions beginning before\n                                  this date and time. Accepts a date/time in\n                                  yyyy-MM-dd (UTC) or yyyy-MM-dd HH:MM:SS\n                                  (UTC+24-hr time) format.\n  --no-alerts                     Limit search to sessions that do NOT have\n                                  alerts associated with them.\n  --risk-indicators TEXT          A CSV list of risk indicator IDs. Limit\n                                  search to sessions that include these risk\n                                  indicators.\n  --state [OPEN|IN_PROGRESS|CLOSED|CLOSED_TP|CLOSED_FP|OPEN_NEW_DATA]\n                                  Limit search to sessions with this state.\n                                  Can be specified multiple times to include\n                                  multiple values.\n  --severity [NO_RISK|LOW|MODERATE|HIGH|CRITICAL]\n                                  Specify one or more severity levels, can be\n                                  specified multiple times to include multiple\n                                  values. Limit search to sessions that have\n                                  the matching severity value(s).\n  --rule-id TEXT                  A rule ID. Limit search to sessions\n                                  associated with this rule. Can be specified\n                                  multiple times to include multiple values.\n  --watchlist-id TEXT             A watchlist ID. Limit search to sessions\n                                  associated with this watchlist. Can be\n                                  specified multiple times to include multiple\n                                  values.\n  --content-inspection-status [PENDING|FOUND|NOT_FOUND]\n                                  Limit search to sessions with the given\n                                  content inspection status.\n  -f, --format TABLEFORMAT        Format to print result. One of 'table',\n                                  'json-pretty', 'json-lines', or 'csv. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'table'.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/#sessions-show","title":"sessions show","text":"<p>Show the details of a single session.</p> <p>Usage:</p> <pre><code>sessions show [OPTIONS] SESSION_ID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/#sessions-show-events","title":"sessions show-events","text":"<p>Show the details of a single session.</p> <p>Usage:</p> <pre><code>sessions show-events [OPTIONS] SESSION_ID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --columns TEXT                  Comma-delimited string of column names.\n                                  Nested values should be specified in dot-\n                                  notation. Limits output to contain only the\n                                  specified columns in CSV or Table format.\n                                  Ignored for JSON output formats.\n  -f, --format TABLEFORMAT        Format to print result. One of 'table',\n                                  'json-pretty', 'json-lines', or 'csv. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'table'.\n  --ignore-cert-validation BOOLEAN\n                                  Set to skip CA certificate validation for\n                                  the TLS-TCP protocol. Incompatible with the\n                                  'certs' option.\n  --certs TEXT                    A CA certificates-chain file for the TLS-TCP\n                                  protocol.\n  --output TEXT                   Use to send the raw-json data in to a syslog\n                                  server.  Pass a string in the format\n                                  PROTOCOL:HOSTNAME:PORT to output to the\n                                  specified server endpoint, where format is\n                                  either TCP, TLS-TCP, or UDP (ex:\n                                  TCP:localhost:5000). Also accepts strings of\n                                  the format HOSTNAME and HOSTNAME:PORT.\n                                  Defaults to TCP protocol on port 601. The\n                                  --certs or --ignore-cert-validation option\n                                  can be used with TLS-TCP format.  Note that\n                                  most data will be too large to be sent via\n                                  UDP protocol.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/sessions/#sessions-update","title":"sessions update","text":"<p>Update the state of and/or the note attached to the session.</p> <p>Usage:</p> <pre><code>sessions update [OPTIONS] SESSION_ID\n</code></pre> <p>Options:</p> <pre><code>  -s, --state [OPEN|IN_PROGRESS|CLOSED|CLOSED_TP|CLOSED_FP|OPEN_NEW_DATA]\n                                  Update a session's state.\n  --note TEXT                     Add a note to the session. Takes the notes\n                                  content with a 2000 character max.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/","title":"Trusted Activities Commands","text":""},{"location":"cli/cmds/trusted_activities/#trusted-activities","title":"trusted-activities","text":"<p>View and manage trusted activities.</p> <p>Usage:</p> <pre><code>trusted-activities [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add","title":"trusted-activities add","text":"<p>Add a new trusted activity.</p> <p>Usage:</p> <pre><code>trusted-activities add [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add-account","title":"trusted-activities add account","text":"<p>Trust activity for a specific corporate account specified by <code>ACCOUNT_NAME</code> for cloud sync apps installed on user devices.</p> <p>Use the <code>--dropbox</code> and/or <code>--one-drive</code> options to indicate trusted cloud sync services for this account.</p> <p>Usage:</p> <pre><code>trusted-activities add account [OPTIONS] ACCOUNT_NAME\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT         Optional description.\n  --dropbox                  Trust Dropbox as a cloud sync service.\n  --one-drive                Trust OneDrive as a cloud sync service.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add-domain","title":"trusted-activities add domain","text":"<p>Trust activity across an entire <code>DOMAIN</code> (ex: <code>my-domain.com</code>).</p> <p>The following activities can be configured:</p> <ul> <li><code>--file-upload</code> - Trust file uploads to this domain.  Defaults to false.</li> <li><code>--git-push</code> - Trust git push events to this domain.  Defaults to false.</li> <li><code>--cloud-sync-services</code> [<code>BOX|GOOGLE_DRIVE|ICLOUD|ONE_DRIVE</code>] - Trust cloud sync activity from the specified service(s) if the username signed into the sync app is on this domain.     If you want to only trust activity for a specific corporate account, add a trusted account name instead.</li> <li><code>--cloud-share-services</code> [<code>BOX|GOOGLE_DRIVE|ONE_DRIVE</code>] - Trust cloud share activity from the specified service(s) if the user its shared with is on this domain.     You must have a cloud connector configured for your tenant to support this trusted action.</li> <li><code>--email-share-services</code> [<code>GMAIL|MICROSOFT_365</code>] - Trust email share activity from the specified service(s) if the email recipient is on this domain.     You must have an email connector configured for your tenant to support this trusted action.</li> </ul> <p>Multiple options can be supplied to specify cloud-share, cloud-sync, and email-share services.</p> <p>For example, the following command will create a trusted domain that trusts file-uploads to the domain and cloud sync events from <code>BOX</code> and <code>ICLOUD</code>.</p> <pre><code>trusted-activities add domain --file-upload --cloud-sync-services BOX --cloud-sync-services ICLOUD\n</code></pre> <p>Usage:</p> <pre><code>trusted-activities add domain [OPTIONS] DOMAIN\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT              Optional description.\n  --file-upload                   Trust file upload events to where the tab\n                                  URL or title includes this domain.\n  --git-push                      Trust git push events to this domain.\n  --cloud-sync [BOX|GOOGLE_DRIVE|ICLOUD|ONE_DRIVE]\n                                  Specify which cloud sync service(s) to\n                                  trust.\n  --cloud-share [BOX|GOOGLE_DRIVE|ONE_DRIVE]\n                                  Specify which cloud share service(s) to\n                                  trust.\n  --email-share [GMAIL|MICROSOFT_365]\n                                  Specify which email share service(s) to\n                                  trust.\n  -f, --format SINGLEFORMAT       Format to print result. One of 'rich',\n                                  'json-pretty', or 'json-lines'. If\n                                  environment has INCYDR_USE_RICH=false set,\n                                  defaults to 'json-lines', else defaults to\n                                  'rich'.\n  --log-stderr                    Enable logging to stderr.\n  --log-file TEXT                 Specify file path to write log output to.\n  --log-level TEXT                Set level for Incydr client logging.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add-git-repo","title":"trusted-activities add git-repo","text":"<p>Trust file upload activity to a git repository.  Requires a <code>GIT_URI</code> path (ex: <code>bitbucket.org:exampleent/myrepo</code>).</p> <p>Usage:</p> <pre><code>trusted-activities add git-repo [OPTIONS] GIT_URI\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT         Optional description.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add-slack-workspace","title":"trusted-activities add slack-workspace","text":"<p>Trust activity uploaded through a Slack workspace specified by <code>WORKSPACE_NAME</code>.</p> <p>Usage:</p> <pre><code>trusted-activities add slack-workspace [OPTIONS] WORKSPACE_NAME\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT         Optional description.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-add-url-path","title":"trusted-activities add url-path","text":"<p>Trust browser uploads to only part of a domain by trusting a specific <code>URL_PATH</code> (ex: <code>my-domain.com/path</code>).</p> <p>Usage:</p> <pre><code>trusted-activities add url-path [OPTIONS] URL_PATH\n</code></pre> <p>Options:</p> <pre><code>  --description TEXT         Optional description.\n  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-delete","title":"trusted-activities delete","text":"<p>Delete a trusted activity.</p> <p>Usage:</p> <pre><code>trusted-activities delete [OPTIONS] ACTIVITY_ID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-list","title":"trusted-activities list","text":"<p>List all trusted activities.</p> <p>Usage:</p> <pre><code>trusted-activities list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --activity-type ACTIVITYTYPE\n  -f, --format TABLEFORMAT      Format to print result. One of 'table', 'json-\n                                pretty', 'json-lines', or 'csv. If environment\n                                has INCYDR_USE_RICH=false set, defaults to\n                                'json-lines', else defaults to 'table'.\n  --columns TEXT                Comma-delimited string of column names. Nested\n                                values should be specified in dot-notation.\n                                Limits output to contain only the specified\n                                columns in CSV or Table format.  Ignored for\n                                JSON output formats.\n  --log-stderr                  Enable logging to stderr.\n  --log-file TEXT               Specify file path to write log output to.\n  --log-level TEXT              Set level for Incydr client logging.\n  --help                        Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-show","title":"trusted-activities show","text":"<p>Show details for a single trusted activity.</p> <p>Includes general info on the trusted activity, as well as any 'Activity Action Groups', which specify various trusted service configurations (if applicable). For example, a trusted domain may include an activity action group indicating <code>GMAIL</code> as a trusted email sharing service.</p> <p>Usage:</p> <pre><code>trusted-activities show [OPTIONS] ACTIVITY_ID\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/trusted_activities/#trusted-activities-update","title":"trusted-activities update","text":"<p>Update a trusted activity.</p> <p>Usage:</p> <pre><code>trusted-activities update [OPTIONS] ACTIVITY_ID\n</code></pre> <p>Options:</p> <pre><code>  --type TEXT\n  --value TEXT\n  --description TEXT\n  --high-value-source BOOLEAN\n  -f, --format SINGLEFORMAT    Format to print result. One of 'rich', 'json-\n                               pretty', or 'json-lines'. If environment has\n                               INCYDR_USE_RICH=false set, defaults to 'json-\n                               lines', else defaults to 'rich'.\n  --log-stderr                 Enable logging to stderr.\n  --log-file TEXT              Specify file path to write log output to.\n  --log-level TEXT             Set level for Incydr client logging.\n  --help                       Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/","title":"Users Commands","text":""},{"location":"cli/cmds/users/#users","title":"users","text":"<p>View and manage users and user roles.</p> <p>Usage:</p> <pre><code>users [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-activate","title":"users activate","text":"<p>Activate a user.</p> <p>Usage:</p> <pre><code>users activate [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-bulk-activate","title":"users bulk-activate","text":"<p>Bulk activate users.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>Requires a single <code>user</code> column or field that contains either the user IDs or the usernames of the users to be activated.</p> <p>Usage:</p> <pre><code>users bulk-activate [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-bulk-deactivate","title":"users bulk-deactivate","text":"<p>Bulk deactivate users.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>Requires a single <code>user</code> column or field that contains either the user IDs or the usernames of the users to be deactivated.</p> <p>Usage:</p> <pre><code>users bulk-deactivate [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-bulk-move","title":"users bulk-move","text":"<p>Bulk move multiple users to specified organizations.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>Requires the following columns:</p> <ul> <li><code>user</code> - User ID or username of the user who will be moved to the new organization. Performs an additional lookup if username is passed.</li> <li><code>org_guid</code> - GUID for the user's new organization.</li> </ul> <p>Usage:</p> <pre><code>users bulk-move [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-bulk-update-roles","title":"users bulk-update-roles","text":"<p>Bulk update roles associated with multiple users from a file.</p> <p>By default, the provided roles will replace the specified user's existing roles. Use the <code>--add</code> flag or the <code>--remove</code> flag to add or remove roles, respectively, from a user's existing roles.</p> <p>Takes a single arg <code>FILE</code> which specifies the path to the file (use \"-\" to read from stdin).</p> <p>File format can either be CSV or JSON Lines format (Default is CSV).</p> <p>Requires the following CSV columns or JSON keys:</p> <ul> <li><code>user</code> - User ID or username of the user whose roles will be updated. Performs an additional lookup if username is passed.</li> <li><code>role</code> - Role ID and/or role name (case-sensitive) to assign to the new user.</li> </ul> <p>Example:</p> <pre><code>The following command will add roles to users as specified in a JSON-lines formatted file:\n\n    incydr users bulk-update-roles path/to/file.json --add --format json-lines\n</code></pre> <p>Usage:</p> <pre><code>users bulk-update-roles [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format [csv|json-lines]  Specify format of input file: 'csv' or 'json-\n                                 lines'.  Defaults to 'csv'.\n  --add\n  --remove\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-deactivate","title":"users deactivate","text":"<p>Deactivate a user.</p> <p>Usage:</p> <pre><code>users deactivate [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-list","title":"users list","text":"<p>List users.</p> <p>Usage:</p> <pre><code>users list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --active / --inactive     Filter by active or inactive users. Defaults to\n                            returning both when when neither option is passed.\n  --blocked / --unblocked   Filter by blocked or unblocked users. Defaults to\n                            returning both when when neither option is passed.\n  --username TEXT\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-list-devices","title":"users list-devices","text":"<p>List devices associated with a particular user.</p> <p>Usage:</p> <pre><code>users list-devices [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-list-roles","title":"users list-roles","text":"<p>List roles associated with a particular user.</p> <p>Usage:</p> <pre><code>users list-roles [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-move","title":"users move","text":"<p>Move a user to a specified organization.</p> <p>Usage:</p> <pre><code>users move [OPTIONS] USER ORG_GUID\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-roles","title":"users roles","text":"<p>View available roles.</p> <p>Usage:</p> <pre><code>users roles [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-roles-list","title":"users roles list","text":"<p>List all available roles that can be assigned by the current user.</p> <p>Usage:</p> <pre><code>users roles list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-roles-show","title":"users roles show","text":"<p>Show details for a single role, specified by role name or role ID.</p> <p>Usage:</p> <pre><code>users roles show [OPTIONS] ROLE\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-show","title":"users show","text":"<p>Show details for a user.</p> <p>Accepts a user ID or a username.  Performs an additional lookup if username is passed.</p> <p>Usage:</p> <pre><code>users show [OPTIONS] USER\n</code></pre> <p>Options:</p> <pre><code>  -f, --format SINGLEFORMAT  Format to print result. One of 'rich', 'json-\n                             pretty', or 'json-lines'. If environment has\n                             INCYDR_USE_RICH=false set, defaults to 'json-\n                             lines', else defaults to 'rich'.\n  --log-stderr               Enable logging to stderr.\n  --log-file TEXT            Specify file path to write log output to.\n  --log-level TEXT           Set level for Incydr client logging.\n  --help                     Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/users/#users-update-roles","title":"users update-roles","text":"<p>Update roles associated with a particular user.</p> <p>Usage:     users update-roles USER ROLES</p> <p>USER is the user ID or username of the user whose roles will be updated. Performs an additional lookup if username is passed.</p> <p>ROLES is a comma-delimited list of role IDs and/or role names to replace that user's roles.</p> <p>Use the <code>--remove</code> flag to remove the specified role(s) from a user's existing roles.</p> <p>Alternatively, use the <code>--add</code> flag to assign additional roles to a user's existing roles.</p> <p>Usage:</p> <pre><code>users update-roles [OPTIONS] USER ROLES\n</code></pre> <p>Options:</p> <pre><code>  --add\n  --remove\n  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/","title":"Watchlist Commands","text":""},{"location":"cli/cmds/watchlists/#watchlists","title":"watchlists","text":"<p>View and manage watchlists.</p> <p>After creation, Watchlists can be managed by type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be managed by title or ID.</p> <p>The following values are valid watchlist types:</p> <pre><code>* CONTRACT_EMPLOYEE\n* DEPARTING_EMPLOYEE\n* ELEVATED_ACCESS_PRIVILEGES\n* FLIGHT_RISK\n* HIGH_IMPACT_EMPLOYEE\n* NEW_EMPLOYEE\n* PERFORMANCE_CONCERNS\n* POOR_SECURITY_PRACTICES\n* SUSPICIOUS_SYSTEM_ACTIVITY\n* CUSTOM\n</code></pre> <p>Usage:</p> <pre><code>watchlists [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-add","title":"watchlists add","text":"<p>Manage watchlist membership by including or excluding individual users and/or groups.</p> <p>Add any of the following members to a watchlist with the corresponding options:</p> <ul> <li>users</li> <li>excluded-users</li> <li>departments</li> <li>directory-groups</li> </ul> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>If adding or excluding more than 100 users in a single run, the CLI will automatically batch requests due to a limit of 100 per request on the backend.</p> <p>Usage:</p> <pre><code>watchlists add [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  --users FILENAME               List of user IDs or usernames to include on\n                                 the watchlist. An additional lookup is\n                                 performed if a username is passed. Argument\n                                 can be passed as a comma-delimited string or\n                                 from a CSV file with a single 'user' column\n                                 if prefixed with '@', e.g. '--users\n                                 @users.csv'.\n  --excluded-users FILENAME      List of user IDs or usernames to exclude from\n                                 the watchlist. An additional lookup is\n                                 performed if a username is passed. Argument\n                                 can be passed as a comma-delimited string or\n                                 from a CSV file with a single 'user' column\n                                 if prefixed with '@', e.g. '--users\n                                 @users.csv'.\n  --departments TEXT             Comma-delimited string of department names to\n                                 include on the watchlist. Individual users\n                                 from the departments will be added as\n                                 watchlist members, where department\n                                 information comes from SCIM or User Directory\n                                 Sync.\n  --directory-groups TEXT        Comma-delimited string of directory group IDs\n                                 to include on the watchlist. Individual users\n                                 from the directory groups will be added as\n                                 watchlist members, where group information\n                                 comes from SCIM or User Directory Sync.\n  -f, --format [csv|json-lines]  Specify format of input file(s): 'csv' or\n                                 'json-lines'. Defaults to 'csv'. Multiple\n                                 input files must all be the same format.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-create","title":"watchlists create","text":"<p>Create a new watchlist.</p> <p>Where <code>WATCHLIST_TYPE</code> is of the following:</p> <ul> <li><code>CONTRACT_EMPLOYEE</code></li> <li><code>DEPARTING_EMPLOYEE</code></li> <li><code>ELEVATED_ACCESS_PRIVILEGES</code></li> <li><code>FLIGHT_RISK</code></li> <li><code>HIGH_IMPACT_EMPLOYEE</code></li> <li><code>NEW_EMPLOYEE</code></li> <li><code>PERFORMANCE_CONCERNS</code></li> <li><code>POOR_SECURITY_PRACTICES</code></li> <li><code>SUSPICIOUS_SYSTEM_ACTIVITY</code></li> <li><code>CUSTOM</code></li> </ul> <p>The <code>--title</code> (required) and <code>--description</code> (optional) options are exclusively for creating CUSTOM watchlists.</p> <p>Usage:</p> <pre><code>watchlists create [OPTIONS] WATCHLIST_TYPE\n</code></pre> <p>Options:</p> <pre><code>  --title TEXT        Required title for a CUSTOM watchlist.\n  --description TEXT  Optional description for a CUSTOM watchlist.\n  --log-stderr        Enable logging to stderr.\n  --log-file TEXT     Specify file path to write log output to.\n  --log-level TEXT    Set level for Incydr client logging.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-delete","title":"watchlists delete","text":"<p>Delete a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists delete [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list","title":"watchlists list","text":"<p>List watchlists.</p> <p>Usage:</p> <pre><code>watchlists list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --user TEXT               Filter by watchlists where the user is a member.\n                            Accepts a user ID or a username.  Performs an\n                            additional lookup if a username is passed\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list-departments","title":"watchlists list-departments","text":"<p>List departments included on a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists list-departments [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list-directory-groups","title":"watchlists list-directory-groups","text":"<p>List directory groups included on a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists list-directory-groups [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list-excluded-users","title":"watchlists list-excluded-users","text":"<p>List users excluded from a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists list-excluded-users [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list-included-users","title":"watchlists list-included-users","text":"<p>List users explicitly included on a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists list-included-users [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-list-members","title":"watchlists list-members","text":"<p>List members of a watchlist.</p> <p>A member may have been added as an included user, or is a member of an included department, etc.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>Usage:</p> <pre><code>watchlists list-members [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  --columns TEXT            Comma-delimited string of column names. Nested\n                            values should be specified in dot-notation. Limits\n                            output to contain only the specified columns in\n                            CSV or Table format.  Ignored for JSON output\n                            formats.\n  -f, --format TABLEFORMAT  Format to print result. One of 'table', 'json-\n                            pretty', 'json-lines', or 'csv. If environment has\n                            INCYDR_USE_RICH=false set, defaults to 'json-\n                            lines', else defaults to 'table'.\n  --log-stderr              Enable logging to stderr.\n  --log-file TEXT           Specify file path to write log output to.\n  --log-level TEXT          Set level for Incydr client logging.\n  --help                    Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-remove","title":"watchlists remove","text":"<p>Manage watchlist membership by removing individual users and/or groups.</p> <p>Remove any of the following members from a watchlist with the corresponding options:</p> <ul> <li>users</li> <li>excluded-users</li> <li>departments</li> <li>directory-groups</li> </ul> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>If removing more than users or exclusions in a single run, the CLI will automatically batch requests due to a limit of 100 per request on the backend.</p> <p>Usage:</p> <pre><code>watchlists remove [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  --users FILENAME               List of included user IDs or usernames to\n                                 remove from the watchlist. An additional\n                                 lookup is performed if a username is\n                                 passed.Argument can be passed as a comma-\n                                 delimited string or as a file if prefixed\n                                 with '@', e.g. '--users @users.csv'. File\n                                 should have a single 'user' field.  File\n                                 format can either be CSV or JSON Lines\n                                 format, as specified with the --format option\n                                 (Default is CSV).\n  --excluded-users FILENAME      List of excluded user IDs or usernames to\n                                 remove from the watchlist. An additional\n                                 lookup is performed if a username is passed.\n                                 Argument can be passed as a comma-delimited\n                                 string or as a file if prefixed with '@',\n                                 e.g. '--users @users.csv'. File should have a\n                                 single 'user' field.  File format can either\n                                 be CSV or JSON Lines format, as specified\n                                 with the --format option (Default is CSV).\n  --departments TEXT             Comma-delimited string of department names to\n                                 remove from the watchlist. Individual users\n                                 from the departments will be added as\n                                 watchlist members, where department\n                                 information comes from SCIM or User Directory\n                                 Sync.\n  --directory-groups TEXT        Comma-delimited string of directory group IDs\n                                 to remove from the watchlist. Individual\n                                 users from the directory groups will be added\n                                 as watchlist members, where group information\n                                 comes from SCIM or User Directory Sync.\n  -f, --format [csv|json-lines]  Specify format of input file(s): 'csv' or\n                                 'json-lines'. Defaults to 'csv'. Multiple\n                                 input files must all be the same format.\n  --log-stderr                   Enable logging to stderr.\n  --log-file TEXT                Specify file path to write log output to.\n  --log-level TEXT               Set level for Incydr client logging.\n  --help                         Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-show","title":"watchlists show","text":"<p>Show details for a watchlist.</p> <p>WATCHLIST can be specified by watchlist type (ex: <code>DEPARTING_EMPLOYEE</code>) or ID. <code>CUSTOM</code> watchlists must be specified by title or ID.</p> <p>If using <code>rich</code>, outputs a summary of watchlist information and membership. This includes the following:</p> <ul> <li>included_users</li> <li>excluded_users</li> <li>included_departments</li> <li>included_directory_groups</li> </ul> <p>Lists of users will be truncated to only display the first 25 members, use the <code>list-included-users</code> and <code>list-excluded-users</code> commands respectively to see more details.</p> <p>If not using <code>rich</code>, outputs watchlist information in JSON without additional membership summary information.</p> <p>Usage:</p> <pre><code>watchlists show [OPTIONS] WATCHLIST\n</code></pre> <p>Options:</p> <pre><code>  --log-stderr      Enable logging to stderr.\n  --log-file TEXT   Specify file path to write log output to.\n  --log-level TEXT  Set level for Incydr client logging.\n  --help            Show this message and exit.\n</code></pre>"},{"location":"cli/cmds/watchlists/#watchlists-update","title":"watchlists update","text":"<p>Update a CUSTOM watchlist.</p> <p>Usage:</p> <pre><code>watchlists update [OPTIONS] WATCHLIST_ID\n</code></pre> <p>Options:</p> <pre><code>  --title TEXT         Updated title for a CUSTOM watchlist.\n  --description TEXT   Updated description for a CUSTOM watchlist.\n  --clear-description  Clear the description on a CUSTOM watchlist.\n  --log-stderr         Enable logging to stderr.\n  --log-file TEXT      Specify file path to write log output to.\n  --log-level TEXT     Set level for Incydr client logging.\n  --help               Show this message and exit.\n</code></pre>"},{"location":"integration-guides/","title":"Integration Guides","text":"<p>Here you'll find guides to integrating Code42 with various 3rd party platforms.</p>"},{"location":"integration-guides/sentinel/azure-sentinel-data-collector/","title":"Data Collector API","text":""},{"location":"integration-guides/sentinel/azure-sentinel-data-collector/#prepare-your-environment","title":"Prepare your environment","text":"<ul> <li>Install py42 into your Python environment</li> <li>Create a Code42 API Client to authenticate py42. The <code>Alerts Read</code> permission is required to query alerts.</li> <li>Gather your Azure Log Analytics <code>Workspace ID</code> and either <code>Primary Key</code> or <code>Secondary Key</code> to authenticate requests pushing data into Sentinel.</li> </ul> <p> NOTE: Workspace ID and Keys can be found in your Log Analytics Workspace Settings under Agents Management &gt; Log Analytics agent instructions."},{"location":"integration-guides/sentinel/azure-sentinel-data-collector/#writing-the-script","title":"Writing the script","text":"<p>First, import the py42 SDK client and required classes for building your Alert query:</p> <pre><code>import py42.sdk\nfrom py42.sdk.queries.alerts.alert_query import AlertQuery\nfrom py42.sdk.queries.alerts.filters import DateObserved\n</code></pre> <p>Then construct your query. This example will search for Alerts created within the past 3 days. See py42 documentation for details on how to customize your own query.</p> <pre><code>from datetime import datetime, timedelta\n\ndate_filter = DateObserved.on_or_after(datetime.utcnow() - timedelta(days=3))\nalert_query = AlertQuery(date_filter)\n</code></pre> <p> NOTE: If you are scheduling this script to run regularly, you'll want to store the last retrieved alert's timestamp to use as the starting point for the next query, so you don't ingest duplicate alerts.  <p>Initialize the py42 SDK object with your API client details:</p> <pre><code>sdk = py42.sdk.from_api_client(\n    host_address=\"https://console.us.code42.com\",\n    client_id=\"&lt;your_client_id&gt;\",\n    client_secret=\"&lt;your_secret&gt;\"\n)\n</code></pre> <p>Fetch the alerts with your query:</p> <pre><code>response = sdk.alerts.search(query)\n</code></pre> <p> NOTE: If you anticipate needing to ingest a large number of alerts, you may want to use the search_all_pages() method, which will yield a generator of pages that you can iterate over to get all the results in a single call.  <p>The Sentinel HTTP endpoint accepts a list of JSON objects in the request body, to prepare the py42 response for sending to Sentinel, you just need to extract the <code>alerts</code> data from the py42 response and convert it to a JSON string:</p> <pre><code>import json\n\nresponse = sdk.alerts.search(query)\nbody = json.dumps(response.data[\"alerts\"])\n</code></pre> <p>Then we can use the Python example from the Data Collector API documentation to authenticate and send the Incydr Alerts to Sentinel. The example is recreated here with the py42 code replacing the example data:</p> <pre><code>import json\nimport requests\nimport datetime\nimport hashlib\nimport hmac\nimport base64\n\nimport py42.sdk\nfrom py42.sdk.queries.alerts.alert_query import AlertQuery\nfrom py42.sdk.queries.alerts.filters import DateObserved\n\n# Update the customer ID to your Log Analytics workspace ID\ncustomer_id = 'xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'\n\n# For the shared key, use either the primary or the secondary Connected Sources client authentication key\nshared_key = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\n# This creates a new Custom Log type for Incydr Alerts\nlog_type = 'IncydrAlert'\n\n\n#####################\n##Incydr Alert Query#\n#####################\n\ndate_filter = DateObserved.on_or_after(datetime.datetime.utcnow() - datetime.timedelta(days=3))\nalert_query = AlertQuery(date_filter)\n\nsdk = py42.sdk.from_api_client(\n    host_address=\"https://console.us.code42.com\",\n    client_id=\"&lt;your_client_id&gt;\",\n    client_secret=\"&lt;your_secret&gt;\"\n)\nresponse = sdk.alerts.search(query)\nbody = json.dumps(response.data[\"alerts\"])\n\n#####################\n##Sentinel Functions#\n#####################\n\n# Build the API signature\ndef build_signature(customer_id, shared_key, date, content_length, method, content_type, resource):\n    x_headers = 'x-ms-date:' + date\n    string_to_hash = method + \"\\n\" + str(content_length) + \"\\n\" + content_type + \"\\n\" + x_headers + \"\\n\" + resource\n    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n\n# Build and send a request to the POST API\ndef post_data(customer_id, shared_key, body, log_type):\n    method = 'POST'\n    content_type = 'application/json'\n    resource = '/api/logs'\n    rfc1123date = datetime.datetime.utcnow().strftime('%a, %d %b %Y %H:%M:%S GMT')\n    content_length = len(body)\n    signature = build_signature(customer_id, shared_key, rfc1123date, content_length, method, content_type, resource)\n    uri = 'https://' + customer_id + '.ods.opinsights.azure.com' + resource + '?api-version=2016-04-01'\n\n    headers = {\n        'content-type': content_type,\n        'Authorization': signature,\n        'Log-Type': log_type,\n        'x-ms-date': rfc1123date\n    }\n\n    response = requests.post(uri,data=body, headers=headers)\n    if (response.status_code &gt;= 200 and response.status_code &lt;= 299):\n        print('Accepted')\n    else:\n        print(\"Response code: {}\".format(response.status_code))\n\npost_data(customer_id, shared_key, body, log_type)\n</code></pre> <p>After the script is run, you should be able to query the <code>IncydrAlert_CL</code> log table and see the Incydr Alert data.</p>"},{"location":"integration-guides/sentinel/azure-sentinel-log-analytics/","title":"Log Analytics Agent","text":""},{"location":"integration-guides/sentinel/azure-sentinel-log-analytics/#prepare-your-environment","title":"Prepare your environment","text":"<ul> <li>Install the Azure Log Analytics Agent</li> <li>Install the Code42 CLI</li> <li>Configure a Code42 CLI profile for the <code>omsagent</code> user:<ol> <li>Become the <code>omsagent</code> user: <code>sudo su omsagent</code></li> <li>Create a new Code42 CLI profile: <code>code42 profile create-api-client --name sentinel --server &lt;code42_console_domain&gt; --api-client-id &lt;your_id&gt; --secret &lt;your_secret&gt;</code></li> <li>Test the command you'll be using to ingest Inycdr data, for example: <code>code42 alerts search --begin 3d --format raw-json</code></li> </ol> </li> </ul> <p> NOTE: The Code42 CLI will use the keyring python library to store the API client secret. If the profile creation command prompts <code>Please enter password for encrypted keyring:</code>, then the default keyring store is an encrypted file, which requires a password on every invocation. To store the secret in a plaintext flat file run the following commands as the <code>omsagent</code> user:     - <code>mkdir -p $HOME/.local/share/python_keyring</code>     - <code>echo -e '[backend]\\ndefault-keyring=keyrings.alt.file.PlaintextKeyring\\n' &gt; $HOME/.local/share/python_keyring/keyringrc.cfg</code>"},{"location":"integration-guides/sentinel/azure-sentinel-log-analytics/#configure-the-log-analytics-agent-omsagent","title":"Configure the Log Analytics Agent (<code>omsagent</code>)","text":"<p>Following the steps from Azure Documentation, below is an example config that ingests Incydr Alerts using the Code42 CLI. The configuration examples can be added to <code>/etc/opt/microsoft/omsagent/&lt;workspace id&gt;/conf/omsagent.conf</code> or in their own separate file in the <code>/etc/opt/microsoft/omsagent/&lt;workspace id&gt;/conf/omsagent.d/</code> folder.</p>"},{"location":"integration-guides/sentinel/azure-sentinel-log-analytics/#the-input-configuration","title":"The input configuration","text":"<pre><code>&lt;source&gt;\n  type exec\n  command code42 alerts search -b 1d --format raw-json --checkpoint sentinel\n  format json\n  tag oms.api.incydr\n  run_interval 1h\n&lt;/source&gt;\n</code></pre> <p>The <code>code42</code> command has two important options, the <code>--format raw-json</code> output causes the CLI to write each Alert JSON object to stdout on its own line, and the <code>--checkpoint sentinel</code> option tells the CLI to store the last retrieved alert timestamp in the CLI profile, and subsequent runs will use that checkpoint date as the starting point for the next query. This prevents duplicate alerts from being ingested, as the query will only search for alerts after the last seen one.</p> <p>The <code>tag</code> config value defines what Custom Log table the events will be written to. Whatever is after <code>oms.api.</code> in the tag will become a new Custom Log table (in this example the table name becomes <code>incydr_CL</code>).</p>"},{"location":"integration-guides/sentinel/azure-sentinel-log-analytics/#the-output-configuration","title":"The output configuration","text":"<pre><code>&lt;match oms.api.incydr&gt;\n  type out_oms_api\n  log_level info\n\n  buffer_chunk_limit 5m\n  buffer_type file\n  buffer_path /var/opt/microsoft/omsagent/&lt;workspace id&gt;/state/out_oms_api_incydr*.buffer\n  buffer_queue_limit 10\n  flush_interval 20s\n  retry_limit 10\n  retry_wait 30s\n&lt;/match&gt;\n</code></pre> <p>Once the configuration is saved, restart the <code>omsagent</code> by running: <code>/opt/microsoft/omsagent/bin/service_control restart</code>.</p> <p>You should start seeing Incydr alerts being populated in the <code>incydr_CL</code> table shortly.</p> <p>For issues troubleshooting ingest using the Log Analytics agent, see Microsoft's Troubleshooting FAQ.</p>"},{"location":"integration-guides/sentinel/introduction/","title":"Introduction","text":"<p>Microsoft Sentinel can accept arbitrary json data as Custom Log sources, so you can ingest almost any type of Incydr data for querying within Sentinel, including Alerts, File Events, and Audit Log events.</p> <p>Sentinel has two methods of ingesting JSON data as Custom Log sources: the data collector HTTP API, and the Log Analytics Linux agent. While the examples below will focus on Incydr Alerts, the patterns can be re-used for almost any type of data you can pull from the Code42 API or CLI.</p> <p>Data collector API</p> <p>Log Analytics Agent</p>"},{"location":"sdk/","title":"Introduction","text":"<p>The Incydr SDK is a Python client for interacting with the Code42 Incydr API.</p> <p>It provides a thin wrapper around the Requests HTTP library with helper clients that model Code42 data and validate requests with the help of Pydantic.</p>"},{"location":"sdk/#installation","title":"Installation","text":"<p>Install using pip:</p> <pre><code>$ pip install incydr\n</code></pre> <p>Import the <code>incydr.Client</code> initialize with your Incydr API Client:</p> <pre><code>import incydr\n\nclient = incydr.Client(\n    url=\"api_domain\",\n    api_client_id=\"my_id\",\n    api_client_secret=\"my_secret\" # (1)\n)\n</code></pre> <p>You must update the <code>api_domain</code> value for your specific environment. To find the correct value, identify the URL you use to sign in to the Code42 web console, then note the corresponding API Domain value in the table below. Use https for all API requests.</p> Console Domain API Domain console.us.code42.com https://api.us.code42.com console.us2.code42.com https://api.us2.code42.com console.ie.code42.com https://api.ie.code42.com console.gov.code42.com https://api.gov.code42.com <p>Any arguments that are not provided to the <code>incydr.Client</code> will attempt to be loaded from environment variables or    .env files. See Settings for more details</p> <p>The <code>incydr.Client</code> provides helper methods that map to each API action described in the Code42 API Reference. It offers a sub-client for each endpoint namespace and API version. For example, to interact with <code>/v1/cases</code> endpoints:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client()\n&gt;&gt;&gt; client.cases.v1.create(name=\"Test\", description=\"Created with Incydr SDK\")\nCase(\n    number=28,\n    name='Test',\n    created_at=datetime.datetime(2022, 8, 2, 13, 11, 7, 803762, tzinfo=datetime.timezone.utc),\n    updated_at=datetime.datetime(2022, 8, 2, 13, 11, 7, 803762, tzinfo=datetime.timezone.utc),\n    description='Created with Incydr SDK',\n    findings=None,\n    subject=None,\n    subject_username=None,\n    status='OPEN',\n    assignee=None,\n    assignee_username=None,\n    created_by_user_id=None,\n    created_by_username=None,\n    last_modified_by_user_id=None,\n    last_modified_by_username=None\n)\n</code></pre> <p>Methods return data wrapped in Pydantic model classes, providing great editor support like autocomplete and type hinting.</p>"},{"location":"sdk/client/","title":"Client","text":"class <code>incydr.Client</code>(url=None, api_client_id=None, api_client_secret=None, skip_auth=False, **settings_kwargs) <p>An HTTP client for interacting with the Code42 Incydr API.</p> <p>Parameters:</p> <ul> <li>url: <code>str</code> The url of your Incydr API gateway. See the developer getting started guide     to find your API domain based on your console login URL.</li> <li>api_client_id: <code>str</code> The ID of your Incydr API Client</li> <li>api_client_secret: <code>str</code> The Secret for your Incydr API Client.</li> </ul> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(url=\"&lt;api_domain&gt;\", api_client_id=\"&lt;client_id&gt;\", api_client_secret=\"&lt;client_secret&gt;\")\n</code></pre> <code>settings</code> <p>Property returning an <code>IncydrSettings</code> object that contains the configuration for this client.</p> <code>session</code> <p>Property returning the core <code>requests.Session</code> used to make all HTTP requests.</p> <p>Contains a hook that prepends the base url of the Code42 API gateway to each request url.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; response = client.session.get(\"/v1/users\")\n&gt;&gt;&gt; response\n&lt;Response [200]&gt;\n&gt;&gt;&gt; response.url\n'https://api.us.code42.com/v1/users'\n</code></pre> <code>request_history</code> <p>Property returning a list of the last <code>n</code> number of <code>requests.Response</code> objects received, where <code>n</code> equals the <code>client.settings.max_response_history</code> value (default=5).</p> <p>The most recent request is the first item in the list: <code>client.request_history[0]</code></p> <code>actors</code> <p>Property returning an <code>ActorsClient</code> for interacting with <code>/v*/actors</code> API endpoints.</p> <p>Usage:     &gt;&gt;&gt; clients.actors.v1.get_page()</p> <code>agents</code> <p>Property returning an <code>AgentsClient</code> for interacting with <code>/v*/agents</code> API endpoints. Usage:     &gt;&gt;&gt; client.agents.v1.get_page()</p> <code>alerts</code> <p>(DEPRECATED) Property returning an <code>AlertsClient</code> for interacting with <code>/v*/alerts</code> API endpoints. Usage:     &gt;&gt;&gt; client.alerts.v1.get_page()</p> <code>alert_rules</code> <p>Property returning a <code>AlertRules</code> for interacting with <code>/v*/alert-rules</code> and `/v/alerts/rules API endpoints.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; client.alert_rules.v1.add_users(rule_id='test', users=['user-id-1', 'user-id-2'])\n</code></pre> <code>audit_log</code> <p>Property returning an <code>AuditLogClient</code> for interacting with <code>/v*/audit</code> API endpoints. Usage:     &gt;&gt;&gt; client.audit_log.v1.get_page()</p> <code>cases</code> <p>Property returning a <code>CasesClient</code> for interacting with <code>/v*/cases</code> API endpoints.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; client.cases.v1.create(name=\"Test\", description=\"My Description\")\n</code></pre> <code>customer</code> <p>Property returning a <code>CustomerClient</code> for interacting with <code>/v*/customer</code> API endpoints.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; client.customer.v1.get()\n</code></pre> <code>departments</code> <p>Property returning a <code>DepartmentsClient</code> for interacting with <code>/v*/departments</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.departments.v1.get_page()\n</code></pre> <code>devices</code> <p>Property returning a <code>DevicesClient</code> for interacting with <code>/v*/devices</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.devices.v1.get_page(active=True)\n</code></pre> <code>directory_groups</code> <p>Property returning a <code>DirectoryGroupsClient</code> for interacting with <code>/v*/directory-groups</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.directory_groups.v1.get_page()\n</code></pre> <code>file_events</code> <p>Property returning a <code>FileEventsClient</code> for interacting with <code>/v*/file-events</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; from incydr import EventQuery\n&gt;&gt;&gt; query = EventQuery(start_date='P30D').equals('file.category', 'Document')\n\n&gt;&gt;&gt; client.file_events.v2.search(query)\n</code></pre> <code>sessions</code> <p>Property returning a <code>SessionsClient</code> for interacting with <code>/v*/sessions</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.items.v1.get_page(has_alerts=True)\n</code></pre> <code>trusted_activities</code> <p>Property returning a <code>TrustedActivitiesClient</code> for interacting with <code>/v*/trusted-activities</code> API endpoints.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; client.trusted_activities.v2.get_page()\n</code></pre> <code>users</code> <p>Property returning a <code>UsersClient</code> for interacting with <code>/v*/users</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.users.v1.get_page(active=True)\n</code></pre> <code>risk_profiles</code> <p>Property returning a <code>RiskProfilesClient</code> for interacting with <code>/v*/user_risk_profiles</code> API endpoints.</p> <p>Usage:</p> <pre><code>&gt;&gt;&gt; client.risk_profiles.v1.get_risk_profile(\"23\")\n</code></pre> <code>watchlists</code> <p>Property returning a <code>WatchlistsClient</code> for interacting with <code>/v*/watchlists</code> API endpoints. Usage:</p> <pre><code>&gt;&gt;&gt; client.watchlists.v1.get_page()\n</code></pre>"},{"location":"sdk/enums/","title":"Enums","text":"<p>Documentation on all available enums for the Incydr SDK.</p> <p>The following example command will import all enums:</p> <pre><code>from incydr import enums\n\nopen_alert_state = enums.alerts.AlertState.OPEN\n</code></pre> <p>Individual enum modules can also be imported:</p> <pre><code>from incydr.enums import alerts\n\nopen_alert_state = alerts.AlertState.OPEN\n</code></pre> <p>Note</p> <p>Incydr SDK's enums all inherit from Python's <code>str</code> class.  The <code>str</code> value for each enum can be used wherever that enum class is expected.</p>"},{"location":"sdk/enums/#agents","title":"Agents","text":""},{"location":"sdk/enums/#agent-type","title":"Agent Type","text":"class <code>incydr.enums.agents.AgentType</code>(*values) <p>Possible types of agents.</p> <ul> <li>CODE42AAT = <code>\"CODE42AAT\"</code></li> <li>CODE42 = <code>\"CODE42\"</code></li> <li>COMBINED = <code>\"COMBINED\"</code></li> </ul>"},{"location":"sdk/enums/#agents-sort-keys","title":"Agents Sort Keys","text":"class <code>incydr.enums.agents.SortKeys</code>(*values) <p>Possible keys to sort agents list results by.</p> <ul> <li>NAME = <code>\"NAME\"</code></li> <li>USER_ID = <code>\"USER_ID\"</code></li> <li>AGENT_TYPE = <code>\"AGENT_TYPE\"</code></li> <li>OS_HOSTNAME = <code>\"OS_HOSTNAME\"</code></li> <li>LAST_CONNECTED = <code>\"LAST_CONNECTED\"</code></li> <li>OS_NAME = <code>\"OS_NAME\"</code></li> </ul>"},{"location":"sdk/enums/#alerts-deprecated","title":"Alerts (Deprecated)","text":"<p>Alerts has been replaced by Sessions.</p>"},{"location":"sdk/enums/#alert-severity","title":"Alert Severity","text":"class <code>incydr.enums.alerts.AlertSeverity</code>(*values) <p>Possible severity values for an alert.</p> <ul> <li>LOW = <code>\"LOW\"</code></li> <li>MEDIUM = <code>\"MEDIUM\"</code></li> <li>HIGH = <code>\"HIGH\"</code></li> </ul>"},{"location":"sdk/enums/#alert-state","title":"Alert State","text":"class <code>incydr.enums.alerts.AlertState</code>(*values) <p>Enum indicating possible alert states.</p> <ul> <li>OPEN = <code>\"OPEN\"</code></li> <li>RESOLVED = <code>\"RESOLVED\"</code></li> <li>IN_PROGRESS = <code>\"IN_PROGRESS\"</code></li> <li>PENDING = <code>\"PENDING\"</code></li> </ul>"},{"location":"sdk/enums/#alert-terms","title":"Alert Terms","text":"class <code>incydr.enums.alerts.AlertTerm</code>(*values) <ul> <li>ALERT_ID = <code>\"AlertId\"</code></li> <li>TYPE = <code>\"Type\"</code></li> <li>NAME = <code>\"Name\"</code></li> <li>DESCRIPTION = <code>\"Description\"</code></li> <li>ACTOR = <code>\"Actor\"</code></li> <li>ACTOR_ID = <code>\"ActorId\"</code></li> <li>TARGET = <code>\"Target\"</code></li> <li>RISK_SEVERITY = <code>\"RiskSeverity\"</code></li> <li>CREATED_AT = <code>\"CreatedAt\"</code></li> <li>HAS_AUTH_SIGNIFICANT_WATCHLIST = <code>\"HasAuthSignificantWatchlist\"</code></li> <li>STATE = <code>\"State\"</code></li> <li>STATE_LAST_MODIFIED_AT = <code>\"StateLastModifiedAt\"</code></li> <li>STATE_LAST_MODIFIED_BY = <code>\"StateLastModifiedBy\"</code></li> <li>LAST_MODIFIED_TIME = <code>\"LastModifiedTime\"</code></li> <li>LAST_MODIFIED_BY = <code>\"LastModifiedBy\"</code></li> <li>RULE_ID = <code>\"RuleId\"</code></li> <li>SEVERITY = <code>\"Severity\"</code></li> </ul>"},{"location":"sdk/enums/#risk-severity","title":"Risk Severity","text":"class <code>incydr.enums.alerts.RiskSeverity</code>(*values) <p>Possible Risk severity values.</p> <ul> <li>CRITICAL = <code>\"CRITICAL\"</code></li> <li>HIGH = <code>\"HIGH\"</code></li> <li>MODERATE = <code>\"MODERATE\"</code></li> <li>LOW = <code>\"LOW\"</code></li> <li>NO_RISK_INDICATED = <code>\"NO_RISK_INDICATED\"</code></li> </ul>"},{"location":"sdk/enums/#cases","title":"Cases","text":""},{"location":"sdk/enums/#cases-sort-keys","title":"Cases Sort Keys","text":"class <code>incydr.enums.cases.SortKeys</code>(*values) <p>Possible keys to sort cases list results by.</p> <ul> <li>NAME = <code>\"name\"</code></li> <li>NUMBER = <code>\"number\"</code></li> <li>CREATED_AT = <code>\"createdAt\"</code></li> <li>UPDATED_AT = <code>\"updatedAt\"</code></li> <li>STATUS = <code>\"status\"</code></li> <li>ASSIGNEE_USERNAME = <code>\"assigneeUsername\"</code></li> <li>SUBJECT_USERNAME = <code>\"subjectUsername\"</code></li> </ul>"},{"location":"sdk/enums/#case-statuses","title":"Case Statuses","text":"class <code>incydr.enums.cases.CaseStatus</code>(*values) <p>Possible statuses for a case.</p> <ul> <li>CLOSED: <code>\"CLOSED\"</code></li> <li>OPEN: <code>\"OPEN\"</code></li> </ul>"},{"location":"sdk/enums/#devices","title":"Devices","text":""},{"location":"sdk/enums/#devices-sort-keys","title":"Devices Sort Keys","text":"class <code>incydr.enums.cases.SortKeys</code>(*values) <p>Possible keys to sort cases list results by.</p> <ul> <li>NAME = <code>\"name\"</code></li> <li>OS_HOSTNAME = <code>\"osHostname\"</code></li> <li>OS = <code>\"os\"</code></li> <li>LAST_CONNECTED = <code>\"lastConnected\"</code></li> </ul>"},{"location":"sdk/enums/#file-events","title":"File Events","text":""},{"location":"sdk/enums/#event-search-terms","title":"Event Search Terms","text":"class <code>incydr.enums.file_events.EventSearchTerm</code>(*values) <p>Search terms available to filtering file events.</p> <ul> <li>TIMESTAMP = <code>\"@timestamp\"</code></li> <li>DESTINATION_ACCOUNT_NAME = <code>\"destination.accountName\"</code></li> <li>DESTINATION_ACCOUNT_TYPE = <code>\"destination.accountType\"</code></li> <li>DESTINATION_CATEGORY = <code>\"destination.category\"</code></li> <li>DESTINATION_DOMAINS = <code>\"destination.domains\"</code></li> <li>DESTINATION_EMAIL_RECIPIENTS = <code>\"destination.email.recipients\"</code></li> <li>DESTINATION_EMAIL_SUBJECT = <code>\"destination.email.subject\"</code></li> <li>DESTINATION_IP = <code>\"destination.ip\"</code></li> <li>DESTINATION_NAME = <code>\"destination.name\"</code></li> <li>DESTINATION_OPERATING_SYSTEM = <code>\"destination.operatingSystem\"</code></li> <li>DESTINATION_PRINT_JOB_NAME = <code>\"destination.printJobName\"</code></li> <li>DESTINATION_PRINTED_FILES_BACKUP_PATH = <code>\"destination.printedFilesBackupPath\"</code></li> <li>DESTINATION_PRINTER_NAME = <code>\"destination.printerName\"</code></li> <li>DESTINATION_PRIVATE_IP = <code>\"destination.privateIp\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_BUS_TYPE = <code>\"destination.removableMedia.busType\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_CAPACITY = <code>\"destination.removableMedia.capacity\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_MEDIA_NAME = <code>\"destination.removableMedia.mediaName\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_NAME = <code>\"destination.removableMedia.name\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_PARTITION_ID = <code>\"destination.removableMedia.partitionId\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_SERIAL_NUMBER = <code>\"destination.removableMedia.serialNumber\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_VENDOR = <code>\"destination.removableMedia.vendor\"</code></li> <li>DESTINATION_REMOVABLE_MEDIA_VOLUME_NAME = <code>\"destination.removableMedia.volumeName\"</code></li> <li>DESTINATION_TABS_TITLE = <code>\"destination.tabs.title\"</code></li> <li>DESTINATION_TABS_TITLE_ERROR = <code>\"destination.tabs.titleError\"</code></li> <li>DESTINATION_TABS_URL = <code>\"destination.tabs.url\"</code></li> <li>DESTINATION_TABS_URL_ERROR = <code>\"destination.tabs.urlError\"</code></li> <li>DESTINATION_USER_EMAIL = <code>\"destination.user.email\"</code></li> <li>EVENT_ACTION = <code>\"event.action\"</code></li> <li>EVENT_ID = <code>\"event.id\"</code></li> <li>EVENT_INGESTED = <code>\"event.ingested\"</code></li> <li>EVENT_INSERTED = <code>\"event.inserted\"</code></li> <li>EVENT_OBSERVER = <code>\"event.observer\"</code></li> <li>EVENT_RELATED_EVENTS_AGENT_TIMESTAMP = <code>\"event.relatedEvents.agentTimestamp\"</code></li> <li>EVENT_RELATED_EVENTS_EVENT_ACTION = <code>\"event.relatedEvents.eventAction\"</code></li> <li>EVENT_RELATED_EVENTS_ID = <code>\"event.relatedEvents.id\"</code></li> <li>EVENT_RELATED_EVENTS_SOURCE_CATEGORY = <code>\"event.relatedEvents.sourceCategory\"</code></li> <li>EVENT_RELATED_EVENTS_SOURCE_NAME = <code>\"event.relatedEvents.sourceName\"</code></li> <li>EVENT_RELATED_EVENTS_TABS_TITLE = <code>\"event.relatedEvents.tabs.title\"</code></li> <li>EVENT_RELATED_EVENTS_TABS_TITLE_ERROR = <code>\"event.relatedEvents.tabs.titleError\"</code></li> <li>EVENT_RELATED_EVENTS_TABS_URL = <code>\"event.relatedEvents.tabs.url\"</code></li> <li>EVENT_RELATED_EVENTS_TABS_URL_ERROR = <code>\"event.relatedEvents.tabs.urlError\"</code></li> <li>EVENT_RELATED_EVENTS_USER_EMAIL = <code>\"event.relatedEvents.userEmail\"</code></li> <li>EVENT_SHARE_TYPE = <code>\"event.shareType\"</code></li> <li>FILE_CATEGORY = <code>\"file.category\"</code></li> <li>FILE_CATEGORY_BY_BYTES = <code>\"file.categoryByBytes\"</code></li> <li>FILE_CATEGORY_BY_EXTENSION = <code>\"file.categoryByExtension\"</code></li> <li>FILE_CLASSIFICATIONS_VALUE = <code>\"file.classifications.value\"</code></li> <li>FILE_CLASSIFICATIONS_VENDOR = <code>\"file.classifications.vendor\"</code></li> <li>FILE_CLOUD_DRIVE_ID = <code>\"file.cloudDriveId\"</code></li> <li>FILE_CREATED = <code>\"file.created\"</code></li> <li>FILE_DIRECTORY = <code>\"file.directory\"</code></li> <li>FILE_DIRECTORY_ID = <code>\"file.directoryId\"</code></li> <li>FILE_HASH_MD5 = <code>\"file.hash.md5\"</code></li> <li>FILE_HASH_MD5_ERROR = <code>\"file.hash.md5Error\"</code></li> <li>FILE_HASH_SHA256 = <code>\"file.hash.sha256\"</code></li> <li>FILE_HASH_SHA256_ERROR = <code>\"file.hash.sha256Error\"</code></li> <li>FILE_ID = <code>\"file.id\"</code></li> <li>FILE_MIME_TYPE_BY_BYTES = <code>\"file.mimeTypeByBytes\"</code></li> <li>FILE_MIME_TYPE_BY_EXTENSION = <code>\"file.mimeTypeByExtension\"</code></li> <li>FILE_MODIFIED = <code>\"file.modified\"</code></li> <li>FILE_NAME = <code>\"file.name\"</code></li> <li>FILE_OWNER = <code>\"file.owner\"</code></li> <li>FILE_SIZE_IN_BYTES = <code>\"file.sizeInBytes\"</code></li> <li>FILE_URL = <code>\"file.url\"</code></li> <li>PROCESS_EXECUTABLE = <code>\"process.executable\"</code></li> <li>PROCESS_OWNER = <code>\"process.owner\"</code></li> <li>REPORT_COUNT = <code>\"report.count\"</code></li> <li>REPORT_DESCRIPTION = <code>\"report.description\"</code></li> <li>REPORT_HEADERS = <code>\"report.headers\"</code></li> <li>REPORT_ID = <code>\"report.id\"</code></li> <li>REPORT_NAME = <code>\"report.name\"</code></li> <li>REPORT_TYPE = <code>\"report.type\"</code></li> <li>RISK_INDICATORS_NAME = <code>\"risk.indicators.name\"</code></li> <li>RISK_INDICATORS_WEIGHT = <code>\"risk.indicators.weight\"</code></li> <li>RISK_SCORE = <code>\"risk.score\"</code></li> <li>RISK_SEVERITY = <code>\"risk.severity\"</code></li> <li>RISK_TRUST_REASON = <code>\"risk.trustReason\"</code></li> <li>RISK_TRUSTED = <code>\"risk.trusted\"</code></li> <li>SOURCE_CATEGORY = <code>\"source.category\"</code></li> <li>SOURCE_DOMAIN = <code>\"source.domain\"</code></li> <li>SOURCE_DOMAINS = <code>\"source.domains\"</code></li> <li>SOURCE_EMAIL_FROM = <code>\"source.email.from\"</code></li> <li>SOURCE_EMAIL_SENDER = <code>\"source.email.sender\"</code></li> <li>SOURCE_IP = <code>\"source.ip\"</code></li> <li>SOURCE_NAME = <code>\"source.name\"</code></li> <li>SOURCE_OPERATING_SYSTEM = <code>\"source.operatingSystem\"</code></li> <li>SOURCE_PRIVATE_IP = <code>\"source.privateIp\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_BUS_TYPE = <code>\"source.removableMedia.busType\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_CAPACITY = <code>\"source.removableMedia.capacity\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_MEDIA_NAME = <code>\"source.removableMedia.mediaName\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_NAME = <code>\"source.removableMedia.name\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_PARTITION_ID = <code>\"source.removableMedia.partitionId\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_SERIAL_NUMBER = <code>\"source.removableMedia.serialNumber\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_VENDOR = <code>\"source.removableMedia.vendor\"</code></li> <li>SOURCE_REMOVABLE_MEDIA_VOLUME_NAME = <code>\"source.removableMedia.volumeName\"</code></li> <li>SOURCE_TABS_TITLE = <code>\"source.tabs.title\"</code></li> <li>SOURCE_TABS_TITLE_ERROR = <code>\"source.tabs.titleError\"</code></li> <li>SOURCE_TABS_URL = <code>\"source.tabs.url\"</code></li> <li>SOURCE_TABS_URL_ERROR = <code>\"source.tabs.urlError\"</code></li> <li>USER_DEVICE_UID = <code>\"user.deviceUid\"</code></li> <li>USER_EMAIL = <code>\"user.email\"</code></li> <li>USER_ID = <code>\"user.id\"</code></li> </ul>"},{"location":"sdk/enums/#file-categories","title":"File Categories","text":"class <code>incydr.enums.file_events.FileCategory</code>(*values) <p>Available file categories for filtering file events.</p> <ul> <li>AUDIO = <code>\"Audio\"</code></li> <li>DOCUMENT = <code>\"Document\"</code></li> <li>EXECUTABLE = <code>\"Executable\"</code></li> <li>IMAGE = <code>\"Image\"</code></li> <li>PDF = <code>\"Pdf\"</code></li> <li>PRESENTATION = <code>\"Presentation\"</code></li> <li>SCRIPT = <code>\"Script\"</code></li> <li>SOURCE_CODE = <code>\"SourceCode\"</code></li> <li>SPREADSHEET = <code>\"Spreadsheet\"</code></li> <li>VIDEO = <code>\"Video\"</code></li> <li>VIRTUAL_DISK_IMAGE = <code>\"VirtualDiskImage\"</code></li> <li>ZIP = <code>\"Archive\"</code></li> </ul>"},{"location":"sdk/enums/#event-actions","title":"Event Actions","text":"class <code>incydr.enums.file_events.EventAction</code>(*values) <p>Available event actions for filtering file events.</p> <ul> <li>REMOVABLE_MEDIA_CREATED = <code>\"removable-media-created\"</code></li> <li>REMOVABLE_MEDIA_MODIFIED = <code>\"removable-media-modified\"</code></li> <li>REMOVABLE_MEDIA_DELETED = <code>\"removable-media-deleted\"</code></li> <li>SYNC_APP_CREATED = <code>\"sync-app-created\"</code></li> <li>SYNC_APP_MODIFIED = <code>\"sync-app-modified\"</code></li> <li>SYNC_APP_DELETED = <code>\"sync-app-deleted\"</code></li> <li>FILE_SHARED = <code>\"file-shared\"</code></li> <li>FILE_CREATED = <code>\"file-created\"</code></li> <li>FILE_DELETED = <code>\"file-deleted\"</code></li> <li>FILE_DOWNLOADED = <code>\"file-downloaded\"</code></li> <li>FILE_EMAILED = <code>\"file-emailed\"</code></li> <li>FILE_MODIFIED = <code>\"file-modified\"</code></li> <li>FILE_PRINTED = <code>\"file-printed\"</code></li> <li>APPLICATION_READ = <code>\"application-read\"</code></li> </ul>"},{"location":"sdk/enums/#source-destination-categories","title":"Source &amp; Destination Categories","text":"class <code>incydr.enums.file_events.Category</code>(*values) <p>Source and destination categories available for filtering file events.</p> <ul> <li>BUSINESS_TOOLS = <code>\"Business Tools\"</code></li> <li>CLOUD_STORAGE = <code>\"Cloud Storage\"</code></li> <li>DEVICE = <code>\"Device\"</code></li> <li>EMAIL = <code>\"Email\"</code></li> <li>MESSAGING = <code>\"Messaging\"</code></li> <li>MULTIPLE_POSSIBILITIES = <code>\"Multiple Possibilities\"</code></li> <li>SOCIAL_MEDIA = <code>\"Social Media\"</code></li> <li>SOURCE_CODE_REPOSITORY = <code>\"Source Code Repository\"</code></li> <li>UNCATEGORIZED = <code>\"Uncategorized\"</code></li> <li>UNKNOWN = <code>\"Unknown\"</code></li> <li>BUSINESS_INTELLIGENCE_TOOLS = <code>\"Business Intelligence Tools\"</code></li> <li>CIVIL_SERVICES = <code>\"Civil Services\"</code></li> <li>CLOUD_COMPUTING = <code>\"Cloud Computing\"</code></li> <li>CODING_TOOLS = <code>\"Coding Tools\"</code></li> <li>CONTRACT_MANAGEMENT = <code>\"Contract Management\"</code></li> <li>CRM_TOOLS = <code>\"CRM Tools\"</code></li> <li>DESIGN_TOOLS = <code>\"Design Tools\"</code></li> <li>E_COMMERCE = <code>\"E-commerce\"</code></li> <li>FILE_CONVERSION_TOOLS = <code>\"File Conversion Tools\"</code></li> <li>FINANCIAL_SERVICES = <code>\"Financial Services\"</code></li> <li>HEALTHCARE_AND_INSURANCE = <code>\"Healthcare &amp; Insurance\"</code></li> <li>HR_TOOLS = <code>\"HR Tools\"</code></li> <li>IMAGE_HOSTING = <code>\"Image Hosting\"</code></li> <li>IT_SERVICES = <code>\"IT Services\"</code></li> <li>JOB_LISTINGS = <code>\"Job Listings\"</code></li> <li>LEARNING_PLATFORMS = <code>\"Learning Platforms\"</code></li> <li>MARKETING_TOOLS = <code>\"Marketing Tools\"</code></li> <li>PDF_MANAGER = <code>\"PDF Manager\"</code></li> <li>PHOTO_PRINTING = <code>\"Photo Printing\"</code></li> <li>PRODUCTIVITY_TOOLS = <code>\"Productivity Tools\"</code></li> <li>PROFESSIONAL_SERVICES = <code>\"Professional Services\"</code></li> <li>REAL_ESTATE = <code>\"Real Estate\"</code></li> <li>SALES_TOOLS = <code>\"Sales Tools\"</code></li> <li>SEARCH_ENGINE = <code>\"Search Engine\"</code></li> <li>SHIPPING = <code>\"Shipping\"</code></li> <li>SOFTWARE = <code>\"Software\"</code></li> <li>TRAVEL = <code>\"Travel\"</code></li> <li>WEB_HOSTING = <code>\"Web Hosting\"</code></li> </ul>"},{"location":"sdk/enums/#share-types","title":"Share Types","text":"class <code>incydr.enums.file_events.ShareType</code>(*values) <p>Share types available for filtering file events.</p> <ul> <li>PUBLIC_LINK_SHARE = <code>\"Anyone with the link\"</code></li> <li>DOMAIN_SHARE = <code>\"Anyone in your organization\"</code></li> <li>DIRECT_USER_SHARE = <code>\"Shared with specific people\"</code></li> </ul>"},{"location":"sdk/enums/#report-types","title":"Report Types","text":"class <code>incydr.enums.file_events.ReportType</code>(*values) <p>Report types available for filtering file events.</p> <ul> <li>AD_HOC = <code>\"REPORT_TYPE_AD_HOC\"</code></li> <li>SAVED = <code>\"REPORT_TYPE_SAVED\"</code></li> </ul>"},{"location":"sdk/enums/#risk-indicators","title":"Risk Indicators","text":"class <code>incydr.enums.file_events.RiskIndicators</code>(*values) <p>Risk indicator names available for filtering file events.</p>"},{"location":"sdk/enums/#risk-indicators-destinations","title":"Risk Indicators - Destinations","text":"<ul> <li>ADOBE_UPLOAD = <code>\"Adobe upload\"</code></li> <li>ADOBE_ACROBAT_UPLOAD = <code>\"Adobe Acrobat upload\"</code></li> <li>AIR_DROP = <code>\"AirDrop\"</code></li> <li>AMAZON_DRIVE_UPLOAD = <code>\"Amazon Drive upload\"</code></li> <li>AOL_UPLOAD = <code>\"AOL upload\"</code></li> <li>BAIDU_NET_DISK_UPLOAD = <code>\"Baidu NetDisk upload\"</code></li> <li>BITBUCKET_UPLOAD = <code>\"Bitbucket upload\"</code></li> <li>BOX_UPLOAD = <code>\"Box upload\"</code></li> <li>CANVA_UPLOAD = <code>\"Canva upload\"</code></li> <li>CLOUD_CONVERT_UPLOAD = <code>\"CloudConvert upload\"</code></li> <li>COLABORATORY_UPLOAD = <code>\"Colaboratory upload\"</code></li> <li>COMBINE_PDF_UPLOAD = <code>\"CombinePDF upload\"</code></li> <li>COMCAST_UPLOAD = <code>\"Comcast upload\"</code></li> <li>COMPRESS_JPEG_UPLOAD = <code>\"Compress JPEG upload\"</code></li> <li>CRASHPLAN_UPLOAD = <code>\"Crashplan upload\"</code></li> <li>DISCORD_UPLOAD = <code>\"Discord upload\"</code></li> <li>DRAKE_PORTALS_UPLOAD = <code>\"Drake Portals upload\"</code></li> <li>DROPBOX_UPLOAD = <code>\"Dropbox upload\"</code></li> <li>EVERNOTE_UPLOAD = <code>\"Evernote upload\"</code></li> <li>FACEBOOK_MESSENGER_UPLOAD = <code>\"Facebook Messenger upload\"</code></li> <li>FACEBOOK_UPLOAD = <code>\"Facebook upload\"</code></li> <li>FASTMAIL_UPLOAD = <code>\"Fastmail upload\"</code></li> <li>FIGMA_UPLOAD = <code>\"Figma upload\"</code></li> <li>FILE_DOT_IO_UPLOAD = <code>\"File.io upload\"</code></li> <li>FILESTACK_UPLOAD = <code>\"Filestack upload\"</code></li> <li>FOUR_CHAN_UPLOAD = <code>\"4chan upload\"</code></li> <li>FREE_CONVERT_UPLOAD = <code>\"Free Convert upload\"</code></li> <li>FREE_PDF_CONVERT_UPLOAD = <code>\"Free PDF Convert upload\"</code></li> <li>GIT_HUB_UPLOAD = <code>\"GitHub upload\"</code></li> <li>GIT_HUB_PAGES_UPLOAD = <code>\"GitHub Pages upload\"</code></li> <li>GIT_LAB_UPLOAD = <code>\"GitLab upload\"</code></li> <li>GMAIL_UPLOAD = <code>\"Gmail upload\"</code></li> <li>GMX_UPLOAD = <code>\"GMX upload\"</code></li> <li>GOOGLE_APPS_SCRIPT_UPLOAD = <code>\"Google Apps Script upload\"</code></li> <li>GOOGLE_CHAT_UPLOAD = <code>\"Google Chat upload\"</code></li> <li>GOOGLE_CLOUD_SHELL_UPLOAD = <code>\"Google Cloud Shell upload\"</code></li> <li>GOOGLE_DRIVE_UPLOAD = <code>\"Google Drive upload\"</code></li> <li>GOOGLE_HANGOUTS_UPLOAD = <code>\"Google Hangouts upload\"</code></li> <li>GOOGLE_JAMBOARD_UPLOAD = <code>\"Google Jamboard upload\"</code></li> <li>GOOGLE_KEEP_UPLOAD = <code>\"Google Keep upload\"</code></li> <li>GOOGLE_MESSAGES_UPLOAD = <code>\"Google Messages upload\"</code></li> <li>GOOGLE_SITES_UPLOAD = <code>\"Google Sites upload\"</code></li> <li>HEIC_TO_JPEG_UPLOAD = <code>\"HEICtoJPEG upload\"</code></li> <li>ICLOUD_MAIL_UPLOAD = <code>\"iCloud Mail upload\"</code></li> <li>ICLOUD_UPLOAD = <code>\"iCloud upload\"</code></li> <li>I_LOVE_PDF_UPLOAD = <code>\"iLovePDF upload\"</code></li> <li>IMAGE_COLOR_PICKER_UPLOAD = <code>\"Image Color Picker upload\"</code></li> <li>IMGUR_UPLOAD = <code>\"Imgur upload\"</code></li> <li>JPG2_PDF_UPLOAD = <code>\"JPG2PDF upload\"</code></li> <li>KAPWING_UPLOAD = <code>\"Kapwing upload\"</code></li> <li>LINKED_IN_UPLOAD = <code>\"LinkedIn upload\"</code></li> <li>LYCOS_UPLOAD = <code>\"Lycos upload\"</code></li> <li>MAIL_COM_UPLOAD = <code>\"Mail.com upload\"</code></li> <li>MEGA_UPLOAD = <code>\"Mega upload\"</code></li> <li>MICROSOFT_TEAMS_UPLOAD = <code>\"Microsoft Teams upload\"</code></li> <li>MIRO_UPLOAD = <code>\"Miro upload\"</code></li> <li>MONDAY_UPLOAD = <code>\"Monday upload\"</code></li> <li>MURAL_UPLOAD = <code>\"Mural upload\"</code></li> <li>NOTION_UPLOAD = <code>\"Notion upload\"</code></li> <li>ODNOKLASSNIKI_UPLOAD = <code>\"Odnoklassniki upload\"</code></li> <li>OK_UPLOAD = <code>\"OK upload\"</code></li> <li>ONE_DRIVE_UPLOAD = <code>\"OneDrive upload\"</code></li> <li>ONE_SIX_THREE_DOT_COM_UPLOAD = <code>\"163.com upload\"</code></li> <li>ONE_TWO_SIX_DOT_COM_UPLOAD = <code>\"126.com upload\"</code></li> <li>OPEN_TEXT_HIGHTAIL_UPLOAD = <code>\"OpenText Hightail upload\"</code></li> <li>OTHER_DESTINATION = <code>\"Other destination\"</code></li> <li>OUTLOOK_UPLOAD = <code>\"Outlook upload\"</code></li> <li>OVERLEAF_UPLOAD = <code>\"Overleaf upload\"</code></li> <li>PDF24_TOOLS_UPLOAD = <code>\"PDF24 Tools upload\"</code></li> <li>PDF_ESCAPE_UPLOAD = <code>\"PDFescape upload\"</code></li> <li>PDF_FILLER_UPLOAD = <code>\"pdfFiller upload\"</code></li> <li>PDF_SIMPLI_UPLOAD = <code>\"PDFSimpli upload\"</code></li> <li>PHOTOPEA_UPLOAD = <code>\"Photopea upload\"</code></li> <li>PIXLR_UPLOAD = <code>\"Pixlr upload\"</code></li> <li>PROTON_MAIL_UPLOAD = <code>\"ProtonMail upload\"</code></li> <li>PUBLIC_LINK_FROM_CORPORATE_BOX = <code>\"Public link from corporate Box\"</code></li> <li>PUBLIC_LINK_FROM_CORPORATE_GOOGLE_DRIVE = <code>\"Public link from corporate Google Drive\"</code></li> <li>PUBLIC_LINK_FROM_CORPORATE_ONE_DRIVE = <code>\"Public link from corporate OneDrive\"</code></li> <li>QQMAIL_UPLOAD = <code>\"QQMail upload\"</code></li> <li>QZONE_UPLOAD = <code>\"Qzone upload\"</code></li> <li>REDDIT_UPLOAD = <code>\"Reddit upload\"</code></li> <li>REMOVABLE_MEDIA = <code>\"Removable media\"</code></li> <li>REMOVE_DOT_BG_UPLOAD = <code>\"remove.bg upload\"</code></li> <li>SALESFORCE_DOWNLOAD = <code>\"Download to unmonitored device from corporate Salesforce\"</code></li> <li>SECURE_FIRM_PORTAL_UPLOAD = <code>\"Secure Firm Portal upload\"</code></li> <li>SEJDA_UPLOAD = <code>\"Sejda upload\"</code></li> <li>SENT_FROM_CORPORATE_GMAIL = <code>\"Sent from corporate Gmail\"</code></li> <li>SENT_FROM_CORPORATE_OFFICE365 = <code>\"Sent from corporate Microsoft Office 365\"</code></li> <li>SHARED_FROM_CORPORATE_BOX = <code>\"Shared from corporate Box\"</code></li> <li>SHARED_FROM_CORPORATE_GOOGLE_DRIVE = <code>\"Shared from corporate Google Drive\"</code></li> <li>SHARED_FROM_CORPORATE_ONE_DRIVE = <code>\"Shared from corporate OneDrive\"</code></li> <li>SHAREFILE_UPLOAD = <code>\"Sharefile upload\"</code></li> <li>SINA_MAIL_UPLOAD = <code>\"Sina Mail upload\"</code></li> <li>SLACK_UPLOAD = <code>\"Slack upload\"</code></li> <li>SMALL_PDF_UPLOAD = <code>\"SmallPDF upload\"</code></li> <li>SMART_VAULT_UPLOAD = <code>\"SmartVault upload\"</code></li> <li>SODA_PDF_UPLOAD = <code>\"Soda PDF upload\"</code></li> <li>SOHU_MAIL_UPLOAD = <code>\"Sohu Mail upload\"</code></li> <li>SOURCE_FORGE_UPLOAD = <code>\"SourceForge upload\"</code></li> <li>STACK_OVERFLOW_UPLOAD = <code>\"Stack Overflow upload\"</code></li> <li>STASH_UPLOAD = <code>\"Stash upload\"</code></li> <li>SUGAR_SYNC_UPLOAD = <code>\"SugarSync upload\"</code></li> <li>TELEGRAM_UPLOAD = <code>\"Telegram upload\"</code></li> <li>TINY_PNG_UPLOAD = <code>\"TinyPNG upload\"</code></li> <li>TRELLO_UPLOAD = <code>\"Trello upload\"</code></li> <li>TUMBLR_UPLOAD = <code>\"Tumblr upload\"</code></li> <li>TUTANOTA_UPLOAD = <code>\"Tutanota upload\"</code></li> <li>TWITCH_UPLOAD = <code>\"Twitch upload\"</code></li> <li>TWITTER_UPLOAD = <code>\"Twitter upload\"</code></li> <li>UNKNOWN_DESTINATION = <code>\"Unknown destination\"</code></li> <li>UNMONITORED_DEVICE_DOWNLOAD_BOX = <code>\"Download to unmonitored device from corporate Box\"</code></li> <li>UNMONITORED_DEVICE_DOWNLOAD_GOOGLE_DRIVE = <code>\"Download to unmonitored device from corporate Google Drive\"</code></li> <li>UNMONITORED_DEVICE_DOWNLOAD_ONE_DRIVE = <code>\"Download to unmonitored device from corporate OneDrive\"</code></li> <li>VEED_UPLOAD = <code>\"VEED upload\"</code></li> <li>VIMEO_UPLOAD = <code>\"Vimeo upload\"</code></li> <li>VK_UPLOAD = <code>\"Vk upload\"</code></li> <li>WEBEX_UPLOAD = <code>\"Webex upload\"</code></li> <li>WE_CHAT_UPLOAD = <code>\"WeChat upload\"</code></li> <li>WEIBO_UPLOAD = <code>\"Weibo upload\"</code></li> <li>WE_TRANSFER_UPLOAD = <code>\"WeTransfer upload\"</code></li> <li>WHATS_APP_UPLOAD = <code>\"WhatsApp upload\"</code></li> <li>WIX_UPLOAD = <code>\"Wix upload\"</code></li> <li>WORD_PRESS_UPLOAD = <code>\"WordPress upload\"</code></li> <li>YAHOO_UPLOAD = <code>\"Yahoo upload\"</code></li> <li>YOU_TUBE_UPLOAD = <code>\"YouTube upload\"</code></li> <li>ZIX_UPLOAD = <code>\"Zix upload\"</code></li> <li>ZOHO_MAIL_UPLOAD = <code>\"Zoho Mail upload\"</code></li> <li>ZOHO_WORK_DRIVE_UPLOAD = <code>\"Zoho WorkDrive upload\"</code></li> <li>ZOOM_UPLOAD = <code>\"Zoom upload\"</code></li> </ul>"},{"location":"sdk/enums/#risk-indicators-user-behavior","title":"Risk Indicators - User Behavior","text":"<ul> <li>FILE_MISMATCH = <code>\"File mismatch\"</code></li> <li>OFF_HOURS = <code>\"Off hours\"</code></li> <li>REMOTE = <code>\"Remote\"</code></li> <li>FIRST_DESTINATION_USE = <code>\"First use of destination\"</code></li> <li>RARE_DESTINATION_USE = <code>\"Rare use of destination\"</code></li> <li>CONTRACT = <code>\"Contract\"</code></li> <li>DEPARTING = <code>\"Departing\"</code></li> <li>ELEVATED_ACCESS = <code>\"Elevated access\"</code></li> <li>FLIGHT_RISK = <code>\"Flight risk\"</code></li> <li>HIGH_IMPACT = <code>\"High impact\"</code></li> <li>HIGH_RISK = <code>\"High risk\"</code></li> <li>PERFORMANCE_CONCERNS = <code>\"Performance concerns\"</code></li> <li>POOR_SECURITY_PRACTICES = <code>\"Poor security practices\"</code></li> <li>SUSPICIOUS_SYSTEM_ACTIVITY = <code>\"Suspicious system activity\"</code></li> </ul>"},{"location":"sdk/enums/#risk-indicators-file-categories","title":"Risk Indicators - File Categories","text":"<ul> <li>AUDIO = <code>\"Audio\"</code></li> <li>DOCUMENT = <code>\"Document\"</code></li> <li>EXECUTABLE = <code>\"Executable\"</code></li> <li>IMAGE = <code>\"Image\"</code></li> <li>PDF = <code>\"PDF\"</code></li> <li>PRESENTATION = <code>\"Presentation\"</code></li> <li>SCRIPT = <code>\"Script\"</code></li> <li>SOURCE_CODE = <code>\"Source code\"</code></li> <li>SPREADSHEET = <code>\"Spreadsheet\"</code></li> <li>VIDEO = <code>\"Video\"</code></li> <li>VIRTUAL_DISK_IMAGE = <code>\"Virtual Disk Image\"</code></li> <li>ZIP = <code>\"Zip\"</code></li> </ul>"},{"location":"sdk/enums/#trust-reasons","title":"Trust Reasons","text":"class <code>incydr.enums.file_events.TrustReason</code>(*values) <p>Trust reasons available for filtering file events.</p> <ul> <li>TRUSTED_DOMAIN_BROWSER_URL = <code>\"Trusted browser URL\"</code></li> <li>TRUSTED_BROWSER_URL_PATH = <code>\"Trusted specific URL path\"</code></li> <li>TRUSTED_DOMAIN_BROWSER_TAB_TITLE = <code>\"Trusted browser tab title\"</code></li> <li>TRUSTED_BROWSER_TAB_INFOS = <code>\"Trusted browser URL and/or tab title\"</code></li> <li>TRUSTED_DOMAIN_EMAIL_RECIPIENT = <code>\"Trusted email recipient\"</code></li> <li>TRUSTED_DOMAIN_CLOUD_SYNC_USERNAME = <code>\"Trusted sync username\"</code></li> <li>TRUSTED_SLACK_WORKSPACE = <code>\"Trusted Slack workspace\"</code></li> <li>EVENT_PAIRING_SERVICE_MATCH = <code>\"Event matched with cloud activity\"</code></li> <li>EVENT_PAIRING_SERVICE_ENDPOINT_MATCH = <code>\"Event matched with endpoint activity\"</code></li> <li>DOWNLOAD_TO_A_MANAGED_DEVICE = <code>\"Download to a managed device\"</code></li> <li>SHARED_WITH_TRUSTED_USERS = <code>\"Shared with trusted users\"</code></li> </ul>"},{"location":"sdk/enums/#risk-severity_1","title":"Risk Severity","text":"class <code>incydr.enums.file_events.RiskSeverity</code>(*values) <p>Possible Risk severity values.</p> <ul> <li>CRITICAL = <code>\"CRITICAL\"</code></li> <li>HIGH = <code>\"HIGH\"</code></li> <li>MODERATE = <code>\"MODERATE\"</code></li> <li>LOW = <code>\"LOW\"</code></li> <li>NO_RISK_INDICATED = <code>\"NO_RISK_INDICATED\"</code></li> </ul>"},{"location":"sdk/enums/#sessions","title":"Sessions","text":""},{"location":"sdk/enums/#session-states","title":"Session States","text":"class <code>incydr.enums.sessions.SessionStates</code>(*values) <p>Enum indicating possible session states (includes alerts).</p> <ul> <li>OPEN = <code>\"OPEN\"</code></li> <li>IN_PROGRESS = <code>\"IN_PROGRESS\"</code></li> <li>CLOSED = <code>\"CLOSED\"</code></li> <li>CLOSED_TP = <code>\"CLOSED_TP\"</code></li> <li>CLOSED_FP = <code>\"CLOSED_FP\"</code></li> <li>OPEN_NEW_DATA = <code>\"OPEN_NEW_DATA\"</code></li> </ul>"},{"location":"sdk/enums/#session-severities","title":"Session Severities","text":"class <code>incydr.enums.sessions.SessionSeverities</code>(*values) <p>Enum indicating possible session severities.</p> <ul> <li>NO_RISK = <code>\"NO_RISK\"</code></li> <li>LOW = <code>\"LOW\"</code></li> <li>MODERATE = <code>\"MODERATE\"</code></li> <li>HIGH = <code>\"HIGH\"</code></li> <li>CRITICAL = <code>\"CRITICAL\"</code></li> </ul>"},{"location":"sdk/enums/#content-inspection-statuses","title":"Content Inspection Statuses","text":"class <code>incydr.enums.sessions.ContentInspectionStatuses</code>(*values) <p>Enum indicating possible content inspection statuses.</p> <ul> <li>PENDING = <code>\"PENDING\"</code></li> <li>FOUND = <code>\"FOUND\"</code></li> <li>NOT_FOUND = <code>\"NOT_FOUND\"</code></li> </ul>"},{"location":"sdk/enums/#sort-keys","title":"Sort Keys","text":"class <code>incydr.enums.sessions.SortKeys</code>(*values) <p>Enum indicating possible fields by which to sort items results.</p> <ul> <li>END_TIME = <code>\"end_time\"</code></li> <li>SCORE = <code>\"score\"</code></li> </ul>"},{"location":"sdk/enums/#trusted-activities","title":"Trusted Activities","text":""},{"location":"sdk/enums/#activity-types","title":"Activity Types","text":"class <code>incydr.enums.trusted_activities.ActivityType</code>(*values) <ul> <li>DOMAIN = <code>\"DOMAIN\"</code></li> <li>ACCOUNT_NAME = <code>\"ACCOUNT_NAME\"</code></li> <li>URL_PATH = <code>\"URL_PATH\"</code></li> <li>SLACK = <code>\"SLACK\"</code></li> <li>CLOUD_SHARE = <code>\"CLOUD_SHARE\"</code></li> <li>CLOUD_SYNC = <code>\"CLOUD_SYNC\"</code></li> <li>EMAIL = <code>\"EMAIL\"</code></li> <li>FILE_UPLOAD = <code>\"FILE_UPLOAD\"</code></li> <li>GIT_PUSH = <code>\"GIT_PUSH\"</code></li> <li>GIT_REPOSITORY_URI = <code>\"GIT_REPOSITORY_URI\"</code></li> </ul>"},{"location":"sdk/enums/#cloud-sync-apps","title":"Cloud Sync Apps","text":"class <code>incydr.enums.trusted_activities.CloudSyncApps</code>(*values) <ul> <li>BOX = <code>\"BOX\"</code></li> <li>GOOGLE_DRIVE = <code>\"GOOGLE_DRIVE\"</code></li> <li>ICLOUD = <code>\"ICLOUD\"</code></li> <li>ONE_DRIVE = <code>\"ONE_DRIVE\"</code></li> </ul>"},{"location":"sdk/enums/#cloud-share-apps","title":"Cloud Share Apps","text":"class <code>incydr.enums.trusted_activities.CloudShareApps</code>(*values) <ul> <li>BOX = <code>\"BOX\"</code></li> <li>GOOGLE_DRIVE = <code>\"GOOGLE_DRIVE\"</code></li> <li>ONE_DRIVE = <code>\"ONE_DRIVE\"</code></li> </ul>"},{"location":"sdk/enums/#email-services","title":"Email Services","text":"class <code>incydr.enums.trusted_activities.EmailServices</code>(*values) <ul> <li>GMAIL = <code>\"GMAIL\"</code></li> <li>OFFICE_365 = <code>\"OFFICE_365\"</code></li> </ul>"},{"location":"sdk/enums/#principal-types","title":"Principal Types","text":"class <code>incydr.enums.trusted_activities.PrincipalType</code>(*values) <ul> <li>USER = <code>\"USER\"</code></li> <li>API_KEY = <code>\"API_KEY\"</code></li> <li>DEVICE = <code>\"DEVICE\"</code></li> <li>SERVICE = <code>\"SERVICE\"</code></li> </ul>"},{"location":"sdk/enums/#trusted-activities-sort-keys","title":"Trusted Activities Sort Keys","text":"class <code>incydr.enums.trusted_activities.SortKeys</code>(*values) <ul> <li>ACTIVITY_ID = <code>\"ACTIVITY_ID\"</code></li> <li>DESCRIPTION = <code>\"DESCRIPTION\"</code></li> <li>TYPE = <code>\"TYPE\"</code></li> <li>UPDATED_BY_PRINCIPAL_NAME = <code>\"UPDATED_BY_PRINCIPAL_NAME\"</code></li> <li>UPDATE_TIME = <code>\"UPDATE_TIME\"</code></li> <li>VALUE = <code>\"VALUE\"</code></li> </ul>"},{"location":"sdk/enums/#watchlists","title":"Watchlists","text":""},{"location":"sdk/enums/#watchlist-types","title":"Watchlist Types","text":"class <code>incydr.enums.watchlists.WatchlistType</code>(*values) <p>Available watchlist types.</p> <ul> <li>WATCHLIST_TYPE_UNSPECIFIED = <code>\"WATCHLIST_TYPE_UNSPECIFIED\"</code></li> <li>CONTRACT_EMPLOYEE = <code>\"CONTRACT_EMPLOYEE\"</code></li> <li>DEPARTING_EMPLOYEE = <code>\"DEPARTING_EMPLOYEE\"</code></li> <li>ELEVATED_ACCESS_PRIVILEGES = <code>\"ELEVATED_ACCESS_PRIVILEGES\"</code></li> <li>FLIGHT_RISK = <code>\"FLIGHT_RISK\"</code></li> <li>HIGH_IMPACT_EMPLOYEE = <code>\"HIGH_IMPACT_EMPLOYEE\"</code></li> <li>NEW_EMPLOYEE = <code>\"NEW_EMPLOYEE\"</code></li> <li>PERFORMANCE_CONCERNS = <code>\"PERFORMANCE_CONCERNS\"</code></li> <li>POOR_SECURITY_PRACTICES = <code>\"POOR_SECURITY_PRACTICES\"</code></li> <li>SUSPICIOUS_SYSTEM_ACTIVITY = <code>\"SUSPICIOUS_SYSTEM_ACTIVITY\"</code></li> <li>CUSTOM = <code>\"CUSTOM\"</code></li> </ul>"},{"location":"sdk/logging/","title":"Logging","text":"<p>By default, the <code>incydr.Client</code> uses the Rich library's logging handler, sending logging to standard err, and defaults to log level <code>logging.WARNING</code>.</p> <p>Basic request details are logged for every http request made at INFO level: <pre><code>import incydr\nclient = incydr.Client(log_level=\"INFO\")\nclient.cases.v1.get_case(21)\n</code></pre></p> <p>Log custom messages in your scripts from the <code>client.settings.logger</code> object directly: <pre><code>client.settings.logger.warning(\"Logged warning message!\")\n</code></pre></p> <p>Increase to DEBUG level for much more detailed logging of the request/response cycle:</p> <pre><code>client.settings.log_level = \"DEBUG\"\nclient.cases.v1.get_case(21)\n</code></pre> <p>The output from the above code snippets would look like this:</p> <p></p>"},{"location":"sdk/logging/#disable-logging-to-stderr","title":"Disable logging to stderr","text":"<p>To disable logging to stderr, you can do any of the following:</p> <ul> <li>Set <code>INCYDR_LOG_STDERR=false</code> in your environment</li> <li>Initialize client with <code>log_stderr</code> argument set to False: <code>client = incydr.Client(log_stderr=False)</code></li> <li>Change the setting property after instantiation: <code>client.settings.log_stderr = False</code></li> </ul>"},{"location":"sdk/logging/#disable-rich-formatting","title":"Disable Rich formatting","text":"<p>To disable Rich formatting in your log output, you can do any of the following:</p> <ul> <li>Set <code>INCYDR_USE_RICH=false</code> in your environment</li> <li>Initialize client with <code>use_rich</code> argument set to False: <code>client = incydr.Client(use_rich=False)</code></li> <li>Change the setting property after instantiation: <code>client.settings.use_rich = False</code></li> </ul>"},{"location":"sdk/logging/#log-to-a-file","title":"Log to a file","text":"<p>To output logs to a file, set the <code>client.settings.log_file</code> property to any of the following:</p> <ul> <li>A string representing a valid file path</li> <li>A <code>pathlib.Path</code> object represting a valid file path</li> <li>A file object inheriting from <code>io.IOBase</code></li> </ul>"},{"location":"sdk/models/","title":"Models","text":"<p>Note</p> <p>Incydr SDK's Pydantic models default to snake_case for all field attribute names for consistency, and by default will convert names to the casing expected by the API endpoint when serializing the data using the model's <code>.json()</code> and <code>.dict()</code> methods.</p> <p>For example, if the server returns a response with a JSON key of <code>createdAt</code>, the value will be accessible on the model via <code>Model.created_at</code>, but calling <code>Model.json()</code> will output with a key of <code>createdAt</code> so the data can be used in further requests.</p> <p>Fields where a transormation has been applied are marked with <code>json_alias=&lt;aliasName&gt;</code> below.</p> <p>See Pydantic documentation for full list of available model methods.</p>"},{"location":"sdk/models/#actors","title":"Actors","text":""},{"location":"sdk/models/#actor-model","title":"<code>Actor</code> model","text":"class <code>incydr.models.Actor</code>(*, active=None, actorId=None, alternateNames=None, country=None, department=None, division=None, employeeType=None, firstName=None, inScope=None, lastName=None, locality=None, managerActorId=None, name=None, parentActorId=None, region=None, title=None, **extra_data) <p>A model representing an Actor.</p> <p>Fields:</p> <ul> <li>active: <code>bool</code> Whether or not the actor is active.</li> <li>actor_id: <code>str</code> The unique ID of the actor.</li> <li>alternate_names: <code>List[str]</code> A list of other names the actor may have.</li> <li>country: <code>str</code> The actor's country.</li> <li>department: <code>str</code> The actor's department.</li> <li>division: <code>str</code> The actor's division.</li> <li>employee_type: <code>str</code> The actor's employment type, such as if they're a contractor.</li> <li>first_name: <code>str</code> The first (given) name of the actor.</li> <li>in_scope: <code>str</code> The actor's scope state. An actor is considered \"in scope\" if their activity is monitored in at least one data source.</li> <li>last_name: <code>str</code> The last (family) name of the actor.</li> <li>locality: <code>str</code> - The actor's locality (city).</li> <li>manager_actor_id: <code>str</code> The actor ID of the actor's manager.</li> <li>name: <code>str</code> The actor's (eg. full username/email) name.</li> <li>parentActorId: <code>str</code> The actor ID of this actor's parent actor. (if the actor has a parent).</li> <li>region: <code>str</code> The actor's region (state).</li> <li>title: <code>str</code> The actor's job title.</li> </ul>"},{"location":"sdk/models/#actorfamily-model","title":"<code>ActorFamily</code> model","text":"class <code>incydr.models.ActorFamily</code>(*, children, parent, **extra_data) <p>A model representing an actor family.</p> <p>An actor family consists of one or more child actors adopted by a single parent. If an actor is not associated with any other actors, the family consists of only the single actor.</p> <p>Fields:</p> <ul> <li>children: <code>List[Actor]</code> The list of child actors associated with the parent.</li> <li>parent: <code>Actor</code> The parent actor of the family.</li> </ul>"},{"location":"sdk/models/#actorspage-model","title":"ActorsPage` model","text":"class <code>incydr.models.ActorsPage</code>(*, actors, **extra_data) <p>A model representing a page of Actors</p> <p>Fields:</p> <ul> <li>actors: <code>List[Actor]</code> The list of actors returned from the query.</li> </ul>"},{"location":"sdk/models/#agents","title":"Agents","text":""},{"location":"sdk/models/#agent-model","title":"<code>Agent</code> model","text":"class <code>incydr.models.Agent</code>(*, agentId=None, name=None, userId=None, osHostname=None, osName=None, machineId=None, serialNumber=None, active=None, agentType=None, agentHealthIssueTypes=None, appVersion=None, productVersion=None, lastConnected=None, externalReference=None, creationDate=None, modificationDate=None, **extra_data) <p>A model representing an Incydr agent.</p> <p>Fields:</p> <ul> <li>agent_id: <code>str</code> The globally unique ID (guid) for this agent.</li> <li>name: <code>str</code> The editable name of the agent.</li> <li>user_id: <code>str</code> The unique ID of the user the agent is assigned to.</li> <li>os_hostname: <code>str</code> The hostname reported by the OS the agent is running on.</li> <li>os_name: <code>str</code> The name of the OS the agent is running on.</li> <li>machine_id: <code>str</code> Device machine ID.</li> <li>serial_number: <code>str</code> Authenticated agent serial number.</li> <li>active: <code>bool</code> If the agent status is active.</li> <li>agent_type: <code>AgentType</code> The type of agent.</li> <li>**agent_health_issue_types: <code>List[str]</code> List of health issues with the agent. Health issue types include the following: <code>NOT_CONNECTING</code>, <code>NOT_SENDING_SECURITY_EVENTS</code>.</li> <li>app_version: <code>str</code> The app version of the agent.</li> <li>product_version: <code>str</code> The product version of the agent.</li> <li>last_connected: <code>datetime</code> The time the agent last connected to a Code42 Authority server.</li> <li>external_reference: <code>str</code> Editable reference information (useful for identifying an agent in external systems).</li> <li>creation_date: <code>datetime</code> The time the agent was first registered.</li> <li>modification_date: <code>datetime</code> The time the agent's database entry was last updated.</li> </ul>"},{"location":"sdk/models/#agentspage-model","title":"<code>AgentsPage</code> model","text":"class <code>incydr.models.AgentsPage</code>(*, agents, totalCount, pageSize, page, **extra_data) <p>A model representing a page of Agents.</p> <p>Fields:</p> <ul> <li>agents: <code>List[Agent]</code> The list of agents returned from the query.</li> <li>total_count: <code>int</code> Total number of agents found in query results.</li> <li>page_size: <code>int</code> The maximum number of agents returned in query results page.</li> <li>page_num: <code>int</code> The current page number of the query result set.</li> </ul>"},{"location":"sdk/models/#alerts-deprecated","title":"Alerts (Deprecated)","text":"<p>Alerts has been replaced by Sessions.</p>"},{"location":"sdk/models/#alertdetails-model","title":"<code>AlertDetails</code> model","text":"class <code>incydr.models.AlertDetails</code>(*, tenantId, type, id=None, createdAt, state, stateLastModifiedBy=None, stateLastModifiedAt=None, name=None, description=None, actor=None, actorId=None, target=None, severity=None, riskSeverity=None, ruleId=None, watchlists=None, observations=None, note=None, **extra_data) <p>A model representing the full details of an alert. Includes all the fields from <code>AlertSummary</code> plus file event observations (the events that triggered the alert), and any notes that have been added to the alert.</p> <p>Fields:</p> <ul> <li>observations: <code>List[Observation]</code> List of observed file events that triggered the alert.</li> <li>note: <code>str</code> Most recent note added to the alert.</li> </ul>"},{"location":"sdk/models/#alertsummary-model","title":"<code>AlertSummary</code> model","text":"class <code>incydr.models.AlertSummary</code>(*, tenantId, type, id=None, createdAt, state, stateLastModifiedBy=None, stateLastModifiedAt=None, name=None, description=None, actor=None, actorId=None, target=None, severity=None, riskSeverity=None, ruleId=None, watchlists=None, **extra_data) <p>A model representing an alert summary.</p> <p>Fields:</p> <ul> <li>tenant_id: <code>str</code> The unique identifier representing the tenant.</li> <li>type: <code>RuleType</code> Rule type that generated the alert.</li> <li>id: <code>str</code> The unique id of the alert.</li> <li>created_at: <code>datetime</code> The timestamp when the alert was created.</li> <li>state: <code>AlertState</code> The current state of the alert.</li> <li>state_last_modified_by: <code>str</code> The actor who last modified the alert state.</li> <li>state_last_modified_at: <code>datetime</code> The timestamp when the alert state was last modified.</li> <li>name: <code>str</code> The name of the alert.  Same as the name of the rule that triggered it.</li> <li>description: <code>str</code> The description of the alert.  Same as the description of the rule that triggered it.</li> <li>actor: <code>str</code> The user who triggered the alert.</li> <li>actor_id: <code>str</code> The user id who triggered the alert, if it is available.</li> <li>target: <code>str</code> Unused legacy property.</li> <li>severity: <code>AlertSeverity</code> Indicates static rule severity of the alert. (Deprecated)</li> <li>risk_severity: <code>RiskSeverity</code> Indicates event risk severity of the alert.</li> <li>rule_id: <code>str</code> The unique id corresponding to the rule which triggered the alert.</li> <li>watchlists: <code>str</code> Watchlists the actor is on at the time of the alert (if any).</li> </ul>"},{"location":"sdk/models/#alertquerypage-model","title":"<code>AlertQueryPage</code> model","text":"class <code>incydr.models.AlertQueryPage</code>(*, type, alerts=None, totalCount, problems=None, **extra_data) <p>A model representing a page of <code>AlertSummary</code> objects resulting from an alert search query.</p> <p>Fields:</p> <ul> <li>alerts: <code>List[AlertSummary]</code> List of alerts that found by query.</li> <li>total_count: <code>int</code> The count of alerts found.</li> <li>problems: <code>List[QueryProblem]</code> Potential issues that were hit while trying to run the query.</li> </ul>"},{"location":"sdk/models/#alert-rules","title":"Alert Rules","text":""},{"location":"sdk/models/#ruleuser-model","title":"<code>RuleUser</code> model","text":"class <code>incydr.models.RuleUser</code>(*, userIdFromAuthority=None, aliases=None, **extra_data) <p>A model representing a user assigned to a rule.</p> <p>Fields:</p> <ul> <li>user_id_from_authority: <code>str</code> - A unique Code42 user ID.</li> <li>user_alias_list: <code>List[str]</code> - List of user aliases associated with the user.</li> </ul>"},{"location":"sdk/models/#ruleuserslist-model","title":"<code>RuleUsersList</code> model","text":"class <code>incydr.models.RuleUsersList</code>(*, id=None, users=None, mode=None, **extra_data) <p>A model representing a list of users associated with a rule, as well as the rule's configuration mode to <code>INCLUDE</code> or <code>EXCLUDE</code> those users.</p> <p>Fields:</p> <ul> <li>id: <code>str</code> - Unique ID of the rule.</li> <li>users: <code>List[RuleUser]</code> - A list of users in the rule's username filter.</li> <li>mode: <code>str</code> - Indicates how to filter on the user list. Specifies whether to <code>INCLUDE</code> or <code>EXCLUDE</code> the listed users from the rule.</li> </ul>"},{"location":"sdk/models/#ruledetails-model","title":"<code>RuleDetails</code> model","text":"class <code>incydr.models.RuleDetails</code>(*, name=None, description=None, severity=None, isEnabled=None, source=None, notifications=None, education=None, vectors=None, filters=None, id=None, createdAt=None, createdBy=None, modifiedAt=None, modifiedBy=None, isSystemRule=None, **extra_data)"},{"location":"sdk/models/#audit-log","title":"Audit Log","text":""},{"location":"sdk/models/#auditeventspage-model","title":"<code>AuditEventsPage</code> model","text":"class <code>incydr.models.AuditEventsPage</code>(*, events=None, paginationRangeEndIndex=None, paginationRangeStartIndex=None, **extra_data) <p>A model representing a page of audit events.</p> <p>Fields:</p> <ul> <li>events: <code>List[Dict[Optional[str], Any]]</code> A list of zero or more events matching the given criteria.     Each event is represented as a dictionary of property names associated with that event.  These fields may differ     from event to event.</li> <li>pagination_range_end_index: <code>int</code> The index of the last result returned, in relation to total results found.</li> <li>pagination_range_start_index: <code>int</code> The index of the first result returned, in relation to total results found.</li> </ul>"},{"location":"sdk/models/#cases","title":"Cases","text":""},{"location":"sdk/models/#case-model","title":"<code>Case</code> model","text":"class <code>incydr.models.Case</code>(*, number=None, name=None, createdAt=None, updatedAt=None, subject=None, subjectUsername=None, status, assignee=None, assigneeUsername=None, createdByUserUid=None, createdByUsername=None, lastModifiedByUserUid=None, lastModifiedByUsername=None, archivalTime=None, **extra_data) <p>A model representing an Incydr Case.</p> <p>Fields:</p> <ul> <li>number: <code>int</code> Unique numeric identifier for the case.</li> <li>name: <code>str</code> Unique name given to the case.</li> <li>created_at: <code>datetime</code> Time at which the case was created. json_alias=<code>createdAt</code></li> <li>updated_at: <code>datetime | None</code> Time at which the case was last updated. json_alias=<code>updatedAt</code></li> <li>subject: <code>str | None</code> The user UID of the subject being investigated in this case.</li> <li>subject_username: <code>str | None</code> The username of the subject being investigated in this case. json_alias=<code>subjectUsername</code></li> <li>status: <code>CaseStatus</code> Indicates the status of the case. OPEN: The case is active and all aspects of the case are editable. CLOSED: The case is resolved. Closed cases cannot be re-opened or modified. Case data for closed cases is retained indefinitely.</li> <li>assignee: <code>str | None</code> The user ID of the administrator assigned to investigate the case.</li> <li>assignee_username: <code>str | None</code> The username of the administrator assigned to investigate the case. json_alias=<code>assigneeUsername</code></li> <li>created_by_user_id: <code>str | None</code> User UID of the user who created the case. json_alias=<code>createdByUserUid</code></li> <li>created_by_username: <code>str | None</code> Username of the user who created the case. json_alias=<code>createdByUsername</code></li> <li>last_modified_by_user_id: <code>str | None</code> User UID of the user who last modified the case. json_alias=<code>lastModifiedByUserUid</code></li> <li>last_modified_by_username: <code>str | None</code> Username of the user who last modified the case. json_alias=<code>lastModifiedByUsername</code></li> <li>archival_time: <code>datetime</code> Time at which the case will be archived.</li> </ul>"},{"location":"sdk/models/#casespage-model","title":"<code>CasesPage</code> model","text":"class <code>incydr.models.CasesPage</code>(*, cases, totalCount, **extra_data) <p>A model representing a page of <code>Case</code> objects.</p> <p>Fields:</p> <ul> <li>cases: <code>List[Case]</code> The list of <code>n</code> number of cases retrieved from the query, where <code>n=page_size</code>.</li> <li>total_count: <code>int</code> Total count of cases found by the query.</li> </ul>"},{"location":"sdk/models/#casefileevents-model","title":"<code>CaseFileEvents</code> model","text":"class <code>incydr.models.CaseFileEvents</code>(*, events=None, totalCount=None, **extra_data) <p>A model representing file events associated with a case.</p> <p>Fields:</p> <ul> <li>events: <code>List[FileEvent]</code> - List of events in the response..</li> <li>total_count: <code>int</code> - Total number of events associated with the case.</li> </ul>"},{"location":"sdk/models/#customer","title":"Customer","text":""},{"location":"sdk/models/#customer-model","title":"<code>Customer</code> model","text":"class <code>incydr.models.Customer</code>(*, name=None, registrationKey=None, tenantId=None, **extra_data) <p>A model providing details of an Incydr customer account.</p> <p>Fields:</p> <ul> <li>name: <code>str</code> The Code42 account name.</li> <li>registration_key: <code>str</code> The Code42 registration key (primarily for licensing purposes).</li> <li>tenant_id: <code>str</code> The unique identifier for the account within Code42.</li> </ul>"},{"location":"sdk/models/#departments","title":"Departments","text":""},{"location":"sdk/models/#departmentspage-model","title":"<code>DepartmentsPage</code> model","text":"class <code>incydr.models.DepartmentsPage</code>(*, departments=None, totalCount=None, **extra_data) <p>A model representing a list of departments.</p> <p>Fields:</p> <ul> <li>departments: <code>List[str]</code> - The list of <code>n</code> department names retrieved by the query, where <code>n=page_size</code>.</li> <li>total_count: <code>int</code> - Total count of departments retrieved by the query.</li> </ul>"},{"location":"sdk/models/#devices","title":"Devices","text":""},{"location":"sdk/models/#device-model","title":"<code>Device</code> model","text":"class <code>incydr.models.Device</code>(*, deviceId=None, legacyDeviceId=None, name=None, osHostname=None, status=None, active=None, blocked=None, alertState=None, userId=None, legacyUserId=None, orgId=None, legacyOrgId=None, orgGuid=None, externalReferenceInfo=None, notes=None, lastConnected=None, osVersion=None, osArch=None, address=None, remoteAddress=None, timeZone=None, version=None, build=None, creationDate=None, modificationDate=None, loginDate=None, **extra_data) <p>A model representing a device.</p> <p>Fields:</p> <ul> <li>device_id: <code>str</code> - The globally unique ID (guid) for this device.</li> <li>legacy_device_id: <code>str</code> - The device ID to use for older console-based APIs that require a device ID.</li> <li>name: <code>str</code> - The device name.</li> <li>os_hostname: <code>str</code> - The device hostname according to the device's OS.</li> <li>status: <code>str</code> - The device status. One of [Active, Deactivated, Blocked, Deauthorized (Active/Deactivated followed by optional Blocked and/or Deauthorized).</li> <li>active: <code>bool</code> - Whether or not the device is active. If true, the device will show up on reports, etc.</li> <li>blocked: <code>bool</code> - Whether or not the device is blocked.  If true, restores and logins are disabled.</li> <li>alert_state: <code>int</code> - The device's alert state. One of [0=ok, 1=connection warning, 2=connection critical].</li> <li>user_id: <code>str</code> - The globally unique ID for this user.</li> <li>legacy_user_id: <code>str</code> - The user ID to use for older console-based APIs that require a user ID.</li> <li>org_id: <code>str</code> - An ID for the Code42 organization of the user owning this device.</li> <li>legacy_org_id: <code>str</code> - The org ID to use for older console-based APIs that require an org ID.</li> <li>org_guid: <code>str</code> - The globally unique org ID.  This is the org identifier that should be used for all org-related API actions.</li> <li>external_reference: <code>str</code> - Optional external reference information, such as a serial number, asset tag, employee ID, or help desk issue ID.</li> <li>notes: <code>str</code> - Optional descriptive information for the device.</li> <li>last_connected: <code>datetime</code> - The last day and time this device was connected to the server.</li> <li>os_name: <code>str</code> - The device's operating system name. Ex: Windows, Mac OS X, Linux, Android, iOS, SunOS, etc. <li>os_version: <code>str</code> - The device's operating system version. Ex: 10.5.1, 6.2, etc.</li> <li>*address: <code>str</code> - The device's internal IP address and port. Ex: 192.168.42.1:4282</li> <li>remote_address: <code>str</code> - The device's external IP address and port. Example: 171.22.110.41:13958</li> <li>time_zone: <code>str</code> - The device's time zone. Ex: Asia/Calcutta</li> <li>version: <code>str</code> - The device product display version.</li> <li>build: <code>int</code> - The device build version long number, will only be applicable to CP4/SP devices.</li> <li>creation_date: <code>datetime</code> - The date and time this device was created.</li> <li>modification_date: <code>datetime</code> - The date and time this device was last modified.</li> <li>login_date: <code>datetime</code> - The date and time this device was last logged in.</li>"},{"location":"sdk/models/#devicespage-model","title":"<code>DevicesPage</code> model","text":"class <code>incydr.models.DevicesPage</code>(*, totalCount=None, devices=None, **extra_data) <p>A model representing a page of <code>Device</code> objects.</p> <p>Fields:</p> <ul> <li>devices: <code>List[Device]</code> - The list of <code>n</code> number of devices retrieved from the query, where <code>n=page_size</code>.</li> <li>total_count: <code>int</code> - Total count of devices found by query.</li> </ul>"},{"location":"sdk/models/#directory-groups","title":"Directory Groups","text":""},{"location":"sdk/models/#directorygroup-model","title":"<code>DirectoryGroup</code> model","text":"class <code>incydr.models.DirectoryGroup</code>(*, groupId=None, name=None, **extra_data)"},{"location":"sdk/models/#directorygroupspage-model","title":"<code>DirectoryGroupsPage</code> model","text":"class <code>incydr.models.DirectoryGroupsPage</code>(*, directoryGroups=None, totalCount=None, **extra_data) <p>A model representing a list of directory groups.</p> <p>Fields:</p> <ul> <li>directory_groups: <code>List[DirectoryGroup</code>] - The list of <code>n</code> directory groups retrieved by the query, where <code>n=page_size</code>.</li> <li>total_count: <code>int</code> - Total count of directory groups retrieved by the query.</li> </ul>"},{"location":"sdk/models/#file-events","title":"File Events","text":""},{"location":"sdk/models/#fileevent-model","title":"<code>FileEvent</code> model","text":"class <code>incydr.models.FileEventV2</code>(*, timestamp=None, destination=None, event=None, file=None, process=None, report=None, risk=None, source=None, user=None, git=None, **extra_data) <p>Fields:</p> <ul> <li>timestamp: - The date and time that the Code42 service on the device detected the event.  This timestamp is based on the device\u2019s system clock and reported in Coordinated Universal Time (UTC).</li> <li>destination: <code>Destination</code> - A [<code>Destination</code>] object containing metadata about the destination of the file event.</li> <li>event: <code>Event</code> - An [<code>Event</code>] object containing summary information about the event.</li> <li>file: <code>File</code> - A [<code>File</code>] object containing metadata about the file for this event.</li> <li>process: <code>Process</code> - A [<code>Process</code>] object containing metadata about the process associated with the event.</li> <li>report: <code>Report</code> - A [<code>Report</code>] object containing metadata for reports from 3rd party sources, such Salesforce downloads.</li> <li>risk: <code>Risk</code> - A [<code>Risk</code>] object containing metadata on risk factors associated with the event.</li> <li>source: <code>Source</code> - A [<code>Source</code>] object containing metadata about the source of the file event.</li> <li>user: <code>User</code> - A [<code>User</code>] object containing metadata Attributes of the Code42 username signed in to the Code42 app on the device.</li> <li>git: <code>Git</code> - A [<code>Git</code>] object containing git details for the event (if applicable).</li> </ul>"},{"location":"sdk/models/#fileeventspage-model","title":"<code>FileEventsPage</code> model","text":"class <code>incydr.models.FileEventsPage</code>(*, fileEvents=None, nextPgToken=None, problems=None, totalCount=None, **extra_data) <p>A model representing a page of <code>FileEventV2</code> objects.</p> <p>Fields:</p> <ul> <li>file_events: <code>List[FileEventsV2]</code> - The list of <code>n</code> number of file events retrieved from the query, where <code>n=pg_size</code>.</li> <li>next_pg_token: <code>str</code> - The pgToken value from another request to indicate the starting point the next page of results. <code>nextPgToken</code> is null if there are no more results or if pgToken was not supplied.</li> <li>problems: <code>List[QueryProblem]</code> - \"List of problems in the request.  A problem with a search request could be an invalid filter value, an operator that can't be used on a term, etc.</li> <li>total_count: <code>int</code> - Total count of file events found by the query.</li> </ul>"},{"location":"sdk/models/#savedsearch-model","title":"<code>SavedSearch</code> model","text":"class <code>incydr.models.SavedSearch</code>(*, apiVersion=None, columns=None, createdByUID=None, createdByUsername=None, creationTimestamp=None, groupClause=None, groups=None, id=None, modifiedByUID=None, modifiedByUsername=None, modifiedTimestamp=None, name=None, notes=None, srtDir=None, srtKey=None, **extra_data) <p>A model representing a saved search.</p> <p>Fields:</p> <ul> <li>api_version: <code>int</code> - The version of the API used to create the search.</li> <li>columns: <code>List[str]</code> - The list of columns to be displayed in the web app for the search.</li> <li>created_by_uid: <code>str</code> - The ID of the user who created the saved search.</li> <li>created_by_username: <code>str</code> - The username of the user who created the saved search.</li> <li>creation_timestamp: <code>datetime</code> - The time at which the saved search was created.</li> <li>group_clause: <code>GroupClause</code> - <code>AND</code> or <code>OR</code>. Grouping clause for any specified groups. Defaults to <code>AND</code>.</li> <li>groups: <code>List[SearchFilterGroup]</code> - One or more FilterGroups to be combined in a query.</li> <li>id: <code>str</code> - The ID for the saved search.</li> <li>modified_by_uid: <code>str</code> - The ID of the user who last modified the saved search.</li> <li>modified_by_username: <code>str</code> - The username of the user who last modified the saved search.</li> <li>modified_timestamp: <code>datetime</code> - The time at which the saved search was last modified.</li> <li>name: <code>str</code> - The name given to the saved search.</li> <li>notes: <code>str</code> - Optional notes about the search.</li> <li>srt_dir: <code>SortDirection</code> - <code>asc</code> or <code>desc</code>. The direction in which to sort the response based on the corresponding key. Defaults to 'asc'.</li> <li>srt_key: <code>str</code> - One or more values on which the response will be sorted. Defaults to event ID.</li> </ul>"},{"location":"sdk/models/#roles","title":"Roles","text":""},{"location":"sdk/models/#role-model","title":"<code>Role</code> model","text":"class <code>incydr.models.Role</code>(*, roleId=None, roleName=None, creationDate=None, modificationDate=None, permissions=None, **extra_data) <p>A model representing a role.</p> <p>Fields:</p> <ul> <li>role_id: <code>str</code> - A role ID.</li> <li>role_name: <code>str</code> - A role name.</li> <li>modification_date: <code>str</code> - The date and time this role for the user was last modified.</li> <li>creation_date: <code>str</code> - The date and time this role for the user was created.</li> <li>permission_ids: <code>str</code> - The permission IDs associated with this role.</li> </ul>"},{"location":"sdk/models/#updaterolesresponse-model","title":"<code>UpdateRolesResponse</code> model","text":"class <code>incydr.models.UpdateRolesResponse</code>(*, processedReplacementRoleIds=None, newlyAssignedRolesIds=None, unassignedRolesIds=None, ignoredRolesIds=None, **extra_data) <p>A model representing the response to updating a user's role.</p> <p>Fields:</p> <ul> <li>processed_replacement_role_ids: <code>List[str]</code> - The role IDs processed.</li> <li>newly_assigned_roles_ids: <code>List[str]</code> - The role IDs newly assigned to the user.</li> <li>unassigned_roles_ids: <code>List[str]</code> - The role IDs unassigned from the user.</li> <li>ignored_roles_ids: <code>List[str]</code> - The role IDs ignored.</li> </ul>"},{"location":"sdk/models/#sessions","title":"Sessions","text":"class <code>incydr.models.Session</code>(*, actorId=None, beginTime=None, contentInspectionResults=None, contextSummary=None, criticalEvents=None, endTime=None, exfiltrationSummary=None, firstObserved=None, highEvents=None, lastUpdated=None, lowEvents=None, moderateEvents=None, noRiskEvents=None, notes=None, riskIndicators=None, scores=None, sessionId=None, states=None, tenantId=None, triggeredAlerts=None, userId=None, **extra_data) <p>A model representing a session summary.</p> <p>Fields:</p> <ul> <li>actor_id: <code>str</code> The ID of the actor that generated the session.</li> <li>begin_time: <code>datetime</code> The date and time when this session began.</li> <li>content_inspection_results: <code>List[ContentInspectionResult]</code> The results of content inspection.</li> <li>context_summary: <code>str</code> An English summary of the contextual aspects of this session is any were identified.</li> <li>critical_events: <code>int</code> The number of events in the session with a critical risk severity.</li> <li>end_time: <code>datetime</code> The date and time when this session ended.</li> <li>exfiltration_summary: <code>str</code> An English summary of the exfiltration (if any) in this session.</li> <li>first_observed: <code>datetime</code> The date and time at which this session was first observed.</li> <li>high_events: <code>int</code> The number of events in the session with a high risk severity.</li> <li>last_updated: <code>datetime</code> The date and time at which this session was last updated.</li> <li>low_events: <code>int</code> The number of events in the session with a low risk severity</li> <li>moderate_events: <code>int</code> The number of events in the session with a moderate risk severity.</li> <li>no_risk_events: <code>int</code> The number of events in the session with a no risk severity.</li> <li>notes: <code>str</code> The set of notes associated with this session.</li> <li>risk_indicators: <code>List[str]</code> The list of risk indicator/weight combinations observed in this session.</li> <li>scores: <code>str</code> The history of all score assignments for this session.</li> <li>session_id: <code>str</code> The session ID.</li> <li>states: <code>str</code> The history of states this session has been in.</li> <li>tenant_id: <code>str</code> The tenant ID.</li> <li>triggered_alerts: <code>str</code> The list of all alerts that were triggered by activity in this session.</li> </ul> class <code>incydr.models.SessionsPage</code>(*, items=None, totalCount=None, **extra_data) <p>A model representing a page of sessions.</p> <p>Fields:</p> <ul> <li>items: <code>List[Session]</code> The list of sessions returned by the query.</li> <li>total_count: <code>int</code> The total count of sessions returned by the query.</li> </ul>"},{"location":"sdk/models/#trusted-activities","title":"Trusted Activities","text":""},{"location":"sdk/models/#trustedactivity-model","title":"<code>TrustedActivity</code> model","text":"class <code>incydr.models.TrustedActivity</code>(*, activityActionGroups=None, activityId=None, isHighValueSource=None, description=None, principalType=None, type=None, updateTime=None, updatedByPrincipalId=None, updatedByPrincipalName=None, value=None, **extra_data) <p>A model representing an TrustedActivity.</p> <p>Fields:</p> <ul> <li>activity_action_groups: <code>List[ActivityActionGroup]</code> The list of activity actions associated with the activity.</li> <li>activity_id: <code>str</code> The unique identifier of the trusted activity.</li> <li>description: <code>str</code> A description of the trusted activity.</li> <li>principal_type: <code>PrincipalType | None</code></li> <li>activity_type: <code>ActivityType | None</code> The type of the trusted activity.</li> <li>update_time: <code>datetime | None</code> The time at which the trust activity was last created or modified.</li> <li>updated_by_principal_id: <code>str | None</code> The unique identifier of the user who last updated the trust activity.</li> <li>updated_by_principal_name: <code>str | None</code> The username of the user who last updated the trusted activity.</li> <li>value: <code>str</code> The value of the trusted activity.</li> </ul>"},{"location":"sdk/models/#trustedactivitiespage-model","title":"<code>TrustedActivitiesPage</code> model","text":"class <code>incydr.models.TrustedActivitiesPage</code>(*, totalCount=None, trustedActivities=None, **extra_data) <p>A model representing a page of <code>TrustedActivity</code> objects.</p> <p>Fields:</p> <ul> <li>total_count: <code>int</code> Total count of trusted activities found by the query.</li> <li>trusted_activities: <code>List[TrustedActivity]</code> The list of trusted activities retrieved from the query.</li> </ul>"},{"location":"sdk/models/#users","title":"Users","text":""},{"location":"sdk/models/#user-model","title":"<code>User</code> model","text":"class <code>incydr.models.User</code>(*, deviceUid=None, email=None, id=None, **extra_data)"},{"location":"sdk/models/#userspage-model","title":"<code>UsersPage</code> model","text":"class <code>incydr.models.UsersPage</code>(*, users=None, totalCount=None, **extra_data) <p>A model representing a page of <code>User</code> objects.</p> <p>Fields:</p> <ul> <li>users: <code>List[User]</code> - The list of <code>n</code> number of users retrieved from the query, where <code>n=page_size</code>.</li> <li>total_count: <code>int</code> - Total count of users found by query.</li> </ul>"},{"location":"sdk/models/#role-model_1","title":"<code>Role</code> model","text":"class <code>incydr.models.Role</code>(*, roleId=None, roleName=None, creationDate=None, modificationDate=None, permissions=None, **extra_data) <p>A model representing a role.</p> <p>Fields:</p> <ul> <li>role_id: <code>str</code> - A role ID.</li> <li>role_name: <code>str</code> - A role name.</li> <li>modification_date: <code>str</code> - The date and time this role for the user was last modified.</li> <li>creation_date: <code>str</code> - The date and time this role for the user was created.</li> <li>permission_ids: <code>str</code> - The permission IDs associated with this role.</li> </ul>"},{"location":"sdk/models/#risk-profiles","title":"Risk Profiles","text":""},{"location":"sdk/models/#riskprofile-model","title":"<code>RiskProfile</code> model","text":"class <code>incydr.models.RiskProfile</code>(*, active=None, cloudAliases=None, country=None, deleted=None, department=None, displayName=None, division=None, employmentType=None, endDate=None, locality=None, managerDisplayName=None, managerId=None, managerUsername=None, notes=None, region=None, startDate=None, supportUser=None, tenantId=None, title=None, userId=None, username=None, **extra_data) <p>A model representing a risk profile.</p> <p>Fields:</p> <ul> <li>active: <code>bool</code> - Whether the actor is active.</li> <li>cloud_alias: <code>List[str]</code> - List of cloud aliases for the actor.</li> <li>country: <code>str</code> - The actor's country.</li> <li>deleted: <code>bool</code> - Whether the actor has been deleted.</li> <li>department: <code>str</code> - The actor's department.</li> <li>display_name: <code>str</code> - The actor's display name.</li> <li>division: <code>str</code> - The actor's division.</li> <li>employment_type: <code>str</code> - The actor's employment type.</li> <li>end_date: <code>Date</code> - Departure date for the actor</li> <li>locality: <code>str</code> - The actor's locality (city).</li> <li>manager_display_name: <code>str</code> - The actor's manager's display name.</li> <li>manager_id: <code>str</code> - Unique actor ID of the actor's manager.</li> <li>manager_username: <code>str</code> - The Code42 actorname of the actor's manager.</li> <li>notes: <code>str</code> - Additional notes about the actor.</li> <li>region: <code>str</code> - The actor's region (state).</li> <li>start_date: <code>Date</code> - Starting date for the actor.</li> <li>support_user: <code>bool</code> - Whether the actor is a support actor.</li> <li>tenant_id: <code>str</code> - Unique tenant ID.</li> <li>title: <code>str</code> - The actor's job title.</li> <li>user_id: <code>str</code> - Unique actor ID.</li> <li>username: <code>str</code> - actor's Code42 actorname.</li> </ul>"},{"location":"sdk/models/#riskprofilespage-model","title":"<code>RiskProfilesPage</code> model","text":"class <code>incydr.models.RiskProfilesPage</code>(*, totalCount=None, userRiskProfiles=None, **extra_data) <p>A model representing a page of <code>RiskProfile</code> objects.</p> <p>Fields:</p> <ul> <li>total_count: <code>int</code> The total count of all risk profiles.</li> <li>user_risk_profiles: <code>List[RiskProfile]</code> The list of <code>n</code> number of risk profiles                         retrieved from the query, where <code>n=page_size</code>.</li> </ul>"},{"location":"sdk/models/#watchlists","title":"Watchlists","text":""},{"location":"sdk/models/#watchlist-model","title":"<code>Watchlist</code> model","text":"class <code>incydr.models.Watchlist</code>(*, description=None, listType, stats=None, tenantId=None, title=None, watchlistId=None, **extra_data) <p>A model representing an Incydr Watchlist.</p> <p>Fields:</p> <ul> <li>description: <code>str</code> - Optional description for a custom watchlist.</li> <li>list_type: <code>WatchlistType</code> - The watchlist type.</li> <li>stats: <code>WatchlistStats</code> - Watchlist membership information.  Includes <code>included_user_count</code>, <code>included_department_count</code>, <code>included_directory_groups_count</code>, and <code>excluded_users_count</code>.</li> <li>tenant_id: <code>str</code> - A unique tenant ID.</li> <li>title: <code>str</code> - Title for a custom watchlist.</li> <li>watchlist_id: <code>str</code> - A unique watchlist ID.</li> </ul>"},{"location":"sdk/models/#watchlistspage-model","title":"<code>WatchlistsPage</code> model","text":"class <code>incydr.models.WatchlistsPage</code>(*, totalCount=None, watchlists=None, **extra_data) <p>A model representing a page of <code>Watchlist</code> objects.</p> <p>Fields:</p> <ul> <li>total_count: <code>int</code> - Total count of watchlists found by the query.</li> <li>watchlists: <code>List[Watchlist]</code> - The list <code>n</code> number of watchlists retrieved from the query, where <code>n=page_size</code>.</li> </ul>"},{"location":"sdk/models/#watchlistuser-model","title":"<code>WatchlistUser</code> model","text":"class <code>incydr.models.WatchlistUser</code>(*, addedTime=None, userId=None, username=None, **extra_data) <p>A model representing a user whose associated with a watchlist.</p> <p>Fields:</p> <ul> <li>added_time: <code>datetime</code> - The time the user was associated with the watchlist.</li> <li>user_id: <code>str</code> - Unique user ID.</li> <li>username: `str - Username.</li> </ul>"},{"location":"sdk/models/#watchlistmemberslist-model","title":"<code>WatchlistMembersList</code> model","text":"class <code>incydr.models.WatchlistMembersList</code>(*, totalCount=None, watchlistMembers=None, **extra_data) <p>A model representing a list of watchlist members. Watchlist members are users who are on a list, whether it is because they are individually included, or because they are part of a department or directory group that is included.</p> <p>Fields:</p> <ul> <li>watchlist_members: <code>List[WatchlistUser]</code> - The list of watchlist members.</li> <li>total_count: <code>int</code> - Total count of members on the watchlist.</li> </ul>"},{"location":"sdk/models/#includeduserslist-model","title":"<code>IncludedUsersList</code> model","text":"class <code>incydr.models.IncludedUsersList</code>(*, includedUsers=None, totalCount=None, **extra_data) <p>A model representing a list of users included on a watchlist. Included users are those that have been individually included on that list.</p> <ul> <li>included_users: <code>List[WatchlistUser]</code> - The list of included users.</li> <li>total_count: <code>int</code> - The total count of all included users.</li> </ul>"},{"location":"sdk/models/#excludeduserslist-model","title":"<code>ExcludedUsersList</code> model","text":"class <code>incydr.models.ExcludedUsersList</code>(*, excludedUsers=None, totalCount=None, **extra_data) <p>A model representing a list of users excluded from a watchlist. Excluded users are those that have been individually excluded from that list.</p> <p>Fields:</p> <ul> <li>excluded_users: <code>List[WatchlistUser]</code> - The list of excluded users.</li> <li>total_count: <code>int</code></li> </ul>"},{"location":"sdk/models/#includeddepartmentslist-model","title":"<code>IncludedDepartmentsList</code> model","text":"class <code>incydr.models.IncludedDepartmentsList</code>(*, includedDepartments=None, totalCount=None, **extra_data) <p>A model representing a list of departments included on a watchlist.</p> <p>Fields:</p> <ul> <li>included_departments: <code>List[IncludedDepartment]</code> - The list of included departments.</li> <li>total_count: <code>int</code> - The total count of all included departments.</li> </ul>"},{"location":"sdk/models/#includeddepartment-model","title":"<code>IncludedDepartment</code> model","text":"class <code>incydr.models.IncludedDepartment</code>(*, addedTime=None, name=None, **extra_data) <p>A model representing a department included on a watchlist.</p> <p>Fields:</p> <ul> <li>added_time: <code>datetime</code> - The time the department was included on the watchlist.</li> <li>name: <code>str</code> - Department name. Example: \"Engineering\".</li> </ul>"},{"location":"sdk/models/#includeddirectorygroupslist-model","title":"<code>IncludedDirectoryGroupsList</code> model","text":"class <code>incydr.models.IncludedDirectoryGroupsList</code>(*, includedDirectoryGroups=None, totalCount=None, **extra_data) <p>A model representing a list of directory groups included on a watchlist.</p> <p>Fields:</p> <ul> <li>included_directory_groups: <code>List[IncludedDirectoryGroup]</code> - The list of included directory groups.</li> <li>total_count: <code>int</code> - The total count of all included directory groups.</li> </ul>"},{"location":"sdk/models/#includeddirectorygroup-model","title":"<code>IncludedDirectoryGroup</code> model","text":"class <code>incydr.models.IncludedDirectoryGroup</code>(*, addedTime=None, groupId=None, isDeleted=None, name=None, **extra_data) <p>A model representing a directory group included on a watchlist.</p> <p>Fields:</p> <ul> <li>added_time: <code>datetime</code> - The time the directory group was included on the watchlist.</li> <li>group_id: <code>str</code> - A unique group ID for the directory group.</li> <li>is_deleted: <code>bool</code> - Whether the included group was deleted by the directory provider but still referenced by the watchlist</li> <li>name: <code>str</code> - The name of directory group. Example: \"Research and Development\".</li> </ul>"},{"location":"sdk/settings/","title":"Configuring Settings","text":"<p>All settings for the Incydr SDK Client are managed by the <code>IncydrSettings</code> model, which inherits from <code>pydantic.BaseSettings</code>.</p> class <code>_incydr_sdk.core.settings.IncydrSettings</code>(*, api_client_id, api_client_secret, url, page_size=100, max_response_history=5, use_rich=True, log_stderr=True, log_file=None, log_level=30, logger=None, user_agent_prefix=None) <p>Configure settings on the <code>incydr.Client</code>.</p> <p>Usage:</p> <pre><code>&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client()\n&gt;&gt;&gt; client.settings.page_size = 10\n</code></pre> <p>Settings can also be loaded from shell environment variables or .env files. Just prefix a setting's attribute name with <code>INCYDR_</code> when configuring via enviroment vars.</p> <p>For example: To load <code>client.settings.api_client_secret</code> from the environment, set <code>INCYDR_API_CLIENT_SECRET=\"my_secret\"</code>.</p> <p>The <code>incydr.Client</code> loads settings in the following priority:</p> <ul> <li>Args passed to <code>Client</code> constructor</li> <li>Shell environment variables</li> <li>An .env file in the current working directory</li> <li>An .env file in <code>~/.config/incydr</code> directory</li> </ul> <p>Attributes:</p> <ul> <li>api_client_id: <code>str</code> The API Client Identifier for authentication. env_var=<code>INCYDR_API_CLIENT_ID</code></li> <li>api_client_secret: <code>str</code> The API Client Secret for authentication. env_var=<code>INCYDR_API_CLIENT_SECRET</code></li> <li>url: <code>str</code> The URL of your Code42 API gateway instance. env_var=<code>INCYDR_URL</code></li> <li>page_size: <code>int</code> The default page size for all paginated requests. Defaults to 100. env_var=<code>INCYDR_PAGE_SIZE</code></li> <li>max_response_history: <code>int</code> The maximum number of responses the <code>incydr.Client.response_history</code> list will     store. Defaults to 5. env_var=<code>INCYDR_MAX_RESPONSE_HISTORY</code></li> <li>log_stderr: <code>bool</code> Enables logging to stderr. Defaults to True. env_var=<code>INCYDR_LOG_STDERR</code></li> <li>log_file: <code>str</code> The file path or file-like object to write log output to. Defaults to None. env_var=<code>INCYDR_LOG_FILE</code></li> <li>log_level: <code>int</code> The level for logging messages. Defaults to <code>logging.WARNING</code>. env_var=<code>INCYDR_LOG_LEVEL</code></li> <li>logger: <code>logging.Logger</code> The logger used for client logging. Cannot be defined via environment variable. Can     be replaced with a custom <code>logging.Logger</code>. If a custom <code>Logger</code> is supplied, the other log settings will have     no effect and must be configured manually on the custom logger.</li> <li>user_agent_prefix: <code>str</code> Prefixes all <code>User-Agent</code> headers with the supplied string.</li> <li>use_rich: <code>bool</code> Enables rich support in logging     and the Python repl. Defaults to True. env_var=<code>INCYDR_USE_RICH</code></li> </ul>"},{"location":"sdk/clients/actors/","title":"Actors","text":"<p>Actors are identities that generate events collected by Incydr. User cloud accounts are consolidated into a single actor through adoption, which tie related actors to one parent actor. These actor APIs can be used to retrieve information about actors and their relationships, and also manage adoption.</p> class <code>_incydr_sdk.actors.client.ActorsV1</code>(parent) <p>Client for <code>/v1/actors</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.actors.v1.get_page()\n</code></pre> <code>get_actor_by_id</code>(self, actor_id, prefer_parent=False) <p>Get an actor by their actor ID.</p> <p>Parameters:</p> <ul> <li>actor_id: <code>str</code> (required) - Unique ID for the actor.</li> <li>prefer_parent: <code>str</code> - Returns an actor's parent when applicable. Returns an actor themselves if they have no parent.</li> </ul> <p>Returns: An <code>Actor</code> object representing the actor.</p> <code>get_actor_by_name</code>(self, name, prefer_parent=False) <p>Get an actor by their name.</p> <p>Parameters:</p> <ul> <li>name: <code>str</code> (required) - The actor name.</li> <li>prefer_parent: <code>str</code> - Returns an actor's parent when applicable. Returns an actor themselves if they have no parent.</li> </ul> <p>Returns: An <code>Actor</code> object representing the actor.</p> <code>get_family_by_member_id</code>(self, actor_id) <p>Get an actor family from the actor ID of any family member.</p> <p>Parameters:</p> <ul> <li>actor_id: <code>str</code> (required) - Unique ID for an actor.</li> </ul> <p>Returns: An <code>Actor Family</code> object representing the family of actors.</p> <code>get_family_by_member_name</code>(self, name) <p>Get an actor family from the name of any family member.</p> <p>Parameters:</p> <ul> <li>name: <code>str</code> (required) - Name of an actor.</li> </ul> <p>Returns: An <code>ActorFamily</code> object representing the family of actors.</p> <code>get_page</code>(self, active=None, name_starts_with=None, name_ends_with=None, page_num=1, page_size=500, prefer_parent=False) <p>Get a page of actors.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>active: <code>bool</code> - Find actors with the given active state. When <code>True</code>, returns only active actors. When <code>False</code> returns only inactive actors. Defaults to <code>None</code>, returning both.</li> <li>name_starts_with: <code>str</code> - Find actors whose name (e.g. username/email) starts with this text, ignoring case.</li> <li>name_ends_with: <code>str</code> - Find actors whose name (e.g. username/email) ends with this text, ignoring case.</li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page. Must be between 1 and 500. Defaults to 500.</li> <li>prefer_parent: <code>bool</code> = Returns an actor's parent when applicable. Returns an actor themselves if they have no parent.</li> </ul> <p>Returns: An <code>Actor</code> object representing the actor.</p> <code>iter_all</code>(self, active=None, name_starts_with=None, name_ends_with=None, page_size=500, prefer_parent=False) <p>Iterate over all actors.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Actor</code> objects.</p>"},{"location":"sdk/clients/agents/","title":"Agents","text":"<p>Incydr Agents run on the endpoints in your environment and monitor for insider risk activity.</p> class <code>_incydr_sdk.agents.client.AgentsV1</code>(parent) <p>Client for <code>/v1/agents</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.agents.v1.get_page()\n</code></pre> <code>activate</code>(self, agent_ids) <p>Activate a set of agents.</p> <p>Parameters:</p> <ul> <li>agent_ids: <code>str | List[str]</code> - An agent ID or list of agent IDs to activate.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>deactivate</code>(self, agent_ids) <p>Deactivate a set of agents.</p> <p>Parameters:</p> <ul> <li>agent_ids: <code>str | List[str]</code> - An agent ID or list of agent IDs to deactivate.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>get_agent</code>(self, agent_id) <p>Get a single agent.</p> <p>Parameters:</p> <ul> <li>agent_id: <code>str</code> (required) - The unique ID for the agent.</li> </ul> <p>Returns: An <code>Agent</code> object representing the agent.</p> <code>get_page</code>(self, active=None, agent_type=None, sort_dir=, sort_key=, page_num=1, page_size=500, agent_healthy=None, agent_health_issue_types=None) <p>Get a page of agents.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>active: <code>bool | None</code> - When <code>True</code>, return only active agents. When <code>False</code>, return only deactivated agents. Defaults to <code>None</code> (returning both).</li> <li>agent_type: <code>AgentType | str | None</code> - Return only agents of given type.</li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page.</li> <li>sort_dir: <code>SortDirection</code> - <code>asc</code> or <code>desc</code>. The direction in which to sort the response based on the corresponding key. Defaults to <code>asc</code>.</li> <li>sort_key: <code>SortKeys</code> - Values on which the response will be sorted. Defaults to agent name.</li> <li>agent_healthy: <code>bool | None</code> - Optionally retrieve agents with this health status. Agents that have no health issue types are considered healthy.</li> <li>agent_health_issue_types: <code>List[str] | str</code> - Optionally retrieve agents that have (at least) any of the given issue type(s). Health issue types include the following: <code>NOT_CONNECTING</code>, <code>NOT_SENDING_SECURITY_EVENTS</code>.</li> </ul> <p>Returns: An <code>AgentsPage</code> object.</p> <code>iter_all</code>(self, active=None, agent_type=None, sort_dir=, sort_key=, page_size=500, agent_healthy=None, agent_health_issue_types=None) <p>Iterate over all agents.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Agent</code> objects.</p> <code>update</code>(self, agent_id, name=None, external_reference=None) <p>Update an agent.</p> <p>Parameters:</p> <ul> <li>agent_id: <code>str</code> (required) - The unique ID for the agent.</li> <li>name: <code>str | None</code> - The updated name for the agent.</li> <li>external_reference: <code>str | None</code> - The updated external reference info for the agent.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p>"},{"location":"sdk/clients/alert_queries/","title":"Alert Querying","text":"<p>Use the <code>AlertQuery</code> class to create a query for searching and filtering Incydr alerts.  More details on how to use the <code>AlertQuery</code> class can be found in the Query Building section below.</p> class <code>_incydr_sdk.queries.alerts.AlertQuery</code>(start_date=None, end_date=None, on=None, *, tenantId=None, groupClause='AND', groups=None, pgNum=0, pgSize=100, srtDirection='DESC', srtKey='CreatedAt', **kwargs) <p>Class to build an alert query. Use the class methods to attach additional filter operators.</p> <p>Usage examples:</p> <p>Construct a query that finds all alerts created in the past 10 days that are now marked <code>RESOLVED</code>:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; from datetime import timedelta\n&gt;&gt;&gt; from incydr.enums.alerts import AlertState, AlertTerm\n&gt;&gt;&gt; query = incydr.AlertQuery(start_date=timedelta(days=10)).equals(AlertTerm.STATE, AlertState.RESOLVED)\n</code></pre> <p>Construct a query that finds alerts triggered by actor <code>user@example.com</code> with a risk severity of either <code>HIGH</code> or <code>CRITICAL</code>:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; query = incydr.AlertQuery().equals(\"Actor\", \"user@example.com\").equals(\"RiskSeverity\", [\"HIGH\", \"CRITICAL\"])\n</code></pre> <p>Parameters:</p> <ul> <li>start_date: <code>int | float | str | datetime | timedelta</code> - Start of the date range to query for alerts.     Accepts <code>int|float</code> unix timestamp, string representation of the date (<code>%Y-%m-%d %H:%M:%S</code> or <code>%Y-%m-%d</code>     formats), or <code>datetime</code> object for absolute dates, or if a <code>timedelta</code> is provided it will be relative to the     current time when the query object was instantiated. Defaults to None.</li> <li>end_date: <code>int | float | str | datetime</code> - End of the date range to query for alerts. Defaults to     None.</li> <li>on: <code>str | date | datetime</code> - Retrieve alerts that occurred on a specific date (incompatible with either     <code>start_date</code> or <code>end_date</code> arguments).</li> </ul> <code>equals</code>(self, term, values) <p>Adds an <code>equals</code> filter to the query. The opposite of the <code>not_equals</code> filter.</p> <p>Causes the query to return alerts where the field corresponding to the term equals the indicated value(s).</p> <p>Example: <code>AlertQuery().equals('Status', 'PENDING')</code> will return all alerts with a status of 'PENDING'.</p> <p>Parameters:</p> <ul> <li>term: <code>str</code> - The term which corresponds to an alert field. List of valid terms can be found in the     <code>incydr.enums.alerts.AlertTerm</code> enum object.</li> <li>values: <code>str</code>, <code>List[str]</code> - The value(s) for the term to match.</li> </ul> <code>not_equals</code>(self, term, values) <p>Adds an <code>not_equals</code> filter to the query. The opposite of the <code>equals</code> filter.</p> <p>When passed as part of a query, returns alerts where the field corresponding to the filter term does not equal the indicated value(s).</p> <p>Example:     <code>AlertQuery().not_equals('State', 'RESOLVED')</code> creates a query which will return alerts that are not in a     <code>RESOLVED</code> state.</p> <p>Parameters:</p> <ul> <li>term: <code>str</code> - The term which corresponds to an alert field.</li> <li>values: <code>str</code>, <code>List[str]</code> - The value(s) for the term to not match.</li> </ul> <code>contains</code>(self, term, value) <p>Adds a <code>contains</code> filter to the query. The opposite of the <code>does_not_contain</code> filter.</p> <p>When passed as part of a query, returns alerts where the field corresponding to the filter term contains the provided string value.</p> <p>Example:     <code>AlertQuery().contains('Description', 'removable media')</code> creates a query which will return alerts where the     alert rule description contains the string \"removable media\".</p> <p>Parameters:</p> <ul> <li>term: <code>str</code> - The term which corresponds to an alert field.</li> <li>value: <code>str</code> - The value for the term to match.</li> </ul> <code>does_not_contain</code>(self, term, value) <p>Adds a <code>does_not_contain</code> filter to the query. The opposite of the <code>contains</code> filter.</p> <p>When passed as part of a query, returns alerts where the field corresponding to the filter term does not contain the provided string value.</p> <p>Example:     <code>AlertQuery().does_not_contain('Description', 'removable media')</code> creates a query which will return alerts     where the alert rule description does not contain the string \"removable media\".</p> <p>Parameters:</p> <ul> <li>term: <code>str</code> - The term which corresponds to an alert field.</li> <li>value: <code>str</code> - The value for the term to not match.</li> </ul> <code>matches_any</code>(self) <p>Sets operator to combine multiple filters with <code>OR</code>.</p> <p>Returns alerts that match at least one of the filters in the query.</p> <p>Default operator is <code>AND</code>, which returns only alerts that match all filters in the query.</p>"},{"location":"sdk/clients/alert_queries/#query-building","title":"Query Building","text":"<p>The <code>AlertQuery</code> class can be imported directly from the <code>incydr</code> module.</p> <pre><code># import the AlertQuery class\nfrom incydr import AlertQuery\n</code></pre> <p>The <code>AlertQuery</code> class can be constructed with arguments to define the date range for the query. The <code>start_date</code> argument sets the beginning of the date range to query, it can accept the following:</p> <ul> <li>a Unix epoch timestamp as an <code>int</code> or <code>float</code></li> <li>a string representation of the date in either <code>%Y-%m-%d %H:%M:%S</code> or <code>%Y-%m-%d</code> formats.</li> <li>a <code>datetime.datetime</code> object</li> <li>a <code>datetime.timedelta</code> (converts to <code>datetime</code> relative to the current time when the query object was instantiated)</li> </ul> <p>The <code>end_date</code> argument sets the (optional) end of the range to query, and accepts the same arguments as <code>start_date</code>.</p> <p>The <code>on</code> argument tells the alerts service to retrieve all alerts created on the date given, it accepts: - a <code>datetime.date</code> or <code>datetime.datetime</code> object (<code>date</code> value will be extracted from <code>datetime</code> and hour/minute/seconds   data will be discarded) - a string representation of a date in either <code>%Y-%m-%d %H:%M:%S</code> or <code>%Y-%m-%d</code> formats (again if time data is supplied   it will have no effect on the query)</p> <p>To create a query which filters alerts which have a state of <code>OPEN</code> or <code>PENDING</code> and were created in the past 3 days: <pre><code>query = AlertQuery(start_date=timedelta(days=3)).equals('State', ['OPEN', 'PENDING'])\n</code></pre></p> <p>All filter methods take a <code>term</code> string as their first argument, which indicates which field to filter on (ex: <code>'RiskSeverity'</code>), and the second arg is the value (or list of values) to search for.</p> <p>The following filter methods are available: * <code>.equals(term, value)</code> * <code>.not_equals(term, value)</code> * <code>.contains(term, value)</code> * <code>.does_not_contain(term, value)</code></p> <p>By default, all filters in a query will be combined in an <code>AND</code> group, meaning only results matching all filters will be returned. If you want to <code>OR</code> the filters, call the <code>.matches_any()</code> method on the query.</p> <p>Pass the event constructed query object to the <code>client.alerts.v1.search()</code> method to get execute the search.</p>"},{"location":"sdk/clients/alert_queries/#pagination","title":"Pagination","text":"<p>If a query results in more results than the configured page size of the query (max page size is 500), increment the <code>.page_num</code> value of the query and re-run the <code>.search()</code> method:</p> <pre><code>from datetime import timedelta\nfrom incydr import Client, AlertQuery\n\nclient = Client(**kwargs)\n\nquery = AlertQuery(start_date=timedelta(days=10))\nfirst_page = client.alerts.v1.search(query)\nif first_page.total_count &gt; query.page_size:\n    query.page_num += 1\nsecond_page = client.alerts.v1.search(query)\n...  # continue until all alerts are retrieved\n</code></pre> <p>Alternately, the <code>client.alerts.v1.iter_all()</code> method will automatically request pages until all the results are complete and will yield each Alert individually, so you don't need to think about paging at all:</p> <pre><code>from datetime import timedelta\nimport incydr\nclient = incydr.Client(**kwargs)\n\nquery = incydr.AlertQuery(start_date=timedelta(days=10))\nfor alert in client.alerts.v1.iter_all(query):\n    ... # process alert here\n</code></pre>"},{"location":"sdk/clients/alert_rules/","title":"Alert Rules","text":"class <code>_incydr_sdk.alert_rules.client.AlertRulesV2</code>(parent) <p>Client for <code>/v2/alert-rules</code> and <code>/v2/alerts/rules</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.alert_rules.v2.get_page()\n</code></pre> <code>disable_rules</code>(self, rule_ids) <p>Disable a single rule or list of alert rules.</p> <p>Parameters:</p> <ul> <li>rule_ids: <code>str</code>, <code>List[str]</code> (required) - A single rule ID or a list of rule IDs.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>enable_rules</code>(self, rule_ids) <p>Enable a single rule or a list of alert rules.</p> <p>Parameters:</p> <ul> <li>rule_ids: <code>str</code>, <code>List[str]</code> (required) - A single rule ID or a list of rule IDs.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>get_page</code>(self, page_num=0, page_size=None, watchlist_id=None) <p>Get a page of alert rules.</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 0.</li> <li>page_size: <code>int</code> - Max number of results to return for a page.</li> <li>watchlist_id: <code>str</code> - Watchlist ID to filter for alert rules that are associated with this watchlist.</li> </ul> <p>Returns: A list of <code>RuleDetails</code> objects.</p> <code>get_rule</code>(self, rule_id) <p>Get a single alert rule.</p> <p>Parameters:</p> <ul> <li>rule_id: <code>str</code> (required) - A rule ID.</li> </ul> <p>Returns: A <code>RuleDetails</code> object that contains the details for an alert rule.</p> <code>get_users</code>(self, rule_id) <p>Get all users assigned to a rule.</p> <p>Raises a <code>MissingUsernameCriterionError</code> if the rule doesn't have a username filter.</p> <p>Parameters:</p> <ul> <li>rule_id: <code>str</code> (required) - The ID of the rule.</li> </ul> <p>Returns: A <code>RuleUsersList</code> model.</p> <code>iter_all</code>(self, page_size=None, watchlist_id=None) <p>Iterate over all alert rules.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>RuleDetails</code> objects.</p> <code>remove_all_users</code>(self, rule_id) <p>Remove all users from a rule.</p> <p>Parameters:</p> <ul> <li>rule_id: <code>str</code> (required) - The ID of the rule to update.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p>"},{"location":"sdk/clients/alerts/","title":"Alerts (Deprecated)","text":"class <code>_incydr_sdk.alerts.client.AlertsV1</code>(parent) <p>Client for <code>/v1/alerts</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; from incydr.enums.alerts import AlertState\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.alerts.v1.change_state(\"&lt;alert_id&gt;\", AlertState.RESOLVED)\n</code></pre> <code>add_note</code>(self, alert_id, note) <p>Add a note to an alert.</p> <p>Parameters:</p> <ul> <li>alert_id: <code>List[str]</code> (required) -</li> </ul> <p>Returns: A <code>Response</code> object indicating success.</p> <code>change_state</code>(self, alert_ids, state, note=None) <p>Change the state of a set of alerts (and optionally add note indicating reason for change in the same request).</p> <p>Parameters:</p> <ul> <li>alert_id: <code>str | List[str]</code> (required) - ID or list of IDs of the alert(s) to update.</li> <li>state: <code>AlertState</code> (required) - State to set alert(s) to.</li> <li>note: <code>str</code> - Optional note text.</li> </ul> <p>Returns: A <code>Response</code> object indicating success.</p> <code>get_details</code>(self, alert_ids) <p>Get full details for a set of alerts.</p> <p>The <code>query-details</code> endpoint accepts a maximum of 100 ids per request, if <code>alert_ids</code> is &gt; 100, multiple requests will be made and results will be combined into a single list.</p> <p>Parameters:</p> <ul> <li>alert_ids: <code>str | List[str]</code> (required) - Single alertId or list of alertId strings.</li> </ul> <p>Returns: A list of <code>AlertDetails</code> objects.</p> <code>iter_all</code>(self, query) <p>Retrieve all alerts for a given query, automatically retrieving multiple pages if they exist.</p> <ul> <li>query: <code>AlertQuery</code> (required) - The query object used to filter alerts by different fields.</li> </ul> <p>Returns: A generator yielding individual <code>AlertSummary</code> objects.</p> <code>search</code>(self, query) <p>Search for alerts.</p> <p>Parameters:</p> <ul> <li>query: <code>AlertQuery</code> (required) - The query object to filter alerts by different fields.</li> </ul> <p>Returns: An <code>AlertQueryPage</code> object.</p>"},{"location":"sdk/clients/audit_log/","title":"Audit Log","text":"class <code>_incydr_sdk.audit_log.client.AuditLogV1</code>(parent) <p>Client for <code>/v1/audit</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.audit_log.v1.get_page()\n</code></pre> <code>download_events</code>(self, target_folder, actor_ids=None, actor_ip_addresses=None, actor_names=None, start_time=None, end_time=None, event_types=None, resource_ids=None, user_types=None) <p>Export search results.</p> <p>Parameters:</p> <ul> <li>target_folder: <code>Path, str</code> (required) - A string or <code>pathlib.Path</code> object that represents the folder which the file will be saved to.</li> <li>actor_ids: <code>List[str] | str</code> - Finds events whose actor_id is one of the given ids.</li> <li>actor_ip_addresses: <code>List[str] | str</code> - Finds events whose actor_ip_address is one of the given IP addresses.</li> <li>actor_names: <code>List[str] | str</code> - Finds events whose actor_name is one of the given names.</li> <li>start_time: <code>datetime | str</code> - Search for events within a date range.  Start time for this date range.</li> <li>end_time: <code>datetime | str</code> - Search for events within a date range.  End time for this date range.</li> <li>event_types: <code>List[str] | str</code> - Finds events whose type is one of the given types.</li> <li>resource_ids: <code>List[str] | str</code> - Filters searchable events that match resource_id.</li> <li>user_types: <code>List[UserTypes]</code> - Filters searchable events that match actor type.</li> </ul> <p>Returns: A <code>pathlib.Path</code> object representing location of the downloaded csv file.</p> <code>get_event_count</code>(self, page_num=0, page_size=None, actor_ids=None, actor_ip_addresses=None, actor_names=None, start_time=None, end_time=None, event_types=None, resource_ids=None, user_types=None) <p>Get the total result count of a search.</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 0.</li> <li>page_size: <code>int</code> - Max number of results to return per page.</li> <li>actor_ids: <code>List[str] | str</code> - Finds events whose actor_id is one of the given ids.</li> <li>actor_ip_addresses: <code>List[str] | str</code> - Finds events whose actor_ip_address is one of the given IP addresses.</li> <li>actor_names: <code>List[str] | str</code> - Finds events whose actor_name is one of the given names.</li> <li>start_time: <code>datetime | str</code> - Search for events within a date range.  Start time for this date range.</li> <li>end_time: <code>datetime | str</code> - Search for events within a date range.  End time for this date range.</li> <li>event_types: <code>List[str] | str</code> - Finds events whose type is one of the given types.</li> <li>resource_ids: <code>List[str] | str</code> - Filters searchable events that match resource_id.</li> <li>user_types: <code>List[UserTypes]</code> - Filters searchable events that match actor type.</li> </ul> <p>Returns: An <code>int</code> indicating the number of resulting audit log events from search.</p> <code>get_page</code>(self, page_num=0, page_size=None, actor_ids=None, actor_ip_addresses=None, actor_names=None, start_time=None, end_time=None, event_types=None, resource_ids=None, user_types=None) <p>Search audit log entries.</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - page_num number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page. Defaults to client's <code>page_size</code> setting.     Maximum page size is 10,000.</li> <li>actor_ids: <code>List[str] | str</code> - Finds events whose actor_id is one of the given ids.</li> <li>actor_ip_addresses: <code>List[str] | str</code> - Finds events whose actor_ip_address is one of the given IP addresses.</li> <li>actor_names: <code>List[str] | str</code> - Finds events whose actor_name is one of the given names.</li> <li>start_time: <code>datetime | str</code> - Search for events within a date range.  Start time for this date range.</li> <li>end_time: <code>datetime | str</code> - Search for events within a date range.  End time for this date range.</li> <li>event_types: <code>List[str] | str</code> - Finds events whose type is one of the given types.</li> <li>resource_ids: <code>List[str] | str</code> - Filters searchable events that match resource_id.</li> <li>user_types: <code>List[UserTypes]</code> - Filters searchable events that match actor type.</li> </ul> <p>Returns: A <code>AuditEventsPage</code> object representing the search response.</p> <code>iter_all</code>(self, page_size=None, actor_ids=None, actor_ip_addresses=None, actor_names=None, start_time=None, end_time=None, event_types=None, resource_ids=None, user_types=None) <p>Iterate over all audit log events.</p> <p>Accepts the same parameters as <code>.get_page()</code> except <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>dict</code> objects representing audit log events.</p>"},{"location":"sdk/clients/cases/","title":"Cases","text":"class <code>_incydr_sdk.cases.client.CasesV1</code>(parent) <p>Client for <code>/v1/cases</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.cases.v1.get_case(23)\n</code></pre> <code>add_file_events_to_case</code>(self, case_number, event_ids) <p>Attach file events to a case.</p> <p>Parameters:</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>event_ids: <code>str | List[str]</code> A string or list of strings representing the eventId(s) to attach to the     case.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>create</code>(self, name, subject=None, assignee=None, description=None, findings=None) <p>Create a case.</p> <p>Parameters:</p> <ul> <li>name: <code>str</code> (required) The unique name given to the case.</li> <li>subject: <code>str</code> The user UID of the subject being investigated in this case.</li> <li>assignee: <code>str</code> The actor ID of the administrator assigned to investigate the case.</li> <li>findings: <code>str</code> Markdown formatted text summarizing the findings for a case.</li> <li>description: <code>str</code> Brief description providing context for a case.</li> </ul> <p>Returns: A <code>Case</code> object representing the newly created case.</p> <code>delete</code>(self, case_number) <p>Delete a case.</p> <p>Parameters:</p> <ul> <li>case_number <code>int | Case</code> Unique numeric identifier for the case or a <code>Case</code> object.</li> </ul> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; client.cases.v1.delete(23)\n&lt;Response [204]&gt;\n\n# Alternatively:\n&gt;&gt;&gt; case = client.cases.v1.get_case(23)\n&gt;&gt;&gt; client.cases.v1.delete(case)\n</code></pre> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>delete_file_event_from_case</code>(self, case_number, event_id) <p>Remove file events from a case.</p> <p>Parameters:</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>event_id: <code>str</code> Unique identifier of event to remove from the case.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>download_file_event_csv</code>(self, case_number, target_folder) <p>Downloads all file event data for a case in CSV format to specified target folder.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>target_folder: <code>Path | str</code> A string or <code>pathlib.Path</code> object that represents the folder which the CSV     will be saved to.</li> </ul> <p>Returns: A <code>pathlib.Path</code> object representing location of the downloaded CSV.</p> <code>download_file_for_event</code>(self, case_number, event_id, target_folder) <p>Download the source file (if captured) from a file event attached to a case.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>event_id: <code>str</code> Unique identifier for event to download.</li> <li>target_folder: <code>Path | str</code> A string or <code>pathlib.Path</code> object that represents the folder which the file     will be saved to.</li> </ul> <p>Returns: A <code>pathlib.Path</code> object representing location of the downloaded file.</p> <code>download_full_case_zip</code>(self, case_number, target_folder, include_files=True, include_summary=True, include_file_events=True) <p>Downloads full export of case in ZIP format to specified target folder.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>target_folder: <code>Path | str</code> A string or <code>pathlib.Path</code> object that represents the folder which the ZIP     will be saved to.</li> <li>include_files: <code>bool</code> Include source files (if they are available) in the .zip. default=True</li> <li>include_summary: <code>bool</code> Include summary PDF in the .zip. default=True</li> <li>include_file_events: <code>bool</code> Include file events .csv in the .zip. default=True</li> </ul> <p>Returns: A <code>pathlib.Path</code> object representing location of the downloaded ZIP.</p> <code>download_summary_pdf</code>(self, case_number, target_folder) <p>Downloads a summary of a case in PDF format to specified target folder.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>target_folder: <code>Path | str</code> A string or <code>pathlib.Path</code> object that represents the folder which the PDF     will be saved to.</li> </ul> <p>Returns: A <code>pathlib.Path</code> object representing location of the downloaded PDF.</p> <code>get_case</code>(self, case_number) <p>Get a single case.</p> <p>Parameters:</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> </ul> <p>Returns: A <code>Case</code> object representing the case.</p> <code>get_file_event_detail</code>(self, case_number, event_id) <p>Get the full detail for a given file event attached to a case.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> Unique numeric identifier for the case.</li> <li>event_id: <code>str</code> Unique identifier for event associated with case.</li> </ul> <p>Returns:  A <code>FileEventV2</code> object representing the file event.</p> <code>get_file_events</code>(self, case_number, page_num=1, page_size=None) <p>Get abbreviated details for file events attached to a case.</p> <p>Parameters</p> <ul> <li>case_number: <code>int</code> - Unique numeric identifier for the case.</li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return for a page. Defaults to client's <code>page_size</code> setting.</li> </ul> <p>Returns: A <code>CaseFileEvents</code> object containing the associated file events.</p> <code>get_page</code>(self, assignee=None, created_at=None, is_assigned=None, last_modified_by=None, name=None, status=None, page_num=1, page_size=None, sort_dir=, sort_key=) <p>Get a page of cases.</p> <p>Filter results by passing appropriate parameters:</p> <p>Parameters:</p> <ul> <li>assignee: <code>str</code> - Actor ID of an assignee of a case on which to filter.</li> <li>created_at: <code>Tuple[datetime, datetime]</code> - Filter cases created between the supplied start and end times.</li> <li>is_assigned: <code>bool</code> - Filter cases with an assignee (<code>True</code>) or without (<code>False</code>).</li> <li>last_modified_by: <code>str</code> - User UID of the user who most recently modified the case.</li> <li>name: str - Name of a case on which to filter; will include partial matches.</li> <li>status: <code>CaseStatus</code> - One or more case statuses on which to filter. Available values: <code>OPEN</code>, <code>CLOSED</code></li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return for a page. Defaults to client's <code>page_size</code> setting.</li> <li>sort_dir: <code>SortDirection</code> - The direction on which to sort the response, based on the corresponding key.</li> <li>sort_key: <code>SortKeys</code> - One or more values on which the response will be sorted.</li> </ul> <p>Returns: A <code>CasesPage</code> object.</p> <code>iter_all</code>(self, assignee=None, created_at=None, is_assigned=None, last_modified_by=None, name=None, status=None, page_size=None, sort_dir=, sort_key=) <p>Iterate over all cases.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Case</code> objects.</p> <code>update</code>(self, case) <p>Updates a case. Valid updatable fields: name, assignee, description, findings, subject, status</p> <p>Parameters</p> <ul> <li>case: <code>Case</code> The modified case object.</li> </ul> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; case = client.cases.v1.get_case(23)\n&gt;&gt;&gt; case.name = \"Updated name\"\n&gt;&gt;&gt; client.cases.v1.update(case)\n</code></pre> <p>Returns: A <code>Case</code> object with updated values from server.</p>"},{"location":"sdk/clients/customer/","title":"Customer","text":"class <code>_incydr_sdk.customer.client.CustomerV1</code>(parent) <p>Client for <code>/v1/customer</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.customer.v1.get()\n</code></pre> <code>get</code>(self) <p>Get customer account information.</p> <p>Returns: A <code>Customer</code> object representing account information.</p>"},{"location":"sdk/clients/departments/","title":"Departments","text":"class <code>_incydr_sdk.departments.client.DepartmentsV1</code>(parent) <p>Client for <code>/v1/departments</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.departments.v1.get_page()\n</code></pre> <code>get_page</code>(self, page_num=1, page_size=None, name=None) <p>Get a page of departments.  Retrieves department information that has been pushed to Code42 from SCIM or User Directory Sync. The resulting department names can be used to include departments on watchlists.</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return for a page.</li> <li>user_id: <code>str</code> - Matches departments whose name is like the given value.</li> </ul> <p>Returns: A <code>DepartmentsPage</code> object.</p> <code>iter_all</code>(self, page_size=None, name=None) <p>Iterate over all departments.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual department names (<code>str</code>).</p>"},{"location":"sdk/clients/devices/","title":"Devices","text":"class <code>_incydr_sdk.devices.client.DevicesV1</code>(parent) <p>Client for <code>/v1/devices</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.devices.v1.get_page()\n</code></pre> <code>get_device</code>(self, device_id) <p>Get a single device.</p> <p>Parameters:</p> <ul> <li>device_id: <code>str</code> (required) - The unique ID for the device.</li> </ul> <p>Returns: A <code>Device</code> object representing the device.</p> <code>get_page</code>(self, active=None, blocked=None, page_num=1, page_size=None, sort_dir=, sort_key=) <p>Get a page of devices.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>active: <code>bool | None</code> - When true, return only active devices. When false, return only inactive devices. Defaults to returning both.</li> <li>blocked: <code>bool | None</code> - When true, return only blocked devices. When false, return only unblocked devices. Defaults to returning both.</li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page.</li> <li>sort_dir: <code>SortDirection</code> - 'asc' or 'desc'. The direction in which to sort the response based on the corresponding key. Defaults to 'asc'.</li> <li>sort_key: <code>SortKeys</code> - One or more values on which the response will be sorted. Defaults to device name.</li> </ul> <p>Returns: A 'DevicesPage' object.</p> <code>iter_all</code>(self, active=None, blocked=None, page_size=None, sort_dir=, sort_key=) <p>Iterate over all devices.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Device</code> objects.</p>"},{"location":"sdk/clients/directory_groups/","title":"Directory Groups","text":"class <code>_incydr_sdk.directory_groups.client.DirectoryGroupsV1</code>(parent) <p>Client for <code>/v1/departments</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.directory_groups.v1.get_page()\n</code></pre> <code>get_page</code>(self, page_num=1, page_size=None, name=None) <p>Get a page of directory groups. Retrieves directory group information that has been pushed to Code42 from SCIM or User Directory Sync. The resulting group IDs can be used to include directory groups on watchlists.</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return for a page.</li> <li>name: <code>str</code> - Matches directory groups whose name is like the given value.</li> </ul> <p>Returns: A <code>DirectoryGroupsPage</code> object.</p> <code>iter_all</code>(self, page_size=None, name=None) <p>Iterate over all directory groups.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>DirectoryGroup</code> objects.</p>"},{"location":"sdk/clients/file_event_queries/","title":"File Event Querying","text":""},{"location":"sdk/clients/file_event_queries/#eventquery-class","title":"EventQuery Class","text":"<p>Use the <code>EventQuery</code> class to create a query for searching and filtering file events.  More details on how to use the <code>EventQuery</code> class can be found in the Query Building section below.</p> class <code>_incydr_sdk.queries.file_events.EventQuery</code>(start_date=None, end_date=None, *, groupClause='AND', groups=None, pgNum=1, pgSize=100, pgToken='', srtDir='asc', srtKey='event.id', **kwargs) <p>Class to build a file event query. Use the class methods to attach additional filter operators.</p> <p>Parameters:</p> <pre><code>  start_date: <code>int</code>, <code>float</code>, <code>str</code>, <code>datetime</code>, <code>timedelta</code> -  Start of the date range to query for events. Defaults to None.\n  end_date: <code>int</code>, <code>float</code>, <code>str</code>, <code>datetime</code> - End of the date range to query for events.  Defaults to None.\n\n\n<code>equals</code>(self, term, values)\n<p>Adds an <code>equals</code> filter to the query.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term equals the\nindicated value(s).</p>\n<p>Example:\n    <code>EventQuery(**kwargs).equals('file.category', 'Document')</code> creates a query which will return file events\n    where the <code>file.category</code> field is equal to <code>Document</code>.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n<li>values: <code>str | List[str]</code> - The value(s) for the term to match.</li>\n</ul>\n<code>not_equals</code>(self, term, values)\n<p>Adds an <code>not_equals</code> filter to the query. The opposite of the <code>equals</code> filter.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term does not equal the indicated value(s).</p>\n<p>Example:\n    <code>EventQuery(**kwargs).not_equals('file.category', 'Document')</code> creates a query which will return file events where the <code>file.category</code> field is NOT equal to <code>Document</code>.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n<li>values: <code>str | List[str]</code> - The value(s) for the term to not match.</li>\n</ul>\n<code>exists</code>(self, term)\n<p>Adds an <code>exists</code> filter to the query. The opposite of the <code>does_not_exist</code> filter.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term is not <code>null</code>.</p>\n<p>Example:\n    <code>EventQuery(**kwargs).exists('risk.trustReason')</code> creates a query which will return file events where the <code>risk.trustReason</code> field is populated with any not null value.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n</ul>\n<code>does_not_exist</code>(self, term)\n<p>Adds a <code>does_not_exist</code> filter to the query.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term is <code>null</code>.</p>\n<p>Example:\n    <code>EventQuery(**kwargs).does_not_exist('risk.TrustReason')</code> creates a query which will return file events where the <code>risk.trustReason</code> field is null.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n</ul>\n<code>greater_than</code>(self, term, value)\n<p>Adds a <code>greater_than</code> filter to the query. The opposite of the <code>less_than</code> filter.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term is greater than the indicated value.</p>\n<p>Example:\n    <code>EventQuery(**kwargs).greater_than('risk.score', 10)</code> creates a query which will return file events where the <code>risk.score</code> field is greater than <code>10</code>.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n<li>values: <code>int</code> - The value for the term to be greater than.</li>\n</ul>\n<code>less_than</code>(self, term, value)\n<p>Adds a <code>less_thn</code> filter to the query. The opposite of the <code>greater_than</code> filter.</p>\n<p>When passed as part of a query, returns events when the field corresponding to the filter term is less than the indicated value.</p>\n<p>Example:\n    <code>EventQuery(**kwargs).less_than('risk.score', 10)</code> creates a query which will return file events where the <code>risk.score</code> field is less than <code>10</code>.</p>\n<p>Parameters:</p>\n<ul>\n<li>term: <code>str</code> - The term which corresponds to a file event field.</li>\n<li>values: <code>int</code> - The value for the term to be less than.</li>\n</ul>\n<code>matches_any</code>(self)\n<p>Sets operator to combine multiple filters to <code>OR</code>.\nReturns events that match at least one of the filters in the query.</p>\n<p>Default operator is <code>AND</code>, which returns events that match all filters in the query.</p>"},{"location":"sdk/clients/file_event_queries/#query-building","title":"Query Building","text":"<p>The <code>EventQuery</code> class can be imported directly from the <code>incydr</code> module.</p>\n<pre><code># import the EventQuery class\nfrom incydr import EventQuery\n</code></pre>\n<p>The <code>EventQuery(start_date=None, end_date=None)</code> class takes a start date and/or an end date in various forms, including a timestamp string, a datetime object, or a number (float, int).</p>\n<p>The <code>start_date</code> param can also take a duration (ex. filter for events which occurred in the last week) in the form of an ISO-duration string or a <code>datetime.timedelta</code> object.</p>\n<p>All of the following examples are valid <code>start_date</code> values.\n<pre><code>import datetime\n\n# Filter for events after September 10th, 2020\nstart_str = \"2020-09-10 11:12:13\"  # string formatted as \"%Y-%m-%d %H:%M:%S\"\n\nstart_datetime = datetime.datetime(2020, 9, 10, 11, 12, 13) # datetime object\n\nstart_utc = 1599736333.0  # UTC timestamp\n\n# Filter for events that occurred in the last 7 days\nstart_timedelta = datetime.timedelta(days=7)\n\nstart_iso_duration = \"P7D\"\n</code></pre></p>\n<p>Additional filters can be attached to the query by using the <code>EventQuery</code> class methods.  Each of these methods takes a <code>str</code> term to filter on as their first argument,\nspecifically an <code>EventSearchTerm</code> which matches a file event field (ex: <code>'risk.severity'</code>).  If applicable the second argument is the value(s) to compare.</p>\n<p>The following operators are available for filtering:</p>\n<ul>\n<li><code>equals</code></li>\n<li><code>not_equals</code></li>\n<li><code>exists</code></li>\n<li><code>does_not_exist</code></li>\n<li><code>greater_than</code></li>\n<li><code>less_than</code></li>\n</ul>\n<p>More detailed documentation on these methods is available above in the <code>EventQuery</code> documentation.</p>\n<pre><code># to create a query which filters events which have the file category of 'Document' or 'Audio' from the past 1 day\n\nquery = EventQuery('P1D').equals('file.category', ['Document', 'Audio'])\n\n# to create a query which filters events based on the following criteria:\n#       - occurred from 10-10-2020 to 11-10-2020.\n#       - 'event.action' is not equal to 'file-created'\n#       - 'risk.score' is greater than 10\n\nstart_date = \"2020-10-10 11:12:13\"\nend_date = \"2020-11-10 11:12:13\"\nquery = EventQuery(start_date, end_date).not_equals('event.action', 'file-created').greater_than('risk.score', 10)\n</code></pre>\n<p>To assist with the <code>equals()</code> and <code>not_equals()</code> methods, the following search terms have corresponding enum classes to specify valid filter values:</p>\n<ul>\n<li><code>file.category</code>: <code>FileCategory</code></li>\n<li><code>event.action</code>: <code>EventAction</code></li>\n<li><code>source.category</code>: <code>SourceCategory</code></li>\n<li><code>destination.category</code>: <code>DestinationCategory</code></li>\n<li><code>event.shareType</code>: <code>ShareType</code></li>\n<li><code>report.type</code>: <code>ReportType</code></li>\n<li><code>risk.indicators.name</code>: <code>RiskIndicators</code></li>\n<li><code>risk.severity</code>: <code>RiskSeverity</code></li>\n<li><code>risk.trustReason</code>: <code>TrustReason</code></li>\n</ul>\n<p>For example, the <code>EventAction</code> enum class provides all valid values for the <code>event.action</code> file event field.</p>\n<p>Pass the event query object to the <code>file_events.v2.search()</code> method to get the results.</p>"},{"location":"sdk/clients/file_event_queries/#saved-searches","title":"Saved Searches","text":"<p>You can convert a saved search response object into an <code>EventQuery</code> to be used for searching using the\n<code>EventQuery.from_saved_search()</code> class method:</p>\n<pre><code>import incydr\n\nclient = incydr.Client(**kwargs)\n\nsaved_search = client.file_events.v2.get_saved_search(\"&lt;saved_search_id&gt;\")\nquery = incydr.EventQuery.from_saved_search(saved_search)\n\nresults = client.file_events.v2.search(query)\n</code></pre>"},{"location":"sdk/clients/file_event_queries/#pagination","title":"Pagination","text":"<p>To facilitate paging when a search query results in more total file events found than the <code>.page_size</code> value of the query\n(the maximum page size is <code>10,000</code> events), the file events search endpoint\naccepts a \"page token\" parameter, which indicates which event ID the currently requested page should start at.</p>\n<p>By default, an <code>EventQuery</code> sets the <code>.page_token</code> value to an empty string (<code>\"\"</code>), which tells the file events\nservice that this is the initial query and that it should return the next page token value in the response.</p>\n\n<p>Note</p>\n<p>If <code>.page_token</code> is set to <code>None</code>, then the response will not contain a next page token value, and pagination will need to be done\nmanually by incrementing the <code>.page_num</code> property of the query.</p>\n<p>Using page numbers will only result in a maximum of 10,000 events returned, so it is recommended to always use page tokens.</p>\n\n<p>The <code>client.file_events.v2.search()</code> method will automatically update the query object it receives with the next page\ntoken, so fetching multiple pages of results is as simple as re-running the <code>.search()</code> method with the same query\nobject until the server sends a <code>null</code> page token value (meaning there are no more results):</p>\n<pre><code>import incydr\nfrom datetime import timedelta\n\nclient = incydr.Client(**kwargs)\nquery = incydr.EventQuery(start_date=timedelta(days=10))\n\nwhile query.page_token is not None:\n    response = client.file_events.v2.search(query)\n    for event in response.file_events:\n        ... # process events here\n</code></pre>"},{"location":"sdk/clients/file_events/","title":"File Events","text":"class <code>_incydr_sdk.file_events.client.FileEventsV2</code>(parent) <p>Client for <code>/v2/file-events</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; from incydr import EventQuery\n&gt;&gt;&gt;\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; query = EventQuery(start_date='P30D').equals('file.category', ['Document', 'SourceCode'])\n&gt;&gt;&gt; client.file_events.v2.search(query)\n</code></pre> <code>get_saved_search</code>(self, search_id) <p>Get a single saved search.</p> <p>Parameters:</p> <ul> <li>search_id: <code>str</code> - The unique ID of the saved search.</li> </ul> <p>Returns: A <code>SavedSearch</code> object.</p> <code>list_saved_searches</code>(self) <p>Get all saved searches.</p> <p>Returns: A list of <code>SavedSearch</code> objects.</p> <code>search</code>(self, query) <p>Search for file events.</p> <p>If the search response contains a <code>next_page_token</code> value, it will automatically be set on the query object's <code>.page_token</code> field. So if a query results in more total events than your set page size, you can just make another call to <code>.search()</code> with the same query object to fetch the next page. To get all events from a query, continue calling search with the same <code>EventQuery</code> object until the response has an empty <code>.file_events</code> field.</p> <p>See File Event Pagination for more details.</p> <p>Parameters:</p> <ul> <li>query: <code>EventQuery</code> (required) - The query object to filter file events by different fields.</li> </ul> <p>Returns: A <code>FileEventsPage</code> object.</p>"},{"location":"sdk/clients/risk_profiles/","title":"Risk Profiles","text":"class <code>_incydr_sdk.risk_profiles.client.RiskProfilesV1</code>(parent) <p>Client for <code>/v1/user-risk-profiles</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.risk_profiles.v1.get_page()\n</code></pre> <code>get_page</code>(self, page_num=1, page_size=None, manager_id=None, title=None, division=None, department=None, employment_type=None, country=None, region=None, locality=None, active=None, deleted=None, support_user=None) <p>Get a page of risk profiles.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page.</li> <li>manager_id: <code>str</code> - The Code42 user ID of the user's manager to search for.</li> <li>title: <code>str</code> - The user's job title to search for.</li> <li>division: <code>str</code> - The user's division to search for.</li> <li>department: <code>str</code> - The user's department to search for.</li> <li>employment_type: <code>str</code> - The user's employment type to search for.</li> <li>country: <code>str</code> - The user's country to search for.</li> <li>region: <code>str</code> - The user's region (state) to search for.</li> <li>locality: <code>str</code> - The user's locality (city) to search for. ** active: <code>bool | None</code> - When true, return only active users. When false, return only inactive users.                                Defaults to <code>None</code> (returning both).</li> <li>deleted: <code>bool | None</code> - When true, return only deleted users. When false, return only non-deleted users.                                Defaults to returning both.</li> <li>support_user: <code>bool | None</code> - When true, return only support users. When false, return only non-support users.                                     Defaults to returning both</li> </ul> <p>Returns: A 'RiskProfilesPage' object.</p> <code>get_risk_profile</code>(self, user_id) <p>Get a single risk profile.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> </ul> <p>Returns: A <code>RiskProfile</code> object representing the risk profile.</p> <code>iter_all</code>(self, page_size=None, manager_id=None, title=None, division=None, department=None, employment_type=None, country=None, region=None, locality=None, active=None, deleted=None, support_user=None) <p>Iterate over all risk profiles.</p> <p>Accepts the same parameters as <code>.get_page()</code> except <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>RiskProfile</code> objects.</p> <code>update</code>(self, user_id, notes=None, start_date=None, end_date=None) <p>Updates a risk profile.</p> <p>Parameters</p> <ul> <li>notes: <code>str</code> - Additional notes for the risk profile.</li> <li>start_date: <code>datetime</code> - The starting date for the user. Accepts a datetime object or a string in the format yyyy-MM-dd (UTC) format. Pass an empty string to clear the field.</li> <li>end_date: <code>datetime</code> - The departure date for the user.  Accepts a datetime object or a string in the format yyyy-MM-dd (UTC) format.  Pass an empty string to clear the field.</li> </ul> <p>Returns: A <code>RiskProfile</code> object.</p>"},{"location":"sdk/clients/sessions/","title":"Sessions","text":"class <code>_incydr_sdk.sessions.client.SessionsV1</code>(parent) <p>Client for <code>/v1/sessions</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; from incydr.enums.items import SessionStates\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.items.v1.change_state(\"&lt;session_id&gt;\", SessionStates.CLOSED)\n</code></pre> <code>add_note</code>(self, session_id, note_content) <p>Add a note to a session, specified by ID.</p> <p>Parameters:</p> <ul> <li>session_id: <code>str</code> (required) - The session ID.</li> <li>note_content: <code>str</code> (required) -  The note content to add. Max 2000 characters.</li> </ul> <p>Returns: A <code>requests.Response</code> object indicating success.</p> <code>get_page</code>(self, actor_id=None, start_time=None, end_time=None, has_alerts=True, sort_key=None, risk_indicators=None, sort_dir=None, states=None, severities=None, rule_ids=None, watchlist_ids=None, page_num=0, page_size=50, content_inspection_status=None) <p>Get a page of items.</p> <p>Filter results by passing the appropriate parameters.</p> <p>Parameters:</p> <ul> <li>actor_id: <code>str | None</code> - Only include items generated by this actor.</li> <li>start_time: <code>datetime | str | int | None</code> - Only include items beginning on or after this date and time.  Can be a date-formatted string, a <code>datetime</code> instance, or a POSIX <code>int</code> timestamp.</li> <li>end_time: <code>datetime | str | int | None</code> - Only include items beginning before this date and time.  Can be a date-formatted string, a <code>datetime</code> instance, or a POSIX <code>int</code> timestamp.</li> <li>has_alerts: <code>bool</code> - Only include items that have a matching alert status. Defaults to <code>True</code>.</li> <li>sort_key: <code>SortKeys</code> - <code>end_time</code> or <code>score</code>. Value on which the results will be sorted. Defaults to <code>end time</code>.</li> <li>risk_indicators: <code>List[str] | None</code> - List of risk indicator IDs that must be present on the items before they are returned.</li> <li>sort_dir: <code>SortDirection</code> - <code>asc</code> for ascending or <code>desc</code> for descending. The direction in which to sort the response based on the corresponding key. Defaults to <code>desc</code>.</li> <li>states: List[<code>SessionStates</code>] - Optional list of one or more session states to filter upon. Only include items that include these matching states.</li> <li>severities: <code>List[int] | None</code> - Only include items that have the matching severity value(s). 0 = no risk, 1 = low, 2 = moderate, 3 = high, 4 = critical</li> <li>rule_ids: <code>List[str] | None</code> - Optional list of one or more rule ids to filter upon.</li> <li>watchlist_ids: <code>List[str] | None</code> - Optional list of one or more watchlist ids to filter upon.</li> <li>page_num: <code>int</code> - Page number for results, starting at 0.</li> <li>page_size: <code>int</code> - Max number of results to return per page, between 1 and 50 inclusive. Defaults to 50.</li> <li>content_inspection_status: <code>List[ContentInspectionStatuses] | None</code> - The content inspection status(es) to limit the search to.</li> </ul> <p>Returns: A <code>SessionsPage</code> object.</p> <code>get_session_details</code>(self, session_id) <p>Get details of a session.</p> <p>Parameters:</p> <ul> <li>session_id: <code>str</code> (required) - The session ID.</li> </ul> <p>Returns: A <code>Session</code> object representing the session.</p> <code>get_session_events</code>(self, session_id) <p>Gets details for the events associated with alerted-on session activity.</p> <p>Returns the same response object as the file event client search method.</p> <p>Parameters:</p> <ul> <li>session_id: <code>str</code> (required) - The session ID.</li> </ul> <p>Returns: A <code>FileEventsPage</code> object.</p> <code>iter_all</code>(self, actor_id=None, start_time=None, end_time=None, has_alerts=True, sort_key=None, risk_indicators=None, sort_dir=None, states=None, severities=None, rule_ids=None, watchlist_ids=None, page_size=50, content_inspection_status=None) <p>Iterate over all items.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Session</code> objects.</p> <code>update_state_by_criteria</code>(self, new_state, actor_id=None, start_time=None, end_time=None, has_alerts=True, risk_indicators=None, states=None, severities=None, rule_ids=None, watchlist_ids=None, content_inspection_status=None) <p>Change the state of all items matching the filter criteria.</p> <p>Makes an initial API call to update the desired items to the <code>state</code>. Processes up to 500 session IDs at a time and continues to make subsequent API calls until all items matching the criteria are updated.</p> <p>Parameters:</p> <ul> <li>actor_id: <code>str | None</code> - The ID of the actor to limit the search to.</li> <li>start_time: <code>datetime | str | int | None</code> - Only include items beginning on or after this date and time.  Can be a date-formatted string, a <code>datetime</code> instance, or a POSIX <code>int</code> timestamp.</li> <li>end_time: <code>datetime | str | int | None</code> - Only include items beginning before this date and time.  Can be a date-formatted string, a <code>datetime</code> instance, or a POSIX <code>int</code> timestamp.</li> <li>has_alerts: <code>bool</code> - Only include items that have a matching alert status. Defaults to <code>True</code>.</li> <li>sort_key: <code>SortKeys</code> - <code>end_time</code> or <code>score</code>. Value on which the results will be sorted. Defaults to <code>end time</code>.</li> <li>risk_indicators: <code>List[str] | None</code> - List of risk indicator IDs that must be present on the items before they are returned.</li> <li>sort_dir: <code>SortDirection</code> - <code>asc</code> for ascending or <code>desc</code> for descending. The direction in which to sort the response based on the corresponding key. Defaults to <code>desc</code>.</li> <li>states: List[<code>SessionStates</code>] - Only include items that have a matching state.</li> <li>severities: <code>List[int | None</code> - Only include items that have a matching severity value. 0 = no risk, 1 = low, 2 = moderate, 3 = high, 4 = critical</li> <li>rule_ids: <code>List[str] | None</code> - Optional list of rule ids to filter upon.</li> <li>watchlist_ids: <code>List[str] | None</code> - Optional list of watchlist ids to filter upon.</li> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page, between 1 and 50 inclusive. Defaults to 50.</li> <li>content_inspection_status: <code>List[ContentInspectionStatuses] | None</code> - The content inspection status(es) to limit the search to.</li> </ul> <p>Returns: An array of all <code>requests.Response</code> objects received during processing.</p> <code>update_state_by_id</code>(self, session_ids, new_state) <p>Change the state of a one or more items specified by ID.</p> <p>Processes up to 100 session IDs at a time and continues to make subsequent API calls until all indicated items are updated.</p> <p>Parameters:</p> <ul> <li>session_id: <code>str | List[str]</code> (required) - One or more session IDs.</li> <li>state: <code>SessionStates</code> - The new state for the desired items.</li> </ul> <p>Returns: An array of all <code>requests.Response</code> objects received during processing.</p>"},{"location":"sdk/clients/trusted_activities/","title":"Trusted Activities","text":"class <code>_incydr_sdk.trusted_activities.client.TrustedActivitiesV2</code>(parent) <p>Client for <code>/v2/trusted-activites</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.trusted_activities.v2.get_page()\n</code></pre> <code>add_account_name</code>(self, account_name, description=None, dropbox=False, one_drive=False) <p>Trust activity for a specific corporate account for cloud sync apps installed on user devices.</p> <p>Parameters:</p> <ul> <li>account_name: <code>str</code> (required) - Account name to trust for the specified cloud sync services.</li> <li>description: <code>str</code> - Optional description of the trusted activity.</li> <li>dropbox: <code>bool</code> - Whether to trust Dropbox as a cloud sync service.  Defaults to False.</li> <li>one_drive <code>bool</code> - Whether to trust OneDrive as a cloud sync service.  Defaults to False.</li> </ul> <p>At least 1 activity action group (dropbox, one_drive) is required to be trusted.</p> <p>Returns: A <code>TrustedActivity</code> object representing the newly created trusted activity.</p> <code>add_domain</code>(self, domain, description=None, file_upload=None, cloud_sync_services=None, cloud_share_services=None, email_share_services=None, git_push=None) <p>Trust activity across an entire domain.</p> <p>Parameters:</p> <ul> <li>domain: <code>str</code> (required) - Domain to trust.</li> <li>description: <code>str</code> - Optional description of the trusted activity.</li> <li>file_upload: <code>bool</code> - Whether to trust activity if the tab URL or tab title includes this domain.</li> <li>cloud_sync_services: <code>List[CloudSyncApps]</code> - Activity is trusted if the username signed in to the     sync app is on this domain.  Supported cloud storage apps for file syncing are     <code>BOX</code>, <code>GOOGLE_DRIVE</code>, <code>ICLOUD</code> and/or <code>ONE_DRIVE</code>.</li> <li>cloud_share_services: <code>List[CloudShareApps]</code> - Activity is trusted if the user it's shared with is on this domain.     Supported cloud storage services for file sharing are <code>BOX</code>, <code>GOOGLE_DRIVE</code> and/or <code>ONE_DRIVE</code>. You must     have a cloud connector configured for your tenant to support this trusted action.</li> <li>email_share_services: <code>List[EmailServices]</code> - Activity is trusted if the email recipient is on this domain.     Supported email services are <code>GMAIL</code> and/or <code>MICROSOFT_365</code>.  You must have an email connector configured     for your tenant to support this trusted action.</li> <li>git_push: <code>bool</code> - Whether to trust Git push events to this domain.</li> </ul> <p>Returns: A <code>TrustedActivity</code> object representing the newly created trusted activity.</p> <code>add_git_repository</code>(self, git_uri, description=None) <p>Trust file uploads to a git repository.</p> <p>Parameters:</p> <ul> <li>git_uri: <code>str</code> (required) - Git URI to trust (ex: <code>bitbucket.org:exampleent/myrepo</code>).</li> <li>description: <code>str</code> - Optional description of the trusted activity.</li> </ul> <p>Returns: A <code>TrustedActivity</code> object representing the newly created trusted activity.</p> <code>add_slack_workspace</code>(self, workspace_name, description=None) <p>Trust activity uploaded through a Slack workspace.</p> <p>Parameters:</p> <ul> <li>workspace_name: <code>str</code> (required) - Name of the Slack workspace to trust.</li> <li>description: <code>str</code> - Optional description of the trusted activity.</li> </ul> <p>Returns: A <code>TrustedActivity</code> object representing the newly created trusted activity.</p> <code>add_url_path</code>(self, url, description=None) <p>Trust browser uploads to only part of a domain by including a specific path.  For example: <code>github.com/company</code> will only trust uploads to the <code>company</code> repository.</p> <p>Parameters:</p> <ul> <li>url: <code>str</code> (required) - URL path to trust (ex: <code>example.com/path</code>).</li> <li>description: <code>str</code> - Optional description of the trusted activity.</li> </ul> <p>Returns: A <code>TrustedActivity</code> object representing the newly created trusted activity.</p> <code>delete</code>(self, activity_id) <p>Delete a trusted activity.</p> <p>Parameters:</p> <ul> <li>activity_id <code>int</code> (required) - Unique ID for the trusted activity.</li> </ul> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; client.trusted_activities.v2.delete(23)\n&lt;Response [200]&gt;\n</code></pre> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>get_page</code>(self, page_num=1, page_size=None, activity_type=None, sort_key=None, sort_direction=None) <p>Get a page of trusted activities. Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page. Defaults to client's <code>page_size</code> setting.</li> <li>activity_type: <code>ActivityType</code> - The type of the trusted activity.</li> <li>sort_key: <code>SortKeys</code> - The key by which to sort the returned list.</li> <li>sort_dir: <code>SortDirection</code> - The order in which to sort the returned list.</li> </ul> <p>Returns: A <code>TrustedActivitiesPage</code> object.</p> <code>get_trusted_activity</code>(self, activity_id) <p>Get a single trusted activity.</p> <p>Parameters:</p> <ul> <li>activity_id: <code>str</code> (required) - The unique ID for the trusted activity.</li> </ul> <p>Returns: A <code>TrustedActivity</code> object representing the trusted activity.</p> <code>iter_all</code>(self, page_size=None, activity_type=None, sort_key=None, sort_direction=None) <p>Iterate over all trusted activities.</p> <p>Accepts the same parameters as <code>.get_page()</code> except <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>TrustedActivity</code> objects.</p> <code>update</code>(self, trusted_activity) <p>Updates a trusted activity. The following fields can be updated:</p> <ul> <li><code>description</code>: A description of the trusted activity.</li> <li><code>value</code>: The value of the trusted activity, e.g. domain name or Slack workspace name.</li> <li><code>type</code>: The type of the trusted activity.  One of <code>ActivityType</code>.</li> <li><code>activity_action_group</code>: The list of actions associated with the activity.</li> </ul> <p>Parameters</p> <ul> <li>trusted_activity: <code>TrustedActivity</code> (required) - The modified trusted activity object.</li> </ul> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; activity = client.trusted_activities.get_trusted_activity(2)\n&gt;&gt;&gt; activity.description = \"New description\"\n&gt;&gt;&gt; client.trusted_activities.v2.update(activity)\n</code></pre> <p>Returns: A <code>TrustedActivity</code> object with updated values from server.</p>"},{"location":"sdk/clients/users/","title":"Users","text":"class <code>_incydr_sdk.users.client.UsersV1</code>(parent) <p>Client for <code>/v1/users</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.users.v1.get_page()\n</code></pre> <code>activate</code>(self, user_id) <p>Activate a user.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>add_roles</code>(self, user_id, roles) <p>Add a role, or multiple roles, to a user's existing roles.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> <li>roles: <code>str | List[str]</code> The roles to add to the user. Accepts either role IDs or role names (case-sensitive).\"</li> </ul> <p>Returns: A <code>UpdateRolesResponse</code> object.</p> <code>deactivate</code>(self, user_id) <p>Deactivate a user.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>get_devices</code>(self, user_id, active=None, blocked=None, page_num=1, page_size=None, sort_dir=, sort_key=) <p>Get a page of devices associated with a specific user.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> <li>active: <code>bool</code> - Whether or not the device is active. If true, the device will show up on reports, etc.</li> <li>blocked: <code>bool</code> - Whether or not the device is blocked.  If true, restores and logins are disabled.</li> <li>page_num: <code>int</code> - Page number for results. Defaulting to 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page. Defaulting to client's <code>page_size</code> settings.</li> <li>sort_dir: <code>SortDirection</code> - 'asc' or 'desc'. The direction in which to sort the response based on the corresponding key. Defaults to 'asc'.</li> <li>sort_key: <code>SortKeys</code> - One or more values on which the response will be sorted. Defaults to device name.</li> </ul> <p>Returns: A <code>DevicesPage</code> object.</p> <code>get_page</code>(self, active=None, blocked=None, username=None, page_num=1, page_size=None) <p>Get a page of users.</p> <p>Filter results by passing the appropriate parameters:</p> <p>Parameters:</p> <ul> <li>active: <code>bool | None</code> - When true, return only active users. When false, return only inactive users. Defaults to returning both.</li> <li>blocked: <code>bool | None</code> - When true, return only blocked users. When false, return only unblocked users. Defaults to returning both.</li> <li>username: <code>str</code> - The username of a user to search for.</li> <li>page_num: <code>int</code> - Page number for results. Defaulting to 1.</li> <li>page_size: <code>int</code> - Max number of results to return per page. Defaulting to client's <code>page_size</code> setting.</li> </ul> <p>Returns: A <code>UsersPage</code> object.</p> <code>get_role</code>(self, role) <p>Get details for a single role.</p> <p>Parameters:</p> <ul> <li>role: <code>str</code> (required) - Role ID or role name (case-sensitive).</li> </ul> <p>Returns: A <code>Role</code> object.</p> <code>get_user</code>(self, user) <p>Get a single user.</p> <p>Parameters:</p> <ul> <li>user: <code>str</code> - The unique ID for the user or the username for the user.</li> </ul> <p>Returns: A <code>User</code> object representing the user.</p> <code>iter_all</code>(self, active=None, blocked=None, username=None, page_size=None) <p>Iterate over all users.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>User</code> objects.</p> <code>list_roles</code>(self) <p>Get a list of all available roles that can be assigned by the current user.</p> <p>Parameters:</p> <p>Returns: A list of <code>Role</code> objects.</p> <code>list_user_roles</code>(self, user_id) <p>Get a list of roles associated with a specific user.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> </ul> <p>Returns: A list of <code>UserRole</code> objects.</p> <code>move</code>(self, user_id, org_guid) <p>Move a user to a specified organization</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> - The unique ID for the user.</li> <li>org_guid: <code>str</code> The orgGuid of the org to move the user to.\"</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>remove_roles</code>(self, user_id, roles) <p>Remove a role, or multiple roles, from a user's current roles.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> <li>roles: <code>str | List[str]</code> The roles to remove from the user. Accepts either role IDs or role names.\"</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>update_roles</code>(self, user_id, roles) <p>Replace the roles associated with a user.</p> <p>Parameters:</p> <ul> <li>user_id: <code>str</code> (required) - The unique ID for the user.</li> <li>roles: <code>str | List[str]</code> The new roles to assign the user (ex: desktop-user). These will replace the existing roles assigned to the user. Accepts either role IDs or role names.\"</li> </ul> <p>Returns: A <code>UpdateRolesResponse</code> object.</p>"},{"location":"sdk/clients/watchlists/","title":"Watchlists","text":"class <code>_incydr_sdk.watchlists.client.WatchlistsV1</code>(parent) <p>Client for <code>/v1/watchlists</code> endpoints.</p> <p>Usage example:</p> <pre><code>&gt;&gt;&gt; import incydr\n&gt;&gt;&gt; client = incydr.Client(**kwargs)\n&gt;&gt;&gt; client.watchlists.v1.get_page()\n</code></pre> <code>add_departments</code>(self, watchlist_id, departments) <p>Include departments on a watchlist. Use the <code>departments</code> client to see available departments.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>departments: <code>str</code>, <code>List[str]</code> (required) - List of departments to include on the watchlist.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>add_directory_groups</code>(self, watchlist_id, group_ids) <p>Include directory groups on a watchlist. Use the <code>directory_groups</code> client to see available directory groups.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>group_ids: <code>str</code>, <code>List[str]</code> (required) - List of directory group IDs to include on the watchlist.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>add_excluded_users</code>(self, watchlist_id, user_ids) <p>Exclude individual users from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>user_ids: <code>str</code>, <code>List[str]</code> (required) - List of unique user IDs to exclude from the watchlist. A maximum     of 100 users can be processed in a single request.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>add_included_users</code>(self, watchlist_id, user_ids) <p>Include individual users on a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>user_ids: <code>str</code>, <code>List[str]</code> (required) - List of unique user IDs to include on the watchlist. A maximum     of 100 users can be processed in a single request.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>create</code>(self, watchlist_type, title=None, description=None) <p>Create a new watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_type: <code>WatchlistType</code> (required) - Type of the watchlist to create.</li> <li>title: The required title for a custom watchlist.</li> <li>description: The optional description for a custom watchlist.</li> </ul> <p>Returns: A 'Watchlist` object.</p> <code>delete</code>(self, watchlist_id) <p>Delete a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>get</code>(self, watchlist_id) <p>Get a single watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: A <code>Watchlist</code> object.</p> <code>get_department</code>(self, watchlist_id, department) <p>Get an included department from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>department: <code>str</code> (required) - A included department.</li> </ul> <p>Returns: An <code>IncludedDepartment</code> object.</p> <code>get_directory_group</code>(self, watchlist_id, group_id) <p>Get an included directory group from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>group_id: <code>str</code> (required) - Directory group ID.</li> </ul> <p>Returns: An <code>IncludedDirectoryGroup</code> object.</p> <code>get_excluded_user</code>(self, watchlist_id, user_id) <p>Get an excluded user from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>user_id: <code>str</code> (required) - Unique user ID.</li> </ul> <p>Returns: A <code>WatchlistUser</code> object.</p> <code>get_id_by_name</code>(self, name) <p>Get a watchlist ID by either its type (ex: <code>DEPARTING_EMPLOYEE</code>) or its title in the case of <code>CUSTOM</code> watchlists.</p> <p>Parameters:</p> <ul> <li>name: <code>str</code>, <code>WatchlistType</code> (required) - A <code>WatchlistType</code> or in the case of <code>CUSTOM</code> watchlists, the watchlist <code>title</code>.</li> </ul> <p>Returns: A watchlist ID (<code>str</code>).</p> <code>get_included_user</code>(self, watchlist_id, user_id) <p>Get an included user from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>user_id: <code>str</code> (required) - Unique user ID.</li> </ul> <p>Returns: A <code>WatchlistUser</code> object.</p> <code>get_member</code>(self, watchlist_id, user_id) <p>Get a single member of a watchlist. A member may have been added as an included user, or is a member of an included department, etc.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>user_id: <code>str</code> (required) - Unique user ID.</li> </ul> <p>Returns: A <code>WatchlistUser</code> object.</p> <code>get_page</code>(self, page_num=1, page_size=None, user_id=None) <p>Get a page of watchlists.</p> <p>Filter results by passing appropriate parameters:</p> <p>Parameters:</p> <ul> <li>page_num: <code>int</code> - Page number for results, starting at 1.</li> <li>page_size: <code>int</code> - Max number of results to return for a page.</li> <li>user_id: <code>str</code> - Matches watchlists where the user is a member.</li> </ul> <p>Returns: A <code>WatchlistsPage</code> object.</p> <code>iter_all</code>(self, page_size=None, user_id=None) <p>Iterate over all watchlists.</p> <p>Accepts the same parameters as <code>.get_page()</code> excepting <code>page_num</code>.</p> <p>Returns: A generator yielding individual <code>Watchlist</code> objects.</p> <code>list_departments</code>(self, watchlist_id) <p>List departments included on a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: An <code>IncludedDepartmentsList</code> object.</p> <code>list_directory_groups</code>(self, watchlist_id) <p>List directory groups included on a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: An <code>IncludedUsersList</code> object.</p> <code>list_excluded_users</code>(self, watchlist_id) <p>List individual users excluded from a watchlist.</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: An <code>ExcludedUsersList</code> object.</p> <code>list_included_users</code>(self, watchlist_id) <p>List individual users included on a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> </ul> <p>Returns: An <code>IncludedUsersList</code> object.</p> <code>list_members</code>(self, watchlist_id) <p>Get a list of all members of a watchlist. These users may have been added as an included user, or are members of an included department, etc.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code>(required) - Watchlist ID.</li> </ul> <p>Returns: A <code>WatchlistMembersList</code> object.</p> <code>remove_departments</code>(self, watchlist_id, departments) <p>Remove included departments from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> - Watchlist ID or a watchlist type.  An ID must be provided for custom watchlists.</li> <li>departments: <code>str</code>, <code>List[str]</code> (required) - List of departments to remove from the watchlist.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>remove_directory_groups</code>(self, watchlist_id, group_ids) <p>Remove included directory groups from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>group_ids: <code>str</code>, <code>List[str]</code> (required) - List of directory group IDs to remove from the watchlist.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>remove_excluded_users</code>(self, watchlist_id, user_ids) <p>Remove excluded users from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>user_ids: <code>str</code>, <code>List[str]</code> (required) - List of unique user IDs to remove from the exclusion list. A     maximum of 100 users can be processed in a single request.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>remove_included_users</code>(self, watchlist_id, user_ids) <p>Remove included users from a watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist: <code>str</code> (required) - Watchlist ID.</li> <li>user_ids: <code>str</code>, <code>List[str]</code> (required) - List of unique user IDs to remove from the watchlist. A maximum     of 100 users can be processed in a single request.</li> </ul> <p>Returns: A <code>requests.Response</code> indicating success.</p> <code>update</code>(self, watchlist_id, title=None, description=None) <p>Update a custom watchlist.</p> <p>Parameters:</p> <ul> <li>watchlist_id: <code>str</code> (required) - Watchlist ID.</li> <li>title: <code>str</code> - Updated title for a custom watchlist.  Defaults to None.</li> <li>**description: <code>str</code> - Updated description for a custom watchlist.  Pass an empty string to clear this field.  Defaults to None.</li> </ul> <p>Returns: A <code>Watchlist</code> object.</p>"}]}